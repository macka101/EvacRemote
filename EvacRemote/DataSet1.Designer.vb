'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet1
    Inherits Global.System.Data.DataSet
    
    Private tablecontact As contactDataTable
    
    Private tablecontact_xtra As contact_xtraDataTable
    
    Private tabledivision As divisionDataTable
    
    Private tabledivision_xtra As division_xtraDataTable
    
    Private tablelead As leadDataTable
    
    Private tablelead_xtra As lead_xtraDataTable
    
    Private tableuser As userDataTable
    
    Private tableengineer_locations As engineer_locationsDataTable
    
    Private tabledivisionaddress As divisionaddressDataTable
    
    Private tablecompany As companyDataTable
    
    Private tablecontactaddress As contactaddressDataTable
    
    Private tablecentral_diary As central_diaryDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("contact")) Is Nothing) Then
                MyBase.Tables.Add(New contactDataTable(ds.Tables("contact")))
            End If
            If (Not (ds.Tables("contact_xtra")) Is Nothing) Then
                MyBase.Tables.Add(New contact_xtraDataTable(ds.Tables("contact_xtra")))
            End If
            If (Not (ds.Tables("division")) Is Nothing) Then
                MyBase.Tables.Add(New divisionDataTable(ds.Tables("division")))
            End If
            If (Not (ds.Tables("division_xtra")) Is Nothing) Then
                MyBase.Tables.Add(New division_xtraDataTable(ds.Tables("division_xtra")))
            End If
            If (Not (ds.Tables("lead")) Is Nothing) Then
                MyBase.Tables.Add(New leadDataTable(ds.Tables("lead")))
            End If
            If (Not (ds.Tables("lead_xtra")) Is Nothing) Then
                MyBase.Tables.Add(New lead_xtraDataTable(ds.Tables("lead_xtra")))
            End If
            If (Not (ds.Tables("user")) Is Nothing) Then
                MyBase.Tables.Add(New userDataTable(ds.Tables("user")))
            End If
            If (Not (ds.Tables("engineer_locations")) Is Nothing) Then
                MyBase.Tables.Add(New engineer_locationsDataTable(ds.Tables("engineer_locations")))
            End If
            If (Not (ds.Tables("divisionaddress")) Is Nothing) Then
                MyBase.Tables.Add(New divisionaddressDataTable(ds.Tables("divisionaddress")))
            End If
            If (Not (ds.Tables("company")) Is Nothing) Then
                MyBase.Tables.Add(New companyDataTable(ds.Tables("company")))
            End If
            If (Not (ds.Tables("contactaddress")) Is Nothing) Then
                MyBase.Tables.Add(New contactaddressDataTable(ds.Tables("contactaddress")))
            End If
            If (Not (ds.Tables("central_diary")) Is Nothing) Then
                MyBase.Tables.Add(New central_diaryDataTable(ds.Tables("central_diary")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property contact() As contactDataTable
        Get
            Return Me.tablecontact
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property contact_xtra() As contact_xtraDataTable
        Get
            Return Me.tablecontact_xtra
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property division() As divisionDataTable
        Get
            Return Me.tabledivision
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property division_xtra() As division_xtraDataTable
        Get
            Return Me.tabledivision_xtra
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property lead() As leadDataTable
        Get
            Return Me.tablelead
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property lead_xtra() As lead_xtraDataTable
        Get
            Return Me.tablelead_xtra
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property user() As userDataTable
        Get
            Return Me.tableuser
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property engineer_locations() As engineer_locationsDataTable
        Get
            Return Me.tableengineer_locations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property divisionaddress() As divisionaddressDataTable
        Get
            Return Me.tabledivisionaddress
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property company() As companyDataTable
        Get
            Return Me.tablecompany
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property contactaddress() As contactaddressDataTable
        Get
            Return Me.tablecontactaddress
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property central_diary() As central_diaryDataTable
        Get
            Return Me.tablecentral_diary
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("contact")) Is Nothing) Then
                MyBase.Tables.Add(New contactDataTable(ds.Tables("contact")))
            End If
            If (Not (ds.Tables("contact_xtra")) Is Nothing) Then
                MyBase.Tables.Add(New contact_xtraDataTable(ds.Tables("contact_xtra")))
            End If
            If (Not (ds.Tables("division")) Is Nothing) Then
                MyBase.Tables.Add(New divisionDataTable(ds.Tables("division")))
            End If
            If (Not (ds.Tables("division_xtra")) Is Nothing) Then
                MyBase.Tables.Add(New division_xtraDataTable(ds.Tables("division_xtra")))
            End If
            If (Not (ds.Tables("lead")) Is Nothing) Then
                MyBase.Tables.Add(New leadDataTable(ds.Tables("lead")))
            End If
            If (Not (ds.Tables("lead_xtra")) Is Nothing) Then
                MyBase.Tables.Add(New lead_xtraDataTable(ds.Tables("lead_xtra")))
            End If
            If (Not (ds.Tables("user")) Is Nothing) Then
                MyBase.Tables.Add(New userDataTable(ds.Tables("user")))
            End If
            If (Not (ds.Tables("engineer_locations")) Is Nothing) Then
                MyBase.Tables.Add(New engineer_locationsDataTable(ds.Tables("engineer_locations")))
            End If
            If (Not (ds.Tables("divisionaddress")) Is Nothing) Then
                MyBase.Tables.Add(New divisionaddressDataTable(ds.Tables("divisionaddress")))
            End If
            If (Not (ds.Tables("company")) Is Nothing) Then
                MyBase.Tables.Add(New companyDataTable(ds.Tables("company")))
            End If
            If (Not (ds.Tables("contactaddress")) Is Nothing) Then
                MyBase.Tables.Add(New contactaddressDataTable(ds.Tables("contactaddress")))
            End If
            If (Not (ds.Tables("central_diary")) Is Nothing) Then
                MyBase.Tables.Add(New central_diaryDataTable(ds.Tables("central_diary")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablecontact = CType(MyBase.Tables("contact"),contactDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecontact) Is Nothing) Then
                Me.tablecontact.InitVars
            End If
        End If
        Me.tablecontact_xtra = CType(MyBase.Tables("contact_xtra"),contact_xtraDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecontact_xtra) Is Nothing) Then
                Me.tablecontact_xtra.InitVars
            End If
        End If
        Me.tabledivision = CType(MyBase.Tables("division"),divisionDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledivision) Is Nothing) Then
                Me.tabledivision.InitVars
            End If
        End If
        Me.tabledivision_xtra = CType(MyBase.Tables("division_xtra"),division_xtraDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledivision_xtra) Is Nothing) Then
                Me.tabledivision_xtra.InitVars
            End If
        End If
        Me.tablelead = CType(MyBase.Tables("lead"),leadDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelead) Is Nothing) Then
                Me.tablelead.InitVars
            End If
        End If
        Me.tablelead_xtra = CType(MyBase.Tables("lead_xtra"),lead_xtraDataTable)
        If (initTable = true) Then
            If (Not (Me.tablelead_xtra) Is Nothing) Then
                Me.tablelead_xtra.InitVars
            End If
        End If
        Me.tableuser = CType(MyBase.Tables("user"),userDataTable)
        If (initTable = true) Then
            If (Not (Me.tableuser) Is Nothing) Then
                Me.tableuser.InitVars
            End If
        End If
        Me.tableengineer_locations = CType(MyBase.Tables("engineer_locations"),engineer_locationsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableengineer_locations) Is Nothing) Then
                Me.tableengineer_locations.InitVars
            End If
        End If
        Me.tabledivisionaddress = CType(MyBase.Tables("divisionaddress"),divisionaddressDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledivisionaddress) Is Nothing) Then
                Me.tabledivisionaddress.InitVars
            End If
        End If
        Me.tablecompany = CType(MyBase.Tables("company"),companyDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecompany) Is Nothing) Then
                Me.tablecompany.InitVars
            End If
        End If
        Me.tablecontactaddress = CType(MyBase.Tables("contactaddress"),contactaddressDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecontactaddress) Is Nothing) Then
                Me.tablecontactaddress.InitVars
            End If
        End If
        Me.tablecentral_diary = CType(MyBase.Tables("central_diary"),central_diaryDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecentral_diary) Is Nothing) Then
                Me.tablecentral_diary.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablecontact = New contactDataTable()
        MyBase.Tables.Add(Me.tablecontact)
        Me.tablecontact_xtra = New contact_xtraDataTable()
        MyBase.Tables.Add(Me.tablecontact_xtra)
        Me.tabledivision = New divisionDataTable()
        MyBase.Tables.Add(Me.tabledivision)
        Me.tabledivision_xtra = New division_xtraDataTable()
        MyBase.Tables.Add(Me.tabledivision_xtra)
        Me.tablelead = New leadDataTable()
        MyBase.Tables.Add(Me.tablelead)
        Me.tablelead_xtra = New lead_xtraDataTable()
        MyBase.Tables.Add(Me.tablelead_xtra)
        Me.tableuser = New userDataTable()
        MyBase.Tables.Add(Me.tableuser)
        Me.tableengineer_locations = New engineer_locationsDataTable()
        MyBase.Tables.Add(Me.tableengineer_locations)
        Me.tabledivisionaddress = New divisionaddressDataTable()
        MyBase.Tables.Add(Me.tabledivisionaddress)
        Me.tablecompany = New companyDataTable()
        MyBase.Tables.Add(Me.tablecompany)
        Me.tablecontactaddress = New contactaddressDataTable()
        MyBase.Tables.Add(Me.tablecontactaddress)
        Me.tablecentral_diary = New central_diaryDataTable()
        MyBase.Tables.Add(Me.tablecentral_diary)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializecontact() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializecontact_xtra() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedivision() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedivision_xtra() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializelead() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializelead_xtra() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeuser() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeengineer_locations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedivisionaddress() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializecompany() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializecontactaddress() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializecentral_diary() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet1 = New DataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub contactRowChangeEventHandler(ByVal sender As Object, ByVal e As contactRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub contact_xtraRowChangeEventHandler(ByVal sender As Object, ByVal e As contact_xtraRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub divisionRowChangeEventHandler(ByVal sender As Object, ByVal e As divisionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub division_xtraRowChangeEventHandler(ByVal sender As Object, ByVal e As division_xtraRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub leadRowChangeEventHandler(ByVal sender As Object, ByVal e As leadRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub lead_xtraRowChangeEventHandler(ByVal sender As Object, ByVal e As lead_xtraRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub userRowChangeEventHandler(ByVal sender As Object, ByVal e As userRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub engineer_locationsRowChangeEventHandler(ByVal sender As Object, ByVal e As engineer_locationsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub divisionaddressRowChangeEventHandler(ByVal sender As Object, ByVal e As divisionaddressRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub companyRowChangeEventHandler(ByVal sender As Object, ByVal e As companyRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub contactaddressRowChangeEventHandler(ByVal sender As Object, ByVal e As contactaddressRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub central_diaryRowChangeEventHandler(ByVal sender As Object, ByVal e As central_diaryRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class contactDataTable
        Inherits Global.System.Data.TypedTableBase(Of contactRow)
        
        Private columncontno As Global.System.Data.DataColumn
        
        Private columndivno As Global.System.Data.DataColumn
        
        Private columnsurname As Global.System.Data.DataColumn
        
        Private columnforename As Global.System.Data.DataColumn
        
        Private columnprefdname As Global.System.Data.DataColumn
        
        Private columntitle As Global.System.Data.DataColumn
        
        Private columnsalutation As Global.System.Data.DataColumn
        
        Private columnaddrno As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columnnotepad As Global.System.Data.DataColumn
        
        Private columnjobtitle As Global.System.Data.DataColumn
        
        Private columnrolecd As Global.System.Data.DataColumn
        
        Private columnprimephone As Global.System.Data.DataColumn
        
        Private columnprimefax As Global.System.Data.DataColumn
        
        Private columnmailflag As Global.System.Data.DataColumn
        
        Private columncreatedate As Global.System.Data.DataColumn
        
        Private columnswapmailfg As Global.System.Data.DataColumn
        
        Private columnmemolines As Global.System.Data.DataColumn
        
        Private columnlastmemodt As Global.System.Data.DataColumn
        
        Private columnsource As Global.System.Data.DataColumn
        
        Private columnfaxflag As Global.System.Data.DataColumn
        
        Private columnsurname_soundex As Global.System.Data.DataColumn
        
        Private columnforename_soundex As Global.System.Data.DataColumn
        
        Private columnnotepad_temp As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnspokecd As Global.System.Data.DataColumn
        
        Private columnspokedate As Global.System.Data.DataColumn
        
        Private columnspoketime As Global.System.Data.DataColumn
        
        Private columnsecretaryname As Global.System.Data.DataColumn
        
        Private columnsecretaryphone As Global.System.Data.DataColumn
        
        Private columnsecretaryemail As Global.System.Data.DataColumn
        
        Private columndepartment As Global.System.Data.DataColumn
        
        Private columnemailflag As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnStatusFlag As Global.System.Data.DataColumn
        
        Private columnbgid As Global.System.Data.DataColumn
        
        Private columnsys_a_objects_key As Global.System.Data.DataColumn
        
        Private columnemailbounced As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "contact"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property divnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndivno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property surnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsurname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property forenameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnforename
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prefdnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprefdname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property salutationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalutation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addrnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddrno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property notepadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnotepad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jobtitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjobtitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rolecdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrolecd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property primephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprimephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property primefaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprimefax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mailflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmailflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property swapmailfgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnswapmailfg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property memolinesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmemolines
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastmemodtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastmemodt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property faxflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfaxflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property surname_soundexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsurname_soundex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property forename_soundexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnforename_soundex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property notepad_tempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnotepad_temp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spokecdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspokecd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spokedateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspokedate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spoketimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspoketime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property secretarynameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsecretaryname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property secretaryphoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsecretaryphone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property secretaryemailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsecretaryemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property departmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemailflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bgidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbgid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sys_a_objects_keyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsys_a_objects_key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailbouncedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemailbounced
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As contactRow
            Get
                Return CType(Me.Rows(index),contactRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactRowChanging As contactRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactRowChanged As contactRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactRowDeleting As contactRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactRowDeleted As contactRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddcontactRow(ByVal row As contactRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddcontactRow( _
                    ByVal contno As Integer,  _
                    ByVal divno As Integer,  _
                    ByVal surname As String,  _
                    ByVal forename As String,  _
                    ByVal prefdname As String,  _
                    ByVal title As String,  _
                    ByVal salutation As String,  _
                    ByVal addrno As Integer,  _
                    ByVal email As String,  _
                    ByVal notepad As String,  _
                    ByVal jobtitle As String,  _
                    ByVal rolecd As String,  _
                    ByVal primephone As String,  _
                    ByVal primefax As String,  _
                    ByVal mailflag As Short,  _
                    ByVal createdate As Date,  _
                    ByVal swapmailfg As Short,  _
                    ByVal memolines As Integer,  _
                    ByVal lastmemodt As Date,  _
                    ByVal source As String,  _
                    ByVal faxflag As Short,  _
                    ByVal surname_soundex As Integer,  _
                    ByVal forename_soundex As Integer,  _
                    ByVal notepad_temp As String,  _
                    ByVal account_mgr As String,  _
                    ByVal spokecd As String,  _
                    ByVal spokedate As Date,  _
                    ByVal spoketime As System.TimeSpan,  _
                    ByVal secretaryname As String,  _
                    ByVal secretaryphone As String,  _
                    ByVal secretaryemail As String,  _
                    ByVal department As String,  _
                    ByVal emailflag As Short,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal createdby As String,  _
                    ByVal StatusFlag As String,  _
                    ByVal bgid As String,  _
                    ByVal sys_a_objects_key As String,  _
                    ByVal emailbounced As Short) As contactRow
            Dim rowcontactRow As contactRow = CType(Me.NewRow,contactRow)
            Dim columnValuesArray() As Object = New Object() {contno, divno, surname, forename, prefdname, title, salutation, addrno, email, notepad, jobtitle, rolecd, primephone, primefax, mailflag, createdate, swapmailfg, memolines, lastmemodt, source, faxflag, surname_soundex, forename_soundex, notepad_temp, account_mgr, spokecd, spokedate, spoketime, secretaryname, secretaryphone, secretaryemail, department, emailflag, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, StatusFlag, bgid, sys_a_objects_key, emailbounced}
            rowcontactRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcontactRow)
            Return rowcontactRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBycontno(ByVal contno As Integer) As contactRow
            Return CType(Me.Rows.Find(New Object() {contno}),contactRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As contactDataTable = CType(MyBase.Clone,contactDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New contactDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncontno = MyBase.Columns("contno")
            Me.columndivno = MyBase.Columns("divno")
            Me.columnsurname = MyBase.Columns("surname")
            Me.columnforename = MyBase.Columns("forename")
            Me.columnprefdname = MyBase.Columns("prefdname")
            Me.columntitle = MyBase.Columns("title")
            Me.columnsalutation = MyBase.Columns("salutation")
            Me.columnaddrno = MyBase.Columns("addrno")
            Me.columnemail = MyBase.Columns("email")
            Me.columnnotepad = MyBase.Columns("notepad")
            Me.columnjobtitle = MyBase.Columns("jobtitle")
            Me.columnrolecd = MyBase.Columns("rolecd")
            Me.columnprimephone = MyBase.Columns("primephone")
            Me.columnprimefax = MyBase.Columns("primefax")
            Me.columnmailflag = MyBase.Columns("mailflag")
            Me.columncreatedate = MyBase.Columns("createdate")
            Me.columnswapmailfg = MyBase.Columns("swapmailfg")
            Me.columnmemolines = MyBase.Columns("memolines")
            Me.columnlastmemodt = MyBase.Columns("lastmemodt")
            Me.columnsource = MyBase.Columns("source")
            Me.columnfaxflag = MyBase.Columns("faxflag")
            Me.columnsurname_soundex = MyBase.Columns("surname_soundex")
            Me.columnforename_soundex = MyBase.Columns("forename_soundex")
            Me.columnnotepad_temp = MyBase.Columns("notepad_temp")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnspokecd = MyBase.Columns("spokecd")
            Me.columnspokedate = MyBase.Columns("spokedate")
            Me.columnspoketime = MyBase.Columns("spoketime")
            Me.columnsecretaryname = MyBase.Columns("secretaryname")
            Me.columnsecretaryphone = MyBase.Columns("secretaryphone")
            Me.columnsecretaryemail = MyBase.Columns("secretaryemail")
            Me.columndepartment = MyBase.Columns("department")
            Me.columnemailflag = MyBase.Columns("emailflag")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnStatusFlag = MyBase.Columns("StatusFlag")
            Me.columnbgid = MyBase.Columns("bgid")
            Me.columnsys_a_objects_key = MyBase.Columns("sys_a_objects_key")
            Me.columnemailbounced = MyBase.Columns("emailbounced")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columncontno = New Global.System.Data.DataColumn("contno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontno)
            Me.columndivno = New Global.System.Data.DataColumn("divno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndivno)
            Me.columnsurname = New Global.System.Data.DataColumn("surname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsurname)
            Me.columnforename = New Global.System.Data.DataColumn("forename", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnforename)
            Me.columnprefdname = New Global.System.Data.DataColumn("prefdname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprefdname)
            Me.columntitle = New Global.System.Data.DataColumn("title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle)
            Me.columnsalutation = New Global.System.Data.DataColumn("salutation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalutation)
            Me.columnaddrno = New Global.System.Data.DataColumn("addrno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddrno)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnnotepad = New Global.System.Data.DataColumn("notepad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnotepad)
            Me.columnjobtitle = New Global.System.Data.DataColumn("jobtitle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjobtitle)
            Me.columnrolecd = New Global.System.Data.DataColumn("rolecd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrolecd)
            Me.columnprimephone = New Global.System.Data.DataColumn("primephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprimephone)
            Me.columnprimefax = New Global.System.Data.DataColumn("primefax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprimefax)
            Me.columnmailflag = New Global.System.Data.DataColumn("mailflag", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmailflag)
            Me.columncreatedate = New Global.System.Data.DataColumn("createdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedate)
            Me.columnswapmailfg = New Global.System.Data.DataColumn("swapmailfg", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnswapmailfg)
            Me.columnmemolines = New Global.System.Data.DataColumn("memolines", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmemolines)
            Me.columnlastmemodt = New Global.System.Data.DataColumn("lastmemodt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastmemodt)
            Me.columnsource = New Global.System.Data.DataColumn("source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsource)
            Me.columnfaxflag = New Global.System.Data.DataColumn("faxflag", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfaxflag)
            Me.columnsurname_soundex = New Global.System.Data.DataColumn("surname_soundex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsurname_soundex)
            Me.columnforename_soundex = New Global.System.Data.DataColumn("forename_soundex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnforename_soundex)
            Me.columnnotepad_temp = New Global.System.Data.DataColumn("notepad_temp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnotepad_temp)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnspokecd = New Global.System.Data.DataColumn("spokecd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspokecd)
            Me.columnspokedate = New Global.System.Data.DataColumn("spokedate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspokedate)
            Me.columnspoketime = New Global.System.Data.DataColumn("spoketime", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspoketime)
            Me.columnsecretaryname = New Global.System.Data.DataColumn("secretaryname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsecretaryname)
            Me.columnsecretaryphone = New Global.System.Data.DataColumn("secretaryphone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsecretaryphone)
            Me.columnsecretaryemail = New Global.System.Data.DataColumn("secretaryemail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsecretaryemail)
            Me.columndepartment = New Global.System.Data.DataColumn("department", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartment)
            Me.columnemailflag = New Global.System.Data.DataColumn("emailflag", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemailflag)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnStatusFlag = New Global.System.Data.DataColumn("StatusFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusFlag)
            Me.columnbgid = New Global.System.Data.DataColumn("bgid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbgid)
            Me.columnsys_a_objects_key = New Global.System.Data.DataColumn("sys_a_objects_key", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsys_a_objects_key)
            Me.columnemailbounced = New Global.System.Data.DataColumn("emailbounced", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemailbounced)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncontno}, true))
            Me.columncontno.AllowDBNull = false
            Me.columncontno.Unique = true
            Me.columndivno.AllowDBNull = false
            Me.columnsurname.AllowDBNull = false
            Me.columnsurname.MaxLength = 30
            Me.columnforename.MaxLength = 20
            Me.columnprefdname.MaxLength = 20
            Me.columntitle.MaxLength = 20
            Me.columnsalutation.MaxLength = 60
            Me.columnaddrno.AllowDBNull = false
            Me.columnemail.MaxLength = 100
            Me.columnnotepad.MaxLength = 2000000000
            Me.columnjobtitle.MaxLength = 60
            Me.columnrolecd.AllowDBNull = false
            Me.columnrolecd.MaxLength = 6
            Me.columnprimephone.MaxLength = 30
            Me.columnprimefax.MaxLength = 30
            Me.columnmailflag.AllowDBNull = false
            Me.columnswapmailfg.AllowDBNull = false
            Me.columnsource.MaxLength = 20
            Me.columnnotepad_temp.MaxLength = 2000000000
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnspokecd.MaxLength = 6
            Me.columnsecretaryname.MaxLength = 30
            Me.columnsecretaryphone.MaxLength = 30
            Me.columnsecretaryemail.MaxLength = 100
            Me.columndepartment.MaxLength = 45
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnStatusFlag.AllowDBNull = false
            Me.columnStatusFlag.MaxLength = 1
            Me.columnbgid.MaxLength = 25
            Me.columnsys_a_objects_key.MaxLength = 30
            Me.columnemailbounced.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewcontactRow() As contactRow
            Return CType(Me.NewRow,contactRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New contactRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(contactRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.contactRowChangedEvent) Is Nothing) Then
                RaiseEvent contactRowChanged(Me, New contactRowChangeEvent(CType(e.Row,contactRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.contactRowChangingEvent) Is Nothing) Then
                RaiseEvent contactRowChanging(Me, New contactRowChangeEvent(CType(e.Row,contactRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.contactRowDeletedEvent) Is Nothing) Then
                RaiseEvent contactRowDeleted(Me, New contactRowChangeEvent(CType(e.Row,contactRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.contactRowDeletingEvent) Is Nothing) Then
                RaiseEvent contactRowDeleting(Me, New contactRowChangeEvent(CType(e.Row,contactRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovecontactRow(ByVal row As contactRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "contactDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class contact_xtraDataTable
        Inherits Global.System.Data.TypedTableBase(Of contact_xtraRow)
        
        Private columncontno As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnhold As Global.System.Data.DataColumn
        
        Private columnexecuted As Global.System.Data.DataColumn
        
        Private columncancelled As Global.System.Data.DataColumn
        
        Private columnorder_no As Global.System.Data.DataColumn
        
        Private columncontract_chair_no As Global.System.Data.DataColumn
        
        Private columninvoice_address As Global.System.Data.DataColumn
        
        Private columncustomer_code As Global.System.Data.DataColumn
        
        Private columnadditional_notes As Global.System.Data.DataColumn
        
        Private columncontract_contact_tel_no As Global.System.Data.DataColumn
        
        Private columncontract_contact_name As Global.System.Data.DataColumn
        
        Private columnposition As Global.System.Data.DataColumn
        
        Private columnno_of_chairs As Global.System.Data.DataColumn
        
        Private columnstart_date As Global.System.Data.DataColumn
        
        Private columndate_executed As Global.System.Data.DataColumn
        
        Private columncompletion_date As Global.System.Data.DataColumn
        
        Private columncontract_worksheet_no As Global.System.Data.DataColumn
        
        Private columntraining_done As Global.System.Data.DataColumn
        
        Private columncustomer_order_no As Global.System.Data.DataColumn
        
        Private columnworksheet_contact_name As Global.System.Data.DataColumn
        
        Private columnworksheet_contact_tel_no As Global.System.Data.DataColumn
        
        Private columnworksheet_worksheet_no As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber As Global.System.Data.DataColumn
        
        Private columnevac_chair_ref_no As Global.System.Data.DataColumn
        
        Private columnworksheet_chair_quantity As Global.System.Data.DataColumn
        
        Private columnworksheet_date As Global.System.Data.DataColumn
        
        Private columntime_in As Global.System.Data.DataColumn
        
        Private columntime_out As Global.System.Data.DataColumn
        
        Private columnduration As Global.System.Data.DataColumn
        
        Private columnadditional_chairs_invoice_no As Global.System.Data.DataColumn
        
        Private columnworksheet_no1 As Global.System.Data.DataColumn
        
        Private columnworksheet_no2 As Global.System.Data.DataColumn
        
        Private columnworksheet_no3 As Global.System.Data.DataColumn
        
        Private columnworksheet_no4 As Global.System.Data.DataColumn
        
        Private columnworksheet_no5 As Global.System.Data.DataColumn
        
        Private columnworksheet_no6 As Global.System.Data.DataColumn
        
        Private columnworksheet_no7 As Global.System.Data.DataColumn
        
        Private columnworksheet_no8 As Global.System.Data.DataColumn
        
        Private columnworksheet_no9 As Global.System.Data.DataColumn
        
        Private columnworksheet_no10 As Global.System.Data.DataColumn
        
        Private columnworksheet_no11 As Global.System.Data.DataColumn
        
        Private columnworksheet_no12 As Global.System.Data.DataColumn
        
        Private columnworksheet_no13 As Global.System.Data.DataColumn
        
        Private columnworksheet_no14 As Global.System.Data.DataColumn
        
        Private columnworksheet_no15 As Global.System.Data.DataColumn
        
        Private columnworksheet_no16 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber1 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber2 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber3 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber4 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber5 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber6 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber7 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber8 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber9 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber10 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber11 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber12 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber13 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber14 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber15 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber16 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no1 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no2 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no3 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no4 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no5 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no6 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no7 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no8 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no9 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no10 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no11 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no12 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no13 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no14 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no15 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no16 As Global.System.Data.DataColumn
        
        Private columnexact_location1 As Global.System.Data.DataColumn
        
        Private columnexact_location2 As Global.System.Data.DataColumn
        
        Private columnexact_location3 As Global.System.Data.DataColumn
        
        Private columnexact_location4 As Global.System.Data.DataColumn
        
        Private columnexact_location5 As Global.System.Data.DataColumn
        
        Private columnexact_location6 As Global.System.Data.DataColumn
        
        Private columnexact_location7 As Global.System.Data.DataColumn
        
        Private columnexact_location8 As Global.System.Data.DataColumn
        
        Private columnexact_location9 As Global.System.Data.DataColumn
        
        Private columnexact_location10 As Global.System.Data.DataColumn
        
        Private columnexact_location11 As Global.System.Data.DataColumn
        
        Private columnexact_location12 As Global.System.Data.DataColumn
        
        Private columnexact_location13 As Global.System.Data.DataColumn
        
        Private columnexact_location14 As Global.System.Data.DataColumn
        
        Private columnexact_location15 As Global.System.Data.DataColumn
        
        Private columnexact_location16 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments1 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments2 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments3 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments4 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments5 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments6 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments7 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments8 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments9 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments10 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments11 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments12 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments13 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments14 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments15 As Global.System.Data.DataColumn
        
        Private columnworksheet_comments16 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok1 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok2 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok3 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok4 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok5 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok6 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok7 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok8 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok9 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok10 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok11 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok12 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok13 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok14 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok15 As Global.System.Data.DataColumn
        
        Private columnworksheet_ok16 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested1 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested2 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested3 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested4 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested5 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested6 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested7 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested8 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested9 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested10 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested11 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested12 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested13 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested14 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested15 As Global.System.Data.DataColumn
        
        Private columnworksheet_tested16 As Global.System.Data.DataColumn
        
        Private columndate_trained As Global.System.Data.DataColumn
        
        Private columndate_cancelled As Global.System.Data.DataColumn
        
        Private columnstatus As Global.System.Data.DataColumn
        
        Private columnadd_chair_inv_no As Global.System.Data.DataColumn
        
        Private columncontract_date As Global.System.Data.DataColumn
        
        Private columnengineer As Global.System.Data.DataColumn
        
        Private columnannual_cost As Global.System.Data.DataColumn
        
        Private columnadditional_notes2 As Global.System.Data.DataColumn
        
        Private columnarea As Global.System.Data.DataColumn
        
        Private columnworksheet_no17 As Global.System.Data.DataColumn
        
        Private columnworksheet_no18 As Global.System.Data.DataColumn
        
        Private columnworksheet_no19 As Global.System.Data.DataColumn
        
        Private columnworksheet_no20 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber17 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber18 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber19 As Global.System.Data.DataColumn
        
        Private columnworksheet_enumber20 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no17 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no18 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no19 As Global.System.Data.DataColumn
        
        Private columnworksheet_fl_no20 As Global.System.Data.DataColumn
        
        Private columnexact_location17 As Global.System.Data.DataColumn
        
        Private columnexact_location18 As Global.System.Data.DataColumn
        
        Private columnexact_location19 As Global.System.Data.DataColumn
        
        Private columnexact_location20 As Global.System.Data.DataColumn
        
        Private columnhistorydate As Global.System.Data.DataColumn
        
        Private columnrenewaldate As Global.System.Data.DataColumn
        
        Private columnhistory As Global.System.Data.DataColumn
        
        Private columndirectdebit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "contact_xtra"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property holdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhold
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property executedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexecuted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cancelledColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncancelled
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property order_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorder_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contract_chair_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontract_chair_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property invoice_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninvoice_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property customer_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property additional_notesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadditional_notes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contract_contact_tel_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontract_contact_tel_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contract_contact_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontract_contact_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property positionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_of_chairsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_of_chairs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property start_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstart_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property date_executedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_executed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property completion_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompletion_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contract_worksheet_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontract_worksheet_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property training_doneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntraining_done
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property customer_order_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer_order_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_contact_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_contact_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_contact_tel_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_contact_tel_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_worksheet_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_worksheet_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property evac_chair_ref_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnevac_chair_ref_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_chair_quantityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_chair_quantity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_inColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_in
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_outColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_out
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property durationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnduration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property additional_chairs_invoice_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadditional_chairs_invoice_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_comments16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_comments16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_ok16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_ok16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_tested16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_tested16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property date_trainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_trained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property date_cancelledColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_cancelled
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property add_chair_inv_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_chair_inv_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contract_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontract_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property annual_costColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnannual_cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property additional_notes2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadditional_notes2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property areaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_no20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_no20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_enumber20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_enumber20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property worksheet_fl_no20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnworksheet_fl_no20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exact_location20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnexact_location20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property historydateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhistorydate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property renewaldateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrenewaldate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property historyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhistory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property directdebitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectdebit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As contact_xtraRow
            Get
                Return CType(Me.Rows(index),contact_xtraRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contact_xtraRowChanging As contact_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contact_xtraRowChanged As contact_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contact_xtraRowDeleting As contact_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contact_xtraRowDeleted As contact_xtraRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addcontact_xtraRow(ByVal row As contact_xtraRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addcontact_xtraRow( _
                    ByVal contno As Integer,  _
                    ByVal account_mgr As String,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal createdby As String,  _
                    ByVal hold As String,  _
                    ByVal executed As String,  _
                    ByVal cancelled As String,  _
                    ByVal order_no As String,  _
                    ByVal contract_chair_no As String,  _
                    ByVal invoice_address As String,  _
                    ByVal customer_code As String,  _
                    ByVal additional_notes As String,  _
                    ByVal contract_contact_tel_no As String,  _
                    ByVal contract_contact_name As String,  _
                    ByVal position As String,  _
                    ByVal no_of_chairs As Decimal,  _
                    ByVal start_date As Date,  _
                    ByVal date_executed As Date,  _
                    ByVal completion_date As Date,  _
                    ByVal contract_worksheet_no As String,  _
                    ByVal training_done As String,  _
                    ByVal customer_order_no As String,  _
                    ByVal worksheet_contact_name As String,  _
                    ByVal worksheet_contact_tel_no As String,  _
                    ByVal worksheet_worksheet_no As String,  _
                    ByVal worksheet_enumber As String,  _
                    ByVal evac_chair_ref_no As String,  _
                    ByVal worksheet_chair_quantity As String,  _
                    ByVal worksheet_date As Date,  _
                    ByVal time_in As System.TimeSpan,  _
                    ByVal time_out As System.TimeSpan,  _
                    ByVal duration As Decimal,  _
                    ByVal additional_chairs_invoice_no As String,  _
                    ByVal worksheet_no1 As String,  _
                    ByVal worksheet_no2 As String,  _
                    ByVal worksheet_no3 As String,  _
                    ByVal worksheet_no4 As String,  _
                    ByVal worksheet_no5 As String,  _
                    ByVal worksheet_no6 As String,  _
                    ByVal worksheet_no7 As String,  _
                    ByVal worksheet_no8 As String,  _
                    ByVal worksheet_no9 As String,  _
                    ByVal worksheet_no10 As String,  _
                    ByVal worksheet_no11 As String,  _
                    ByVal worksheet_no12 As String,  _
                    ByVal worksheet_no13 As String,  _
                    ByVal worksheet_no14 As String,  _
                    ByVal worksheet_no15 As String,  _
                    ByVal worksheet_no16 As String,  _
                    ByVal worksheet_enumber1 As String,  _
                    ByVal worksheet_enumber2 As String,  _
                    ByVal worksheet_enumber3 As String,  _
                    ByVal worksheet_enumber4 As String,  _
                    ByVal worksheet_enumber5 As String,  _
                    ByVal worksheet_enumber6 As String,  _
                    ByVal worksheet_enumber7 As String,  _
                    ByVal worksheet_enumber8 As String,  _
                    ByVal worksheet_enumber9 As String,  _
                    ByVal worksheet_enumber10 As String,  _
                    ByVal worksheet_enumber11 As String,  _
                    ByVal worksheet_enumber12 As String,  _
                    ByVal worksheet_enumber13 As String,  _
                    ByVal worksheet_enumber14 As String,  _
                    ByVal worksheet_enumber15 As String,  _
                    ByVal worksheet_enumber16 As String,  _
                    ByVal worksheet_fl_no1 As String,  _
                    ByVal worksheet_fl_no2 As String,  _
                    ByVal worksheet_fl_no3 As String,  _
                    ByVal worksheet_fl_no4 As String,  _
                    ByVal worksheet_fl_no5 As String,  _
                    ByVal worksheet_fl_no6 As String,  _
                    ByVal worksheet_fl_no7 As String,  _
                    ByVal worksheet_fl_no8 As String,  _
                    ByVal worksheet_fl_no9 As String,  _
                    ByVal worksheet_fl_no10 As String,  _
                    ByVal worksheet_fl_no11 As String,  _
                    ByVal worksheet_fl_no12 As String,  _
                    ByVal worksheet_fl_no13 As String,  _
                    ByVal worksheet_fl_no14 As String,  _
                    ByVal worksheet_fl_no15 As String,  _
                    ByVal worksheet_fl_no16 As String,  _
                    ByVal exact_location1 As String,  _
                    ByVal exact_location2 As String,  _
                    ByVal exact_location3 As String,  _
                    ByVal exact_location4 As String,  _
                    ByVal exact_location5 As String,  _
                    ByVal exact_location6 As String,  _
                    ByVal exact_location7 As String,  _
                    ByVal exact_location8 As String,  _
                    ByVal exact_location9 As String,  _
                    ByVal exact_location10 As String,  _
                    ByVal exact_location11 As String,  _
                    ByVal exact_location12 As String,  _
                    ByVal exact_location13 As String,  _
                    ByVal exact_location14 As String,  _
                    ByVal exact_location15 As String,  _
                    ByVal exact_location16 As String,  _
                    ByVal worksheet_comments1 As String,  _
                    ByVal worksheet_comments2 As String,  _
                    ByVal worksheet_comments3 As String,  _
                    ByVal worksheet_comments4 As String,  _
                    ByVal worksheet_comments5 As String,  _
                    ByVal worksheet_comments6 As String,  _
                    ByVal worksheet_comments7 As String,  _
                    ByVal worksheet_comments8 As String,  _
                    ByVal worksheet_comments9 As String,  _
                    ByVal worksheet_comments10 As String,  _
                    ByVal worksheet_comments11 As String,  _
                    ByVal worksheet_comments12 As String,  _
                    ByVal worksheet_comments13 As String,  _
                    ByVal worksheet_comments14 As String,  _
                    ByVal worksheet_comments15 As String,  _
                    ByVal worksheet_comments16 As String,  _
                    ByVal worksheet_ok1 As String,  _
                    ByVal worksheet_ok2 As String,  _
                    ByVal worksheet_ok3 As String,  _
                    ByVal worksheet_ok4 As String,  _
                    ByVal worksheet_ok5 As String,  _
                    ByVal worksheet_ok6 As String,  _
                    ByVal worksheet_ok7 As String,  _
                    ByVal worksheet_ok8 As String,  _
                    ByVal worksheet_ok9 As String,  _
                    ByVal worksheet_ok10 As String,  _
                    ByVal worksheet_ok11 As String,  _
                    ByVal worksheet_ok12 As String,  _
                    ByVal worksheet_ok13 As String,  _
                    ByVal worksheet_ok14 As String,  _
                    ByVal worksheet_ok15 As String,  _
                    ByVal worksheet_ok16 As String,  _
                    ByVal worksheet_tested1 As String,  _
                    ByVal worksheet_tested2 As String,  _
                    ByVal worksheet_tested3 As String,  _
                    ByVal worksheet_tested4 As String,  _
                    ByVal worksheet_tested5 As String,  _
                    ByVal worksheet_tested6 As String,  _
                    ByVal worksheet_tested7 As String,  _
                    ByVal worksheet_tested8 As String,  _
                    ByVal worksheet_tested9 As String,  _
                    ByVal worksheet_tested10 As String,  _
                    ByVal worksheet_tested11 As String,  _
                    ByVal worksheet_tested12 As String,  _
                    ByVal worksheet_tested13 As String,  _
                    ByVal worksheet_tested14 As String,  _
                    ByVal worksheet_tested15 As String,  _
                    ByVal worksheet_tested16 As String,  _
                    ByVal date_trained As Date,  _
                    ByVal date_cancelled As Date,  _
                    ByVal status As String,  _
                    ByVal add_chair_inv_no As String,  _
                    ByVal contract_date As Date,  _
                    ByVal engineer As String,  _
                    ByVal annual_cost As Decimal,  _
                    ByVal additional_notes2 As String,  _
                    ByVal area As String,  _
                    ByVal worksheet_no17 As String,  _
                    ByVal worksheet_no18 As String,  _
                    ByVal worksheet_no19 As String,  _
                    ByVal worksheet_no20 As String,  _
                    ByVal worksheet_enumber17 As String,  _
                    ByVal worksheet_enumber18 As String,  _
                    ByVal worksheet_enumber19 As String,  _
                    ByVal worksheet_enumber20 As String,  _
                    ByVal worksheet_fl_no17 As String,  _
                    ByVal worksheet_fl_no18 As String,  _
                    ByVal worksheet_fl_no19 As String,  _
                    ByVal worksheet_fl_no20 As String,  _
                    ByVal exact_location17 As String,  _
                    ByVal exact_location18 As String,  _
                    ByVal exact_location19 As String,  _
                    ByVal exact_location20 As String,  _
                    ByVal historydate As Date,  _
                    ByVal renewaldate As Date,  _
                    ByVal history As Short,  _
                    ByVal directdebit As Short) As contact_xtraRow
            Dim rowcontact_xtraRow As contact_xtraRow = CType(Me.NewRow,contact_xtraRow)
            Dim columnValuesArray() As Object = New Object() {contno, account_mgr, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, hold, executed, cancelled, order_no, contract_chair_no, invoice_address, customer_code, additional_notes, contract_contact_tel_no, contract_contact_name, position, no_of_chairs, start_date, date_executed, completion_date, contract_worksheet_no, training_done, customer_order_no, worksheet_contact_name, worksheet_contact_tel_no, worksheet_worksheet_no, worksheet_enumber, evac_chair_ref_no, worksheet_chair_quantity, worksheet_date, time_in, time_out, duration, additional_chairs_invoice_no, worksheet_no1, worksheet_no2, worksheet_no3, worksheet_no4, worksheet_no5, worksheet_no6, worksheet_no7, worksheet_no8, worksheet_no9, worksheet_no10, worksheet_no11, worksheet_no12, worksheet_no13, worksheet_no14, worksheet_no15, worksheet_no16, worksheet_enumber1, worksheet_enumber2, worksheet_enumber3, worksheet_enumber4, worksheet_enumber5, worksheet_enumber6, worksheet_enumber7, worksheet_enumber8, worksheet_enumber9, worksheet_enumber10, worksheet_enumber11, worksheet_enumber12, worksheet_enumber13, worksheet_enumber14, worksheet_enumber15, worksheet_enumber16, worksheet_fl_no1, worksheet_fl_no2, worksheet_fl_no3, worksheet_fl_no4, worksheet_fl_no5, worksheet_fl_no6, worksheet_fl_no7, worksheet_fl_no8, worksheet_fl_no9, worksheet_fl_no10, worksheet_fl_no11, worksheet_fl_no12, worksheet_fl_no13, worksheet_fl_no14, worksheet_fl_no15, worksheet_fl_no16, exact_location1, exact_location2, exact_location3, exact_location4, exact_location5, exact_location6, exact_location7, exact_location8, exact_location9, exact_location10, exact_location11, exact_location12, exact_location13, exact_location14, exact_location15, exact_location16, worksheet_comments1, worksheet_comments2, worksheet_comments3, worksheet_comments4, worksheet_comments5, worksheet_comments6, worksheet_comments7, worksheet_comments8, worksheet_comments9, worksheet_comments10, worksheet_comments11, worksheet_comments12, worksheet_comments13, worksheet_comments14, worksheet_comments15, worksheet_comments16, worksheet_ok1, worksheet_ok2, worksheet_ok3, worksheet_ok4, worksheet_ok5, worksheet_ok6, worksheet_ok7, worksheet_ok8, worksheet_ok9, worksheet_ok10, worksheet_ok11, worksheet_ok12, worksheet_ok13, worksheet_ok14, worksheet_ok15, worksheet_ok16, worksheet_tested1, worksheet_tested2, worksheet_tested3, worksheet_tested4, worksheet_tested5, worksheet_tested6, worksheet_tested7, worksheet_tested8, worksheet_tested9, worksheet_tested10, worksheet_tested11, worksheet_tested12, worksheet_tested13, worksheet_tested14, worksheet_tested15, worksheet_tested16, date_trained, date_cancelled, status, add_chair_inv_no, contract_date, engineer, annual_cost, additional_notes2, area, worksheet_no17, worksheet_no18, worksheet_no19, worksheet_no20, worksheet_enumber17, worksheet_enumber18, worksheet_enumber19, worksheet_enumber20, worksheet_fl_no17, worksheet_fl_no18, worksheet_fl_no19, worksheet_fl_no20, exact_location17, exact_location18, exact_location19, exact_location20, historydate, renewaldate, history, directdebit}
            rowcontact_xtraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcontact_xtraRow)
            Return rowcontact_xtraRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBycontno(ByVal contno As Integer) As contact_xtraRow
            Return CType(Me.Rows.Find(New Object() {contno}),contact_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As contact_xtraDataTable = CType(MyBase.Clone,contact_xtraDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New contact_xtraDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncontno = MyBase.Columns("contno")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnhold = MyBase.Columns("hold")
            Me.columnexecuted = MyBase.Columns("executed")
            Me.columncancelled = MyBase.Columns("cancelled")
            Me.columnorder_no = MyBase.Columns("order_no")
            Me.columncontract_chair_no = MyBase.Columns("contract_chair_no")
            Me.columninvoice_address = MyBase.Columns("invoice_address")
            Me.columncustomer_code = MyBase.Columns("customer_code")
            Me.columnadditional_notes = MyBase.Columns("additional_notes")
            Me.columncontract_contact_tel_no = MyBase.Columns("contract_contact_tel_no")
            Me.columncontract_contact_name = MyBase.Columns("contract_contact_name")
            Me.columnposition = MyBase.Columns("position")
            Me.columnno_of_chairs = MyBase.Columns("no_of_chairs")
            Me.columnstart_date = MyBase.Columns("start_date")
            Me.columndate_executed = MyBase.Columns("date_executed")
            Me.columncompletion_date = MyBase.Columns("completion_date")
            Me.columncontract_worksheet_no = MyBase.Columns("contract_worksheet_no")
            Me.columntraining_done = MyBase.Columns("training_done")
            Me.columncustomer_order_no = MyBase.Columns("customer_order_no")
            Me.columnworksheet_contact_name = MyBase.Columns("worksheet_contact_name")
            Me.columnworksheet_contact_tel_no = MyBase.Columns("worksheet_contact_tel_no")
            Me.columnworksheet_worksheet_no = MyBase.Columns("worksheet_worksheet_no")
            Me.columnworksheet_enumber = MyBase.Columns("worksheet_enumber")
            Me.columnevac_chair_ref_no = MyBase.Columns("evac_chair_ref_no")
            Me.columnworksheet_chair_quantity = MyBase.Columns("worksheet_chair_quantity")
            Me.columnworksheet_date = MyBase.Columns("worksheet_date")
            Me.columntime_in = MyBase.Columns("time_in")
            Me.columntime_out = MyBase.Columns("time_out")
            Me.columnduration = MyBase.Columns("duration")
            Me.columnadditional_chairs_invoice_no = MyBase.Columns("additional_chairs_invoice_no")
            Me.columnworksheet_no1 = MyBase.Columns("worksheet_no1")
            Me.columnworksheet_no2 = MyBase.Columns("worksheet_no2")
            Me.columnworksheet_no3 = MyBase.Columns("worksheet_no3")
            Me.columnworksheet_no4 = MyBase.Columns("worksheet_no4")
            Me.columnworksheet_no5 = MyBase.Columns("worksheet_no5")
            Me.columnworksheet_no6 = MyBase.Columns("worksheet_no6")
            Me.columnworksheet_no7 = MyBase.Columns("worksheet_no7")
            Me.columnworksheet_no8 = MyBase.Columns("worksheet_no8")
            Me.columnworksheet_no9 = MyBase.Columns("worksheet_no9")
            Me.columnworksheet_no10 = MyBase.Columns("worksheet_no10")
            Me.columnworksheet_no11 = MyBase.Columns("worksheet_no11")
            Me.columnworksheet_no12 = MyBase.Columns("worksheet_no12")
            Me.columnworksheet_no13 = MyBase.Columns("worksheet_no13")
            Me.columnworksheet_no14 = MyBase.Columns("worksheet_no14")
            Me.columnworksheet_no15 = MyBase.Columns("worksheet_no15")
            Me.columnworksheet_no16 = MyBase.Columns("worksheet_no16")
            Me.columnworksheet_enumber1 = MyBase.Columns("worksheet_enumber1")
            Me.columnworksheet_enumber2 = MyBase.Columns("worksheet_enumber2")
            Me.columnworksheet_enumber3 = MyBase.Columns("worksheet_enumber3")
            Me.columnworksheet_enumber4 = MyBase.Columns("worksheet_enumber4")
            Me.columnworksheet_enumber5 = MyBase.Columns("worksheet_enumber5")
            Me.columnworksheet_enumber6 = MyBase.Columns("worksheet_enumber6")
            Me.columnworksheet_enumber7 = MyBase.Columns("worksheet_enumber7")
            Me.columnworksheet_enumber8 = MyBase.Columns("worksheet_enumber8")
            Me.columnworksheet_enumber9 = MyBase.Columns("worksheet_enumber9")
            Me.columnworksheet_enumber10 = MyBase.Columns("worksheet_enumber10")
            Me.columnworksheet_enumber11 = MyBase.Columns("worksheet_enumber11")
            Me.columnworksheet_enumber12 = MyBase.Columns("worksheet_enumber12")
            Me.columnworksheet_enumber13 = MyBase.Columns("worksheet_enumber13")
            Me.columnworksheet_enumber14 = MyBase.Columns("worksheet_enumber14")
            Me.columnworksheet_enumber15 = MyBase.Columns("worksheet_enumber15")
            Me.columnworksheet_enumber16 = MyBase.Columns("worksheet_enumber16")
            Me.columnworksheet_fl_no1 = MyBase.Columns("worksheet_fl_no1")
            Me.columnworksheet_fl_no2 = MyBase.Columns("worksheet_fl_no2")
            Me.columnworksheet_fl_no3 = MyBase.Columns("worksheet_fl_no3")
            Me.columnworksheet_fl_no4 = MyBase.Columns("worksheet_fl_no4")
            Me.columnworksheet_fl_no5 = MyBase.Columns("worksheet_fl_no5")
            Me.columnworksheet_fl_no6 = MyBase.Columns("worksheet_fl_no6")
            Me.columnworksheet_fl_no7 = MyBase.Columns("worksheet_fl_no7")
            Me.columnworksheet_fl_no8 = MyBase.Columns("worksheet_fl_no8")
            Me.columnworksheet_fl_no9 = MyBase.Columns("worksheet_fl_no9")
            Me.columnworksheet_fl_no10 = MyBase.Columns("worksheet_fl_no10")
            Me.columnworksheet_fl_no11 = MyBase.Columns("worksheet_fl_no11")
            Me.columnworksheet_fl_no12 = MyBase.Columns("worksheet_fl_no12")
            Me.columnworksheet_fl_no13 = MyBase.Columns("worksheet_fl_no13")
            Me.columnworksheet_fl_no14 = MyBase.Columns("worksheet_fl_no14")
            Me.columnworksheet_fl_no15 = MyBase.Columns("worksheet_fl_no15")
            Me.columnworksheet_fl_no16 = MyBase.Columns("worksheet_fl_no16")
            Me.columnexact_location1 = MyBase.Columns("exact_location1")
            Me.columnexact_location2 = MyBase.Columns("exact_location2")
            Me.columnexact_location3 = MyBase.Columns("exact_location3")
            Me.columnexact_location4 = MyBase.Columns("exact_location4")
            Me.columnexact_location5 = MyBase.Columns("exact_location5")
            Me.columnexact_location6 = MyBase.Columns("exact_location6")
            Me.columnexact_location7 = MyBase.Columns("exact_location7")
            Me.columnexact_location8 = MyBase.Columns("exact_location8")
            Me.columnexact_location9 = MyBase.Columns("exact_location9")
            Me.columnexact_location10 = MyBase.Columns("exact_location10")
            Me.columnexact_location11 = MyBase.Columns("exact_location11")
            Me.columnexact_location12 = MyBase.Columns("exact_location12")
            Me.columnexact_location13 = MyBase.Columns("exact_location13")
            Me.columnexact_location14 = MyBase.Columns("exact_location14")
            Me.columnexact_location15 = MyBase.Columns("exact_location15")
            Me.columnexact_location16 = MyBase.Columns("exact_location16")
            Me.columnworksheet_comments1 = MyBase.Columns("worksheet_comments1")
            Me.columnworksheet_comments2 = MyBase.Columns("worksheet_comments2")
            Me.columnworksheet_comments3 = MyBase.Columns("worksheet_comments3")
            Me.columnworksheet_comments4 = MyBase.Columns("worksheet_comments4")
            Me.columnworksheet_comments5 = MyBase.Columns("worksheet_comments5")
            Me.columnworksheet_comments6 = MyBase.Columns("worksheet_comments6")
            Me.columnworksheet_comments7 = MyBase.Columns("worksheet_comments7")
            Me.columnworksheet_comments8 = MyBase.Columns("worksheet_comments8")
            Me.columnworksheet_comments9 = MyBase.Columns("worksheet_comments9")
            Me.columnworksheet_comments10 = MyBase.Columns("worksheet_comments10")
            Me.columnworksheet_comments11 = MyBase.Columns("worksheet_comments11")
            Me.columnworksheet_comments12 = MyBase.Columns("worksheet_comments12")
            Me.columnworksheet_comments13 = MyBase.Columns("worksheet_comments13")
            Me.columnworksheet_comments14 = MyBase.Columns("worksheet_comments14")
            Me.columnworksheet_comments15 = MyBase.Columns("worksheet_comments15")
            Me.columnworksheet_comments16 = MyBase.Columns("worksheet_comments16")
            Me.columnworksheet_ok1 = MyBase.Columns("worksheet_ok1")
            Me.columnworksheet_ok2 = MyBase.Columns("worksheet_ok2")
            Me.columnworksheet_ok3 = MyBase.Columns("worksheet_ok3")
            Me.columnworksheet_ok4 = MyBase.Columns("worksheet_ok4")
            Me.columnworksheet_ok5 = MyBase.Columns("worksheet_ok5")
            Me.columnworksheet_ok6 = MyBase.Columns("worksheet_ok6")
            Me.columnworksheet_ok7 = MyBase.Columns("worksheet_ok7")
            Me.columnworksheet_ok8 = MyBase.Columns("worksheet_ok8")
            Me.columnworksheet_ok9 = MyBase.Columns("worksheet_ok9")
            Me.columnworksheet_ok10 = MyBase.Columns("worksheet_ok10")
            Me.columnworksheet_ok11 = MyBase.Columns("worksheet_ok11")
            Me.columnworksheet_ok12 = MyBase.Columns("worksheet_ok12")
            Me.columnworksheet_ok13 = MyBase.Columns("worksheet_ok13")
            Me.columnworksheet_ok14 = MyBase.Columns("worksheet_ok14")
            Me.columnworksheet_ok15 = MyBase.Columns("worksheet_ok15")
            Me.columnworksheet_ok16 = MyBase.Columns("worksheet_ok16")
            Me.columnworksheet_tested1 = MyBase.Columns("worksheet_tested1")
            Me.columnworksheet_tested2 = MyBase.Columns("worksheet_tested2")
            Me.columnworksheet_tested3 = MyBase.Columns("worksheet_tested3")
            Me.columnworksheet_tested4 = MyBase.Columns("worksheet_tested4")
            Me.columnworksheet_tested5 = MyBase.Columns("worksheet_tested5")
            Me.columnworksheet_tested6 = MyBase.Columns("worksheet_tested6")
            Me.columnworksheet_tested7 = MyBase.Columns("worksheet_tested7")
            Me.columnworksheet_tested8 = MyBase.Columns("worksheet_tested8")
            Me.columnworksheet_tested9 = MyBase.Columns("worksheet_tested9")
            Me.columnworksheet_tested10 = MyBase.Columns("worksheet_tested10")
            Me.columnworksheet_tested11 = MyBase.Columns("worksheet_tested11")
            Me.columnworksheet_tested12 = MyBase.Columns("worksheet_tested12")
            Me.columnworksheet_tested13 = MyBase.Columns("worksheet_tested13")
            Me.columnworksheet_tested14 = MyBase.Columns("worksheet_tested14")
            Me.columnworksheet_tested15 = MyBase.Columns("worksheet_tested15")
            Me.columnworksheet_tested16 = MyBase.Columns("worksheet_tested16")
            Me.columndate_trained = MyBase.Columns("date_trained")
            Me.columndate_cancelled = MyBase.Columns("date_cancelled")
            Me.columnstatus = MyBase.Columns("status")
            Me.columnadd_chair_inv_no = MyBase.Columns("add_chair_inv_no")
            Me.columncontract_date = MyBase.Columns("contract_date")
            Me.columnengineer = MyBase.Columns("engineer")
            Me.columnannual_cost = MyBase.Columns("annual_cost")
            Me.columnadditional_notes2 = MyBase.Columns("additional_notes2")
            Me.columnarea = MyBase.Columns("area")
            Me.columnworksheet_no17 = MyBase.Columns("worksheet_no17")
            Me.columnworksheet_no18 = MyBase.Columns("worksheet_no18")
            Me.columnworksheet_no19 = MyBase.Columns("worksheet_no19")
            Me.columnworksheet_no20 = MyBase.Columns("worksheet_no20")
            Me.columnworksheet_enumber17 = MyBase.Columns("worksheet_enumber17")
            Me.columnworksheet_enumber18 = MyBase.Columns("worksheet_enumber18")
            Me.columnworksheet_enumber19 = MyBase.Columns("worksheet_enumber19")
            Me.columnworksheet_enumber20 = MyBase.Columns("worksheet_enumber20")
            Me.columnworksheet_fl_no17 = MyBase.Columns("worksheet_fl_no17")
            Me.columnworksheet_fl_no18 = MyBase.Columns("worksheet_fl_no18")
            Me.columnworksheet_fl_no19 = MyBase.Columns("worksheet_fl_no19")
            Me.columnworksheet_fl_no20 = MyBase.Columns("worksheet_fl_no20")
            Me.columnexact_location17 = MyBase.Columns("exact_location17")
            Me.columnexact_location18 = MyBase.Columns("exact_location18")
            Me.columnexact_location19 = MyBase.Columns("exact_location19")
            Me.columnexact_location20 = MyBase.Columns("exact_location20")
            Me.columnhistorydate = MyBase.Columns("historydate")
            Me.columnrenewaldate = MyBase.Columns("renewaldate")
            Me.columnhistory = MyBase.Columns("history")
            Me.columndirectdebit = MyBase.Columns("directdebit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columncontno = New Global.System.Data.DataColumn("contno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontno)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnhold = New Global.System.Data.DataColumn("hold", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhold)
            Me.columnexecuted = New Global.System.Data.DataColumn("executed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexecuted)
            Me.columncancelled = New Global.System.Data.DataColumn("cancelled", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncancelled)
            Me.columnorder_no = New Global.System.Data.DataColumn("order_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorder_no)
            Me.columncontract_chair_no = New Global.System.Data.DataColumn("contract_chair_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontract_chair_no)
            Me.columninvoice_address = New Global.System.Data.DataColumn("invoice_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninvoice_address)
            Me.columncustomer_code = New Global.System.Data.DataColumn("customer_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer_code)
            Me.columnadditional_notes = New Global.System.Data.DataColumn("additional_notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadditional_notes)
            Me.columncontract_contact_tel_no = New Global.System.Data.DataColumn("contract_contact_tel_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontract_contact_tel_no)
            Me.columncontract_contact_name = New Global.System.Data.DataColumn("contract_contact_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontract_contact_name)
            Me.columnposition = New Global.System.Data.DataColumn("position", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposition)
            Me.columnno_of_chairs = New Global.System.Data.DataColumn("no_of_chairs", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_of_chairs)
            Me.columnstart_date = New Global.System.Data.DataColumn("start_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstart_date)
            Me.columndate_executed = New Global.System.Data.DataColumn("date_executed", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_executed)
            Me.columncompletion_date = New Global.System.Data.DataColumn("completion_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompletion_date)
            Me.columncontract_worksheet_no = New Global.System.Data.DataColumn("contract_worksheet_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontract_worksheet_no)
            Me.columntraining_done = New Global.System.Data.DataColumn("training_done", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntraining_done)
            Me.columncustomer_order_no = New Global.System.Data.DataColumn("customer_order_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer_order_no)
            Me.columnworksheet_contact_name = New Global.System.Data.DataColumn("worksheet_contact_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_contact_name)
            Me.columnworksheet_contact_tel_no = New Global.System.Data.DataColumn("worksheet_contact_tel_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_contact_tel_no)
            Me.columnworksheet_worksheet_no = New Global.System.Data.DataColumn("worksheet_worksheet_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_worksheet_no)
            Me.columnworksheet_enumber = New Global.System.Data.DataColumn("worksheet_enumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber)
            Me.columnevac_chair_ref_no = New Global.System.Data.DataColumn("evac_chair_ref_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnevac_chair_ref_no)
            Me.columnworksheet_chair_quantity = New Global.System.Data.DataColumn("worksheet_chair_quantity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_chair_quantity)
            Me.columnworksheet_date = New Global.System.Data.DataColumn("worksheet_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_date)
            Me.columntime_in = New Global.System.Data.DataColumn("time_in", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_in)
            Me.columntime_out = New Global.System.Data.DataColumn("time_out", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_out)
            Me.columnduration = New Global.System.Data.DataColumn("duration", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnduration)
            Me.columnadditional_chairs_invoice_no = New Global.System.Data.DataColumn("additional_chairs_invoice_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadditional_chairs_invoice_no)
            Me.columnworksheet_no1 = New Global.System.Data.DataColumn("worksheet_no1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no1)
            Me.columnworksheet_no2 = New Global.System.Data.DataColumn("worksheet_no2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no2)
            Me.columnworksheet_no3 = New Global.System.Data.DataColumn("worksheet_no3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no3)
            Me.columnworksheet_no4 = New Global.System.Data.DataColumn("worksheet_no4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no4)
            Me.columnworksheet_no5 = New Global.System.Data.DataColumn("worksheet_no5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no5)
            Me.columnworksheet_no6 = New Global.System.Data.DataColumn("worksheet_no6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no6)
            Me.columnworksheet_no7 = New Global.System.Data.DataColumn("worksheet_no7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no7)
            Me.columnworksheet_no8 = New Global.System.Data.DataColumn("worksheet_no8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no8)
            Me.columnworksheet_no9 = New Global.System.Data.DataColumn("worksheet_no9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no9)
            Me.columnworksheet_no10 = New Global.System.Data.DataColumn("worksheet_no10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no10)
            Me.columnworksheet_no11 = New Global.System.Data.DataColumn("worksheet_no11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no11)
            Me.columnworksheet_no12 = New Global.System.Data.DataColumn("worksheet_no12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no12)
            Me.columnworksheet_no13 = New Global.System.Data.DataColumn("worksheet_no13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no13)
            Me.columnworksheet_no14 = New Global.System.Data.DataColumn("worksheet_no14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no14)
            Me.columnworksheet_no15 = New Global.System.Data.DataColumn("worksheet_no15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no15)
            Me.columnworksheet_no16 = New Global.System.Data.DataColumn("worksheet_no16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no16)
            Me.columnworksheet_enumber1 = New Global.System.Data.DataColumn("worksheet_enumber1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber1)
            Me.columnworksheet_enumber2 = New Global.System.Data.DataColumn("worksheet_enumber2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber2)
            Me.columnworksheet_enumber3 = New Global.System.Data.DataColumn("worksheet_enumber3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber3)
            Me.columnworksheet_enumber4 = New Global.System.Data.DataColumn("worksheet_enumber4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber4)
            Me.columnworksheet_enumber5 = New Global.System.Data.DataColumn("worksheet_enumber5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber5)
            Me.columnworksheet_enumber6 = New Global.System.Data.DataColumn("worksheet_enumber6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber6)
            Me.columnworksheet_enumber7 = New Global.System.Data.DataColumn("worksheet_enumber7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber7)
            Me.columnworksheet_enumber8 = New Global.System.Data.DataColumn("worksheet_enumber8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber8)
            Me.columnworksheet_enumber9 = New Global.System.Data.DataColumn("worksheet_enumber9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber9)
            Me.columnworksheet_enumber10 = New Global.System.Data.DataColumn("worksheet_enumber10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber10)
            Me.columnworksheet_enumber11 = New Global.System.Data.DataColumn("worksheet_enumber11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber11)
            Me.columnworksheet_enumber12 = New Global.System.Data.DataColumn("worksheet_enumber12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber12)
            Me.columnworksheet_enumber13 = New Global.System.Data.DataColumn("worksheet_enumber13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber13)
            Me.columnworksheet_enumber14 = New Global.System.Data.DataColumn("worksheet_enumber14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber14)
            Me.columnworksheet_enumber15 = New Global.System.Data.DataColumn("worksheet_enumber15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber15)
            Me.columnworksheet_enumber16 = New Global.System.Data.DataColumn("worksheet_enumber16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber16)
            Me.columnworksheet_fl_no1 = New Global.System.Data.DataColumn("worksheet_fl_no1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no1)
            Me.columnworksheet_fl_no2 = New Global.System.Data.DataColumn("worksheet_fl_no2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no2)
            Me.columnworksheet_fl_no3 = New Global.System.Data.DataColumn("worksheet_fl_no3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no3)
            Me.columnworksheet_fl_no4 = New Global.System.Data.DataColumn("worksheet_fl_no4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no4)
            Me.columnworksheet_fl_no5 = New Global.System.Data.DataColumn("worksheet_fl_no5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no5)
            Me.columnworksheet_fl_no6 = New Global.System.Data.DataColumn("worksheet_fl_no6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no6)
            Me.columnworksheet_fl_no7 = New Global.System.Data.DataColumn("worksheet_fl_no7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no7)
            Me.columnworksheet_fl_no8 = New Global.System.Data.DataColumn("worksheet_fl_no8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no8)
            Me.columnworksheet_fl_no9 = New Global.System.Data.DataColumn("worksheet_fl_no9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no9)
            Me.columnworksheet_fl_no10 = New Global.System.Data.DataColumn("worksheet_fl_no10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no10)
            Me.columnworksheet_fl_no11 = New Global.System.Data.DataColumn("worksheet_fl_no11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no11)
            Me.columnworksheet_fl_no12 = New Global.System.Data.DataColumn("worksheet_fl_no12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no12)
            Me.columnworksheet_fl_no13 = New Global.System.Data.DataColumn("worksheet_fl_no13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no13)
            Me.columnworksheet_fl_no14 = New Global.System.Data.DataColumn("worksheet_fl_no14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no14)
            Me.columnworksheet_fl_no15 = New Global.System.Data.DataColumn("worksheet_fl_no15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no15)
            Me.columnworksheet_fl_no16 = New Global.System.Data.DataColumn("worksheet_fl_no16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no16)
            Me.columnexact_location1 = New Global.System.Data.DataColumn("exact_location1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location1)
            Me.columnexact_location2 = New Global.System.Data.DataColumn("exact_location2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location2)
            Me.columnexact_location3 = New Global.System.Data.DataColumn("exact_location3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location3)
            Me.columnexact_location4 = New Global.System.Data.DataColumn("exact_location4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location4)
            Me.columnexact_location5 = New Global.System.Data.DataColumn("exact_location5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location5)
            Me.columnexact_location6 = New Global.System.Data.DataColumn("exact_location6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location6)
            Me.columnexact_location7 = New Global.System.Data.DataColumn("exact_location7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location7)
            Me.columnexact_location8 = New Global.System.Data.DataColumn("exact_location8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location8)
            Me.columnexact_location9 = New Global.System.Data.DataColumn("exact_location9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location9)
            Me.columnexact_location10 = New Global.System.Data.DataColumn("exact_location10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location10)
            Me.columnexact_location11 = New Global.System.Data.DataColumn("exact_location11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location11)
            Me.columnexact_location12 = New Global.System.Data.DataColumn("exact_location12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location12)
            Me.columnexact_location13 = New Global.System.Data.DataColumn("exact_location13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location13)
            Me.columnexact_location14 = New Global.System.Data.DataColumn("exact_location14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location14)
            Me.columnexact_location15 = New Global.System.Data.DataColumn("exact_location15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location15)
            Me.columnexact_location16 = New Global.System.Data.DataColumn("exact_location16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location16)
            Me.columnworksheet_comments1 = New Global.System.Data.DataColumn("worksheet_comments1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments1)
            Me.columnworksheet_comments2 = New Global.System.Data.DataColumn("worksheet_comments2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments2)
            Me.columnworksheet_comments3 = New Global.System.Data.DataColumn("worksheet_comments3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments3)
            Me.columnworksheet_comments4 = New Global.System.Data.DataColumn("worksheet_comments4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments4)
            Me.columnworksheet_comments5 = New Global.System.Data.DataColumn("worksheet_comments5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments5)
            Me.columnworksheet_comments6 = New Global.System.Data.DataColumn("worksheet_comments6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments6)
            Me.columnworksheet_comments7 = New Global.System.Data.DataColumn("worksheet_comments7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments7)
            Me.columnworksheet_comments8 = New Global.System.Data.DataColumn("worksheet_comments8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments8)
            Me.columnworksheet_comments9 = New Global.System.Data.DataColumn("worksheet_comments9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments9)
            Me.columnworksheet_comments10 = New Global.System.Data.DataColumn("worksheet_comments10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments10)
            Me.columnworksheet_comments11 = New Global.System.Data.DataColumn("worksheet_comments11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments11)
            Me.columnworksheet_comments12 = New Global.System.Data.DataColumn("worksheet_comments12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments12)
            Me.columnworksheet_comments13 = New Global.System.Data.DataColumn("worksheet_comments13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments13)
            Me.columnworksheet_comments14 = New Global.System.Data.DataColumn("worksheet_comments14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments14)
            Me.columnworksheet_comments15 = New Global.System.Data.DataColumn("worksheet_comments15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments15)
            Me.columnworksheet_comments16 = New Global.System.Data.DataColumn("worksheet_comments16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_comments16)
            Me.columnworksheet_ok1 = New Global.System.Data.DataColumn("worksheet_ok1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok1)
            Me.columnworksheet_ok2 = New Global.System.Data.DataColumn("worksheet_ok2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok2)
            Me.columnworksheet_ok3 = New Global.System.Data.DataColumn("worksheet_ok3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok3)
            Me.columnworksheet_ok4 = New Global.System.Data.DataColumn("worksheet_ok4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok4)
            Me.columnworksheet_ok5 = New Global.System.Data.DataColumn("worksheet_ok5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok5)
            Me.columnworksheet_ok6 = New Global.System.Data.DataColumn("worksheet_ok6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok6)
            Me.columnworksheet_ok7 = New Global.System.Data.DataColumn("worksheet_ok7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok7)
            Me.columnworksheet_ok8 = New Global.System.Data.DataColumn("worksheet_ok8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok8)
            Me.columnworksheet_ok9 = New Global.System.Data.DataColumn("worksheet_ok9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok9)
            Me.columnworksheet_ok10 = New Global.System.Data.DataColumn("worksheet_ok10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok10)
            Me.columnworksheet_ok11 = New Global.System.Data.DataColumn("worksheet_ok11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok11)
            Me.columnworksheet_ok12 = New Global.System.Data.DataColumn("worksheet_ok12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok12)
            Me.columnworksheet_ok13 = New Global.System.Data.DataColumn("worksheet_ok13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok13)
            Me.columnworksheet_ok14 = New Global.System.Data.DataColumn("worksheet_ok14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok14)
            Me.columnworksheet_ok15 = New Global.System.Data.DataColumn("worksheet_ok15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok15)
            Me.columnworksheet_ok16 = New Global.System.Data.DataColumn("worksheet_ok16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_ok16)
            Me.columnworksheet_tested1 = New Global.System.Data.DataColumn("worksheet_tested1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested1)
            Me.columnworksheet_tested2 = New Global.System.Data.DataColumn("worksheet_tested2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested2)
            Me.columnworksheet_tested3 = New Global.System.Data.DataColumn("worksheet_tested3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested3)
            Me.columnworksheet_tested4 = New Global.System.Data.DataColumn("worksheet_tested4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested4)
            Me.columnworksheet_tested5 = New Global.System.Data.DataColumn("worksheet_tested5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested5)
            Me.columnworksheet_tested6 = New Global.System.Data.DataColumn("worksheet_tested6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested6)
            Me.columnworksheet_tested7 = New Global.System.Data.DataColumn("worksheet_tested7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested7)
            Me.columnworksheet_tested8 = New Global.System.Data.DataColumn("worksheet_tested8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested8)
            Me.columnworksheet_tested9 = New Global.System.Data.DataColumn("worksheet_tested9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested9)
            Me.columnworksheet_tested10 = New Global.System.Data.DataColumn("worksheet_tested10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested10)
            Me.columnworksheet_tested11 = New Global.System.Data.DataColumn("worksheet_tested11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested11)
            Me.columnworksheet_tested12 = New Global.System.Data.DataColumn("worksheet_tested12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested12)
            Me.columnworksheet_tested13 = New Global.System.Data.DataColumn("worksheet_tested13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested13)
            Me.columnworksheet_tested14 = New Global.System.Data.DataColumn("worksheet_tested14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested14)
            Me.columnworksheet_tested15 = New Global.System.Data.DataColumn("worksheet_tested15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested15)
            Me.columnworksheet_tested16 = New Global.System.Data.DataColumn("worksheet_tested16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_tested16)
            Me.columndate_trained = New Global.System.Data.DataColumn("date_trained", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_trained)
            Me.columndate_cancelled = New Global.System.Data.DataColumn("date_cancelled", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_cancelled)
            Me.columnstatus = New Global.System.Data.DataColumn("status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus)
            Me.columnadd_chair_inv_no = New Global.System.Data.DataColumn("add_chair_inv_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_chair_inv_no)
            Me.columncontract_date = New Global.System.Data.DataColumn("contract_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontract_date)
            Me.columnengineer = New Global.System.Data.DataColumn("engineer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineer)
            Me.columnannual_cost = New Global.System.Data.DataColumn("annual_cost", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnannual_cost)
            Me.columnadditional_notes2 = New Global.System.Data.DataColumn("additional_notes2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadditional_notes2)
            Me.columnarea = New Global.System.Data.DataColumn("area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnarea)
            Me.columnworksheet_no17 = New Global.System.Data.DataColumn("worksheet_no17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no17)
            Me.columnworksheet_no18 = New Global.System.Data.DataColumn("worksheet_no18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no18)
            Me.columnworksheet_no19 = New Global.System.Data.DataColumn("worksheet_no19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no19)
            Me.columnworksheet_no20 = New Global.System.Data.DataColumn("worksheet_no20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_no20)
            Me.columnworksheet_enumber17 = New Global.System.Data.DataColumn("worksheet_enumber17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber17)
            Me.columnworksheet_enumber18 = New Global.System.Data.DataColumn("worksheet_enumber18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber18)
            Me.columnworksheet_enumber19 = New Global.System.Data.DataColumn("worksheet_enumber19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber19)
            Me.columnworksheet_enumber20 = New Global.System.Data.DataColumn("worksheet_enumber20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_enumber20)
            Me.columnworksheet_fl_no17 = New Global.System.Data.DataColumn("worksheet_fl_no17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no17)
            Me.columnworksheet_fl_no18 = New Global.System.Data.DataColumn("worksheet_fl_no18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no18)
            Me.columnworksheet_fl_no19 = New Global.System.Data.DataColumn("worksheet_fl_no19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no19)
            Me.columnworksheet_fl_no20 = New Global.System.Data.DataColumn("worksheet_fl_no20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnworksheet_fl_no20)
            Me.columnexact_location17 = New Global.System.Data.DataColumn("exact_location17", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location17)
            Me.columnexact_location18 = New Global.System.Data.DataColumn("exact_location18", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location18)
            Me.columnexact_location19 = New Global.System.Data.DataColumn("exact_location19", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location19)
            Me.columnexact_location20 = New Global.System.Data.DataColumn("exact_location20", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexact_location20)
            Me.columnhistorydate = New Global.System.Data.DataColumn("historydate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhistorydate)
            Me.columnrenewaldate = New Global.System.Data.DataColumn("renewaldate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrenewaldate)
            Me.columnhistory = New Global.System.Data.DataColumn("history", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhistory)
            Me.columndirectdebit = New Global.System.Data.DataColumn("directdebit", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectdebit)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncontno}, true))
            Me.columncontno.AllowDBNull = false
            Me.columncontno.Unique = true
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnhold.MaxLength = 10
            Me.columnexecuted.MaxLength = 10
            Me.columncancelled.MaxLength = 10
            Me.columnorder_no.MaxLength = 25
            Me.columncontract_chair_no.MaxLength = 150
            Me.columninvoice_address.MaxLength = 300
            Me.columncustomer_code.MaxLength = 20
            Me.columnadditional_notes.MaxLength = 300
            Me.columncontract_contact_tel_no.MaxLength = 20
            Me.columncontract_contact_name.MaxLength = 25
            Me.columnposition.MaxLength = 50
            Me.columncontract_worksheet_no.MaxLength = 50
            Me.columntraining_done.MaxLength = 10
            Me.columncustomer_order_no.MaxLength = 50
            Me.columnworksheet_contact_name.MaxLength = 25
            Me.columnworksheet_contact_tel_no.MaxLength = 20
            Me.columnworksheet_worksheet_no.MaxLength = 10
            Me.columnworksheet_enumber.MaxLength = 10
            Me.columnevac_chair_ref_no.MaxLength = 10
            Me.columnworksheet_chair_quantity.MaxLength = 10
            Me.columnadditional_chairs_invoice_no.MaxLength = 10
            Me.columnworksheet_no1.MaxLength = 10
            Me.columnworksheet_no2.MaxLength = 10
            Me.columnworksheet_no3.MaxLength = 10
            Me.columnworksheet_no4.MaxLength = 10
            Me.columnworksheet_no5.MaxLength = 10
            Me.columnworksheet_no6.MaxLength = 10
            Me.columnworksheet_no7.MaxLength = 10
            Me.columnworksheet_no8.MaxLength = 10
            Me.columnworksheet_no9.MaxLength = 10
            Me.columnworksheet_no10.MaxLength = 10
            Me.columnworksheet_no11.MaxLength = 10
            Me.columnworksheet_no12.MaxLength = 10
            Me.columnworksheet_no13.MaxLength = 10
            Me.columnworksheet_no14.MaxLength = 10
            Me.columnworksheet_no15.MaxLength = 10
            Me.columnworksheet_no16.MaxLength = 10
            Me.columnworksheet_enumber1.MaxLength = 20
            Me.columnworksheet_enumber2.MaxLength = 20
            Me.columnworksheet_enumber3.MaxLength = 20
            Me.columnworksheet_enumber4.MaxLength = 20
            Me.columnworksheet_enumber5.MaxLength = 20
            Me.columnworksheet_enumber6.MaxLength = 20
            Me.columnworksheet_enumber7.MaxLength = 20
            Me.columnworksheet_enumber8.MaxLength = 20
            Me.columnworksheet_enumber9.MaxLength = 20
            Me.columnworksheet_enumber10.MaxLength = 20
            Me.columnworksheet_enumber11.MaxLength = 20
            Me.columnworksheet_enumber12.MaxLength = 20
            Me.columnworksheet_enumber13.MaxLength = 20
            Me.columnworksheet_enumber14.MaxLength = 20
            Me.columnworksheet_enumber15.MaxLength = 20
            Me.columnworksheet_enumber16.MaxLength = 20
            Me.columnworksheet_fl_no1.MaxLength = 10
            Me.columnworksheet_fl_no2.MaxLength = 10
            Me.columnworksheet_fl_no3.MaxLength = 10
            Me.columnworksheet_fl_no4.MaxLength = 10
            Me.columnworksheet_fl_no5.MaxLength = 10
            Me.columnworksheet_fl_no6.MaxLength = 10
            Me.columnworksheet_fl_no7.MaxLength = 10
            Me.columnworksheet_fl_no8.MaxLength = 10
            Me.columnworksheet_fl_no9.MaxLength = 10
            Me.columnworksheet_fl_no10.MaxLength = 10
            Me.columnworksheet_fl_no11.MaxLength = 10
            Me.columnworksheet_fl_no12.MaxLength = 10
            Me.columnworksheet_fl_no13.MaxLength = 10
            Me.columnworksheet_fl_no14.MaxLength = 10
            Me.columnworksheet_fl_no15.MaxLength = 10
            Me.columnworksheet_fl_no16.MaxLength = 10
            Me.columnexact_location1.MaxLength = 75
            Me.columnexact_location2.MaxLength = 75
            Me.columnexact_location3.MaxLength = 75
            Me.columnexact_location4.MaxLength = 75
            Me.columnexact_location5.MaxLength = 75
            Me.columnexact_location6.MaxLength = 75
            Me.columnexact_location7.MaxLength = 75
            Me.columnexact_location8.MaxLength = 75
            Me.columnexact_location9.MaxLength = 75
            Me.columnexact_location10.MaxLength = 75
            Me.columnexact_location11.MaxLength = 75
            Me.columnexact_location12.MaxLength = 75
            Me.columnexact_location13.MaxLength = 75
            Me.columnexact_location14.MaxLength = 75
            Me.columnexact_location15.MaxLength = 75
            Me.columnexact_location16.MaxLength = 75
            Me.columnworksheet_comments1.MaxLength = 75
            Me.columnworksheet_comments2.MaxLength = 75
            Me.columnworksheet_comments3.MaxLength = 75
            Me.columnworksheet_comments4.MaxLength = 75
            Me.columnworksheet_comments5.MaxLength = 75
            Me.columnworksheet_comments6.MaxLength = 75
            Me.columnworksheet_comments7.MaxLength = 75
            Me.columnworksheet_comments8.MaxLength = 75
            Me.columnworksheet_comments9.MaxLength = 75
            Me.columnworksheet_comments10.MaxLength = 75
            Me.columnworksheet_comments11.MaxLength = 75
            Me.columnworksheet_comments12.MaxLength = 75
            Me.columnworksheet_comments13.MaxLength = 75
            Me.columnworksheet_comments14.MaxLength = 75
            Me.columnworksheet_comments15.MaxLength = 75
            Me.columnworksheet_comments16.MaxLength = 75
            Me.columnworksheet_ok1.MaxLength = 5
            Me.columnworksheet_ok2.MaxLength = 5
            Me.columnworksheet_ok3.MaxLength = 5
            Me.columnworksheet_ok4.MaxLength = 5
            Me.columnworksheet_ok5.MaxLength = 5
            Me.columnworksheet_ok6.MaxLength = 5
            Me.columnworksheet_ok7.MaxLength = 5
            Me.columnworksheet_ok8.MaxLength = 5
            Me.columnworksheet_ok9.MaxLength = 5
            Me.columnworksheet_ok10.MaxLength = 5
            Me.columnworksheet_ok11.MaxLength = 5
            Me.columnworksheet_ok12.MaxLength = 5
            Me.columnworksheet_ok13.MaxLength = 5
            Me.columnworksheet_ok14.MaxLength = 5
            Me.columnworksheet_ok15.MaxLength = 5
            Me.columnworksheet_ok16.MaxLength = 5
            Me.columnworksheet_tested1.MaxLength = 5
            Me.columnworksheet_tested2.MaxLength = 5
            Me.columnworksheet_tested3.MaxLength = 5
            Me.columnworksheet_tested4.MaxLength = 5
            Me.columnworksheet_tested5.MaxLength = 5
            Me.columnworksheet_tested6.MaxLength = 5
            Me.columnworksheet_tested7.MaxLength = 5
            Me.columnworksheet_tested8.MaxLength = 5
            Me.columnworksheet_tested9.MaxLength = 5
            Me.columnworksheet_tested10.MaxLength = 5
            Me.columnworksheet_tested11.MaxLength = 5
            Me.columnworksheet_tested12.MaxLength = 5
            Me.columnworksheet_tested13.MaxLength = 5
            Me.columnworksheet_tested14.MaxLength = 5
            Me.columnworksheet_tested15.MaxLength = 5
            Me.columnworksheet_tested16.MaxLength = 5
            Me.columnstatus.MaxLength = 10
            Me.columnadd_chair_inv_no.MaxLength = 20
            Me.columnengineer.MaxLength = 25
            Me.columnadditional_notes2.MaxLength = 300
            Me.columnarea.MaxLength = 124
            Me.columnworksheet_no17.MaxLength = 10
            Me.columnworksheet_no18.MaxLength = 10
            Me.columnworksheet_no19.MaxLength = 10
            Me.columnworksheet_no20.MaxLength = 10
            Me.columnworksheet_enumber17.MaxLength = 20
            Me.columnworksheet_enumber18.MaxLength = 20
            Me.columnworksheet_enumber19.MaxLength = 20
            Me.columnworksheet_enumber20.MaxLength = 20
            Me.columnworksheet_fl_no17.MaxLength = 10
            Me.columnworksheet_fl_no18.MaxLength = 10
            Me.columnworksheet_fl_no19.MaxLength = 10
            Me.columnworksheet_fl_no20.MaxLength = 10
            Me.columnexact_location17.MaxLength = 75
            Me.columnexact_location18.MaxLength = 75
            Me.columnexact_location19.MaxLength = 75
            Me.columnexact_location20.MaxLength = 75
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newcontact_xtraRow() As contact_xtraRow
            Return CType(Me.NewRow,contact_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New contact_xtraRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(contact_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.contact_xtraRowChangedEvent) Is Nothing) Then
                RaiseEvent contact_xtraRowChanged(Me, New contact_xtraRowChangeEvent(CType(e.Row,contact_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.contact_xtraRowChangingEvent) Is Nothing) Then
                RaiseEvent contact_xtraRowChanging(Me, New contact_xtraRowChangeEvent(CType(e.Row,contact_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.contact_xtraRowDeletedEvent) Is Nothing) Then
                RaiseEvent contact_xtraRowDeleted(Me, New contact_xtraRowChangeEvent(CType(e.Row,contact_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.contact_xtraRowDeletingEvent) Is Nothing) Then
                RaiseEvent contact_xtraRowDeleting(Me, New contact_xtraRowChangeEvent(CType(e.Row,contact_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removecontact_xtraRow(ByVal row As contact_xtraRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "contact_xtraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class divisionDataTable
        Inherits Global.System.Data.TypedTableBase(Of divisionRow)
        
        Private columndivno As Global.System.Data.DataColumn
        
        Private columncompno As Global.System.Data.DataColumn
        
        Private columndivname As Global.System.Data.DataColumn
        
        Private columnaddrno As Global.System.Data.DataColumn
        
        Private columnoprano As Global.System.Data.DataColumn
        
        Private columnphone As Global.System.Data.DataColumn
        
        Private columnfax As Global.System.Data.DataColumn
        
        Private columnemployees As Global.System.Data.DataColumn
        
        Private columnturnovercd As Global.System.Data.DataColumn
        
        Private columnsic As Global.System.Data.DataColumn
        
        Private columndivtypedsc As Global.System.Data.DataColumn
        
        Private columndivname_soundex As Global.System.Data.DataColumn
        
        Private columnfcurrcode As Global.System.Data.DataColumn
        
        Private columnopcompany As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnwebsite As Global.System.Data.DataColumn
        
        Private columnfiscalyear As Global.System.Data.DataColumn
        
        Private columnlimited As Global.System.Data.DataColumn
        
        Private columnlastverified As Global.System.Data.DataColumn
        
        Private columnnotepad As Global.System.Data.DataColumn
        
        Private columnnotepad_temp As Global.System.Data.DataColumn
        
        Private columnPriority As Global.System.Data.DataColumn
        
        Private columndivision_mgr As Global.System.Data.DataColumn
        
        Private columnpledgerno As Global.System.Data.DataColumn
        
        Private columnatref As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnStatusFlag As Global.System.Data.DataColumn
        
        Private columnbgid As Global.System.Data.DataColumn
        
        Private columnmystorehideothercategories As Global.System.Data.DataColumn
        
        Private columnusesharedbaskets As Global.System.Data.DataColumn
        
        Private columntemptaxcode As Global.System.Data.DataColumn
        
        Private columntempcountrycode As Global.System.Data.DataColumn
        
        Private columntempvatregcode As Global.System.Data.DataColumn
        
        Private columnsys_a_objects_key As Global.System.Data.DataColumn
        
        Private columnwowpermalink As Global.System.Data.DataColumn
        
        Private columnsource As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "division"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property divnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndivno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property compnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property divnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndivname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addrnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddrno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property opranoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoprano
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property phoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnphone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property employeesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemployees
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property turnovercdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnturnovercd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property divtypedscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndivtypedsc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property divname_soundexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndivname_soundex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fcurrcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfcurrcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property opcompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnopcompany
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property websiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwebsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fiscalyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfiscalyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property limitedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlimited
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastverifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastverified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property notepadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnotepad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property notepad_tempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnotepad_temp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriorityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriority
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property division_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndivision_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pledgernoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpledgerno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property atrefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnatref
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bgidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbgid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mystorehideothercategoriesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmystorehideothercategories
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property usesharedbasketsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusesharedbaskets
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property temptaxcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntemptaxcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tempcountrycodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntempcountrycode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tempvatregcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntempvatregcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sys_a_objects_keyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsys_a_objects_key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property wowpermalinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwowpermalink
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As divisionRow
            Get
                Return CType(Me.Rows(index),divisionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionRowChanging As divisionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionRowChanged As divisionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionRowDeleting As divisionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionRowDeleted As divisionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddivisionRow(ByVal row As divisionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddivisionRow( _
                    ByVal divno As Integer,  _
                    ByVal compno As Integer,  _
                    ByVal divname As String,  _
                    ByVal addrno As Integer,  _
                    ByVal oprano As String,  _
                    ByVal phone As String,  _
                    ByVal fax As String,  _
                    ByVal employees As Integer,  _
                    ByVal turnovercd As String,  _
                    ByVal sic As String,  _
                    ByVal divtypedsc As String,  _
                    ByVal divname_soundex As Integer,  _
                    ByVal fcurrcode As String,  _
                    ByVal opcompany As String,  _
                    ByVal account_mgr As String,  _
                    ByVal website As String,  _
                    ByVal fiscalyear As Date,  _
                    ByVal limited As String,  _
                    ByVal lastverified As Date,  _
                    ByVal notepad As String,  _
                    ByVal notepad_temp As String,  _
                    ByVal Priority As Integer,  _
                    ByVal division_mgr As String,  _
                    ByVal pledgerno As String,  _
                    ByVal atref As String,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal createdby As String,  _
                    ByVal StatusFlag As String,  _
                    ByVal bgid As Integer,  _
                    ByVal mystorehideothercategories As Double,  _
                    ByVal usesharedbaskets As Short,  _
                    ByVal temptaxcode As String,  _
                    ByVal tempcountrycode As String,  _
                    ByVal tempvatregcode As String,  _
                    ByVal sys_a_objects_key As String,  _
                    ByVal wowpermalink As String,  _
                    ByVal source As String) As divisionRow
            Dim rowdivisionRow As divisionRow = CType(Me.NewRow,divisionRow)
            Dim columnValuesArray() As Object = New Object() {divno, compno, divname, addrno, oprano, phone, fax, employees, turnovercd, sic, divtypedsc, divname_soundex, fcurrcode, opcompany, account_mgr, website, fiscalyear, limited, lastverified, notepad, notepad_temp, Priority, division_mgr, pledgerno, atref, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, StatusFlag, bgid, mystorehideothercategories, usesharedbaskets, temptaxcode, tempcountrycode, tempvatregcode, sys_a_objects_key, wowpermalink, source}
            rowdivisionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdivisionRow)
            Return rowdivisionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBydivno(ByVal divno As Integer) As divisionRow
            Return CType(Me.Rows.Find(New Object() {divno}),divisionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As divisionDataTable = CType(MyBase.Clone,divisionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New divisionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndivno = MyBase.Columns("divno")
            Me.columncompno = MyBase.Columns("compno")
            Me.columndivname = MyBase.Columns("divname")
            Me.columnaddrno = MyBase.Columns("addrno")
            Me.columnoprano = MyBase.Columns("oprano")
            Me.columnphone = MyBase.Columns("phone")
            Me.columnfax = MyBase.Columns("fax")
            Me.columnemployees = MyBase.Columns("employees")
            Me.columnturnovercd = MyBase.Columns("turnovercd")
            Me.columnsic = MyBase.Columns("sic")
            Me.columndivtypedsc = MyBase.Columns("divtypedsc")
            Me.columndivname_soundex = MyBase.Columns("divname_soundex")
            Me.columnfcurrcode = MyBase.Columns("fcurrcode")
            Me.columnopcompany = MyBase.Columns("opcompany")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnwebsite = MyBase.Columns("website")
            Me.columnfiscalyear = MyBase.Columns("fiscalyear")
            Me.columnlimited = MyBase.Columns("limited")
            Me.columnlastverified = MyBase.Columns("lastverified")
            Me.columnnotepad = MyBase.Columns("notepad")
            Me.columnnotepad_temp = MyBase.Columns("notepad_temp")
            Me.columnPriority = MyBase.Columns("Priority")
            Me.columndivision_mgr = MyBase.Columns("division_mgr")
            Me.columnpledgerno = MyBase.Columns("pledgerno")
            Me.columnatref = MyBase.Columns("atref")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnStatusFlag = MyBase.Columns("StatusFlag")
            Me.columnbgid = MyBase.Columns("bgid")
            Me.columnmystorehideothercategories = MyBase.Columns("mystorehideothercategories")
            Me.columnusesharedbaskets = MyBase.Columns("usesharedbaskets")
            Me.columntemptaxcode = MyBase.Columns("temptaxcode")
            Me.columntempcountrycode = MyBase.Columns("tempcountrycode")
            Me.columntempvatregcode = MyBase.Columns("tempvatregcode")
            Me.columnsys_a_objects_key = MyBase.Columns("sys_a_objects_key")
            Me.columnwowpermalink = MyBase.Columns("wowpermalink")
            Me.columnsource = MyBase.Columns("source")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndivno = New Global.System.Data.DataColumn("divno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndivno)
            Me.columncompno = New Global.System.Data.DataColumn("compno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompno)
            Me.columndivname = New Global.System.Data.DataColumn("divname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndivname)
            Me.columnaddrno = New Global.System.Data.DataColumn("addrno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddrno)
            Me.columnoprano = New Global.System.Data.DataColumn("oprano", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoprano)
            Me.columnphone = New Global.System.Data.DataColumn("phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphone)
            Me.columnfax = New Global.System.Data.DataColumn("fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfax)
            Me.columnemployees = New Global.System.Data.DataColumn("employees", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemployees)
            Me.columnturnovercd = New Global.System.Data.DataColumn("turnovercd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnturnovercd)
            Me.columnsic = New Global.System.Data.DataColumn("sic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsic)
            Me.columndivtypedsc = New Global.System.Data.DataColumn("divtypedsc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndivtypedsc)
            Me.columndivname_soundex = New Global.System.Data.DataColumn("divname_soundex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndivname_soundex)
            Me.columnfcurrcode = New Global.System.Data.DataColumn("fcurrcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfcurrcode)
            Me.columnopcompany = New Global.System.Data.DataColumn("opcompany", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnopcompany)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnwebsite = New Global.System.Data.DataColumn("website", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwebsite)
            Me.columnfiscalyear = New Global.System.Data.DataColumn("fiscalyear", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfiscalyear)
            Me.columnlimited = New Global.System.Data.DataColumn("limited", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlimited)
            Me.columnlastverified = New Global.System.Data.DataColumn("lastverified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastverified)
            Me.columnnotepad = New Global.System.Data.DataColumn("notepad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnotepad)
            Me.columnnotepad_temp = New Global.System.Data.DataColumn("notepad_temp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnotepad_temp)
            Me.columnPriority = New Global.System.Data.DataColumn("Priority", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriority)
            Me.columndivision_mgr = New Global.System.Data.DataColumn("division_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndivision_mgr)
            Me.columnpledgerno = New Global.System.Data.DataColumn("pledgerno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpledgerno)
            Me.columnatref = New Global.System.Data.DataColumn("atref", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnatref)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnStatusFlag = New Global.System.Data.DataColumn("StatusFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusFlag)
            Me.columnbgid = New Global.System.Data.DataColumn("bgid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbgid)
            Me.columnmystorehideothercategories = New Global.System.Data.DataColumn("mystorehideothercategories", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmystorehideothercategories)
            Me.columnusesharedbaskets = New Global.System.Data.DataColumn("usesharedbaskets", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusesharedbaskets)
            Me.columntemptaxcode = New Global.System.Data.DataColumn("temptaxcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntemptaxcode)
            Me.columntempcountrycode = New Global.System.Data.DataColumn("tempcountrycode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntempcountrycode)
            Me.columntempvatregcode = New Global.System.Data.DataColumn("tempvatregcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntempvatregcode)
            Me.columnsys_a_objects_key = New Global.System.Data.DataColumn("sys_a_objects_key", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsys_a_objects_key)
            Me.columnwowpermalink = New Global.System.Data.DataColumn("wowpermalink", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwowpermalink)
            Me.columnsource = New Global.System.Data.DataColumn("source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsource)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columndivno}, true))
            Me.columndivno.AllowDBNull = false
            Me.columndivno.Unique = true
            Me.columncompno.AllowDBNull = false
            Me.columndivname.MaxLength = 120
            Me.columnaddrno.AllowDBNull = false
            Me.columnoprano.MaxLength = 20
            Me.columnphone.MaxLength = 30
            Me.columnfax.MaxLength = 30
            Me.columnturnovercd.MaxLength = 6
            Me.columnsic.MaxLength = 6
            Me.columndivtypedsc.MaxLength = 20
            Me.columnfcurrcode.MaxLength = 3
            Me.columnopcompany.AllowDBNull = false
            Me.columnopcompany.MaxLength = 1
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnwebsite.MaxLength = 80
            Me.columnlimited.MaxLength = 6
            Me.columnnotepad.MaxLength = 2000000000
            Me.columnnotepad_temp.MaxLength = 2000000000
            Me.columndivision_mgr.MaxLength = 3
            Me.columnpledgerno.MaxLength = 20
            Me.columnatref.MaxLength = 60
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnStatusFlag.AllowDBNull = false
            Me.columnStatusFlag.MaxLength = 1
            Me.columnmystorehideothercategories.AllowDBNull = false
            Me.columntemptaxcode.MaxLength = 4
            Me.columntempcountrycode.MaxLength = 3
            Me.columntempvatregcode.MaxLength = 20
            Me.columnsys_a_objects_key.MaxLength = 30
            Me.columnwowpermalink.MaxLength = 36
            Me.columnsource.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdivisionRow() As divisionRow
            Return CType(Me.NewRow,divisionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New divisionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(divisionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.divisionRowChangedEvent) Is Nothing) Then
                RaiseEvent divisionRowChanged(Me, New divisionRowChangeEvent(CType(e.Row,divisionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.divisionRowChangingEvent) Is Nothing) Then
                RaiseEvent divisionRowChanging(Me, New divisionRowChangeEvent(CType(e.Row,divisionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.divisionRowDeletedEvent) Is Nothing) Then
                RaiseEvent divisionRowDeleted(Me, New divisionRowChangeEvent(CType(e.Row,divisionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.divisionRowDeletingEvent) Is Nothing) Then
                RaiseEvent divisionRowDeleting(Me, New divisionRowChangeEvent(CType(e.Row,divisionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedivisionRow(ByVal row As divisionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "divisionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class division_xtraDataTable
        Inherits Global.System.Data.TypedTableBase(Of division_xtraRow)
        
        Private columnDivNo As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columndd_ddi_exportdate As Global.System.Data.DataColumn
        
        Private columndd_ddi_receiveddate As Global.System.Data.DataColumn
        
        Private columndd_ddi_activateddate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "division_xtra"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_ddi_exportdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_ddi_exportdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_ddi_receiveddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_ddi_receiveddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_ddi_activateddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_ddi_activateddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As division_xtraRow
            Get
                Return CType(Me.Rows(index),division_xtraRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event division_xtraRowChanging As division_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event division_xtraRowChanged As division_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event division_xtraRowDeleting As division_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event division_xtraRowDeleted As division_xtraRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Adddivision_xtraRow(ByVal row As division_xtraRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Adddivision_xtraRow(ByVal DivNo As Integer, ByVal account_mgr As String, ByVal lastupdatedtimestamp As Date, ByVal lastupdated As Date, ByVal lastupdatedby As String, ByVal created As Date, ByVal createdby As String, ByVal dd_ddi_exportdate As Date, ByVal dd_ddi_receiveddate As Date, ByVal dd_ddi_activateddate As Date) As division_xtraRow
            Dim rowdivision_xtraRow As division_xtraRow = CType(Me.NewRow,division_xtraRow)
            Dim columnValuesArray() As Object = New Object() {DivNo, account_mgr, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, dd_ddi_exportdate, dd_ddi_receiveddate, dd_ddi_activateddate}
            rowdivision_xtraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdivision_xtraRow)
            Return rowdivision_xtraRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDivNo(ByVal DivNo As Integer) As division_xtraRow
            Return CType(Me.Rows.Find(New Object() {DivNo}),division_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As division_xtraDataTable = CType(MyBase.Clone,division_xtraDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New division_xtraDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDivNo = MyBase.Columns("DivNo")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columndd_ddi_exportdate = MyBase.Columns("dd_ddi_exportdate")
            Me.columndd_ddi_receiveddate = MyBase.Columns("dd_ddi_receiveddate")
            Me.columndd_ddi_activateddate = MyBase.Columns("dd_ddi_activateddate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDivNo = New Global.System.Data.DataColumn("DivNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivNo)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columndd_ddi_exportdate = New Global.System.Data.DataColumn("dd_ddi_exportdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_ddi_exportdate)
            Me.columndd_ddi_receiveddate = New Global.System.Data.DataColumn("dd_ddi_receiveddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_ddi_receiveddate)
            Me.columndd_ddi_activateddate = New Global.System.Data.DataColumn("dd_ddi_activateddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_ddi_activateddate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDivNo}, true))
            Me.columnDivNo.AllowDBNull = false
            Me.columnDivNo.Unique = true
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newdivision_xtraRow() As division_xtraRow
            Return CType(Me.NewRow,division_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New division_xtraRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(division_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.division_xtraRowChangedEvent) Is Nothing) Then
                RaiseEvent division_xtraRowChanged(Me, New division_xtraRowChangeEvent(CType(e.Row,division_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.division_xtraRowChangingEvent) Is Nothing) Then
                RaiseEvent division_xtraRowChanging(Me, New division_xtraRowChangeEvent(CType(e.Row,division_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.division_xtraRowDeletedEvent) Is Nothing) Then
                RaiseEvent division_xtraRowDeleted(Me, New division_xtraRowChangeEvent(CType(e.Row,division_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.division_xtraRowDeletingEvent) Is Nothing) Then
                RaiseEvent division_xtraRowDeleting(Me, New division_xtraRowChangeEvent(CType(e.Row,division_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removedivision_xtraRow(ByVal row As division_xtraRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "division_xtraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class leadDataTable
        Inherits Global.System.Data.TypedTableBase(Of leadRow)
        
        Private columnleadno As Global.System.Data.DataColumn
        
        Private columncontno As Global.System.Data.DataColumn
        
        Private columnleadsrccd As Global.System.Data.DataColumn
        
        Private columnleaddate As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnleadsttscd As Global.System.Data.DataColumn
        
        Private columnlsttsdtlcd As Global.System.Data.DataColumn
        
        Private columnstchngdate As Global.System.Data.DataColumn
        
        Private columnquoteno As Global.System.Data.DataColumn
        
        Private columncg_code As Global.System.Data.DataColumn
        
        Private columnleadsizecd As Global.System.Data.DataColumn
        
        Private columnguttometer As Global.System.Data.DataColumn
        
        Private columnpostponed As Global.System.Data.DataColumn
        
        Private columnprobcount As Global.System.Data.DataColumn
        
        Private columnspokedate As Global.System.Data.DataColumn
        
        Private columnspokecd As Global.System.Data.DataColumn
        
        Private columnnotepad As Global.System.Data.DataColumn
        
        Private columnspoketime As Global.System.Data.DataColumn
        
        Private columnsttschgtm As Global.System.Data.DataColumn
        
        Private columnnotepad_temp As Global.System.Data.DataColumn
        
        Private columnestclose As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnlead_desc As Global.System.Data.DataColumn
        
        Private columnrespuser As Global.System.Data.DataColumn
        
        Private columnmarginsize As Global.System.Data.DataColumn
        
        Private columnaccount_director As Global.System.Data.DataColumn
        
        Private columncashvalue As Global.System.Data.DataColumn
        
        Private columnanalysis1 As Global.System.Data.DataColumn
        
        Private columnsituationsummary As Global.System.Data.DataColumn
        
        Private columnleadsourceother As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columnStatusFlag As Global.System.Data.DataColumn
        
        Private columnleadsourceactivity As Global.System.Data.DataColumn
        
        Private columnsys_a_objects_key As Global.System.Data.DataColumn
        
        Private columnleadtypecd As Global.System.Data.DataColumn
        
        Private columnsalesperson As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "lead"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadsrccdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadsrccd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leaddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleaddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadsttscdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadsttscd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lsttsdtlcdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlsttsdtlcd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property stchngdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstchngdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property quotenoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquoteno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cg_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncg_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadsizecdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadsizecd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property guttometerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnguttometer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property postponedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostponed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property probcountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprobcount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spokedateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspokedate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spokecdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspokecd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property notepadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnotepad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spoketimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspoketime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sttschgtmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsttschgtm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property notepad_tempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnotepad_temp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property estcloseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestclose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lead_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlead_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property respuserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrespuser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property marginsizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarginsize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_directorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_director
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cashvalueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncashvalue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property analysis1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnanalysis1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property situationsummaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsituationsummary
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadsourceotherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadsourceother
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadsourceactivityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadsourceactivity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sys_a_objects_keyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsys_a_objects_key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadtypecdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadtypecd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property salespersonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalesperson
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As leadRow
            Get
                Return CType(Me.Rows(index),leadRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event leadRowChanging As leadRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event leadRowChanged As leadRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event leadRowDeleting As leadRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event leadRowDeleted As leadRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddleadRow(ByVal row As leadRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddleadRow( _
                    ByVal leadno As Integer,  _
                    ByVal contno As Integer,  _
                    ByVal leadsrccd As String,  _
                    ByVal leaddate As Date,  _
                    ByVal createdby As String,  _
                    ByVal leadsttscd As String,  _
                    ByVal lsttsdtlcd As String,  _
                    ByVal stchngdate As Date,  _
                    ByVal quoteno As Integer,  _
                    ByVal cg_code As String,  _
                    ByVal leadsizecd As String,  _
                    ByVal guttometer As Integer,  _
                    ByVal postponed As Integer,  _
                    ByVal probcount As Integer,  _
                    ByVal spokedate As Date,  _
                    ByVal spokecd As String,  _
                    ByVal notepad As String,  _
                    ByVal spoketime As System.TimeSpan,  _
                    ByVal sttschgtm As System.TimeSpan,  _
                    ByVal notepad_temp As String,  _
                    ByVal estclose As Date,  _
                    ByVal account_mgr As String,  _
                    ByVal lead_desc As String,  _
                    ByVal respuser As String,  _
                    ByVal marginsize As String,  _
                    ByVal account_director As String,  _
                    ByVal cashvalue As String,  _
                    ByVal analysis1 As String,  _
                    ByVal situationsummary As String,  _
                    ByVal leadsourceother As String,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal StatusFlag As String,  _
                    ByVal leadsourceactivity As Integer,  _
                    ByVal sys_a_objects_key As String,  _
                    ByVal leadtypecd As String,  _
                    ByVal salesperson As String) As leadRow
            Dim rowleadRow As leadRow = CType(Me.NewRow,leadRow)
            Dim columnValuesArray() As Object = New Object() {leadno, contno, leadsrccd, leaddate, createdby, leadsttscd, lsttsdtlcd, stchngdate, quoteno, cg_code, leadsizecd, guttometer, postponed, probcount, spokedate, spokecd, notepad, spoketime, sttschgtm, notepad_temp, estclose, account_mgr, lead_desc, respuser, marginsize, account_director, cashvalue, analysis1, situationsummary, leadsourceother, lastupdatedtimestamp, lastupdated, lastupdatedby, created, StatusFlag, leadsourceactivity, sys_a_objects_key, leadtypecd, salesperson}
            rowleadRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowleadRow)
            Return rowleadRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByleadno(ByVal leadno As Integer) As leadRow
            Return CType(Me.Rows.Find(New Object() {leadno}),leadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As leadDataTable = CType(MyBase.Clone,leadDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New leadDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnleadno = MyBase.Columns("leadno")
            Me.columncontno = MyBase.Columns("contno")
            Me.columnleadsrccd = MyBase.Columns("leadsrccd")
            Me.columnleaddate = MyBase.Columns("leaddate")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnleadsttscd = MyBase.Columns("leadsttscd")
            Me.columnlsttsdtlcd = MyBase.Columns("lsttsdtlcd")
            Me.columnstchngdate = MyBase.Columns("stchngdate")
            Me.columnquoteno = MyBase.Columns("quoteno")
            Me.columncg_code = MyBase.Columns("cg_code")
            Me.columnleadsizecd = MyBase.Columns("leadsizecd")
            Me.columnguttometer = MyBase.Columns("guttometer")
            Me.columnpostponed = MyBase.Columns("postponed")
            Me.columnprobcount = MyBase.Columns("probcount")
            Me.columnspokedate = MyBase.Columns("spokedate")
            Me.columnspokecd = MyBase.Columns("spokecd")
            Me.columnnotepad = MyBase.Columns("notepad")
            Me.columnspoketime = MyBase.Columns("spoketime")
            Me.columnsttschgtm = MyBase.Columns("sttschgtm")
            Me.columnnotepad_temp = MyBase.Columns("notepad_temp")
            Me.columnestclose = MyBase.Columns("estclose")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnlead_desc = MyBase.Columns("lead_desc")
            Me.columnrespuser = MyBase.Columns("respuser")
            Me.columnmarginsize = MyBase.Columns("marginsize")
            Me.columnaccount_director = MyBase.Columns("account_director")
            Me.columncashvalue = MyBase.Columns("cashvalue")
            Me.columnanalysis1 = MyBase.Columns("analysis1")
            Me.columnsituationsummary = MyBase.Columns("situationsummary")
            Me.columnleadsourceother = MyBase.Columns("leadsourceother")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columnStatusFlag = MyBase.Columns("StatusFlag")
            Me.columnleadsourceactivity = MyBase.Columns("leadsourceactivity")
            Me.columnsys_a_objects_key = MyBase.Columns("sys_a_objects_key")
            Me.columnleadtypecd = MyBase.Columns("leadtypecd")
            Me.columnsalesperson = MyBase.Columns("salesperson")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnleadno = New Global.System.Data.DataColumn("leadno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadno)
            Me.columncontno = New Global.System.Data.DataColumn("contno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontno)
            Me.columnleadsrccd = New Global.System.Data.DataColumn("leadsrccd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadsrccd)
            Me.columnleaddate = New Global.System.Data.DataColumn("leaddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleaddate)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnleadsttscd = New Global.System.Data.DataColumn("leadsttscd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadsttscd)
            Me.columnlsttsdtlcd = New Global.System.Data.DataColumn("lsttsdtlcd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlsttsdtlcd)
            Me.columnstchngdate = New Global.System.Data.DataColumn("stchngdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstchngdate)
            Me.columnquoteno = New Global.System.Data.DataColumn("quoteno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquoteno)
            Me.columncg_code = New Global.System.Data.DataColumn("cg_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncg_code)
            Me.columnleadsizecd = New Global.System.Data.DataColumn("leadsizecd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadsizecd)
            Me.columnguttometer = New Global.System.Data.DataColumn("guttometer", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnguttometer)
            Me.columnpostponed = New Global.System.Data.DataColumn("postponed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostponed)
            Me.columnprobcount = New Global.System.Data.DataColumn("probcount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprobcount)
            Me.columnspokedate = New Global.System.Data.DataColumn("spokedate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspokedate)
            Me.columnspokecd = New Global.System.Data.DataColumn("spokecd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspokecd)
            Me.columnnotepad = New Global.System.Data.DataColumn("notepad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnotepad)
            Me.columnspoketime = New Global.System.Data.DataColumn("spoketime", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspoketime)
            Me.columnsttschgtm = New Global.System.Data.DataColumn("sttschgtm", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsttschgtm)
            Me.columnnotepad_temp = New Global.System.Data.DataColumn("notepad_temp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnotepad_temp)
            Me.columnestclose = New Global.System.Data.DataColumn("estclose", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestclose)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnlead_desc = New Global.System.Data.DataColumn("lead_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlead_desc)
            Me.columnrespuser = New Global.System.Data.DataColumn("respuser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrespuser)
            Me.columnmarginsize = New Global.System.Data.DataColumn("marginsize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarginsize)
            Me.columnaccount_director = New Global.System.Data.DataColumn("account_director", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_director)
            Me.columncashvalue = New Global.System.Data.DataColumn("cashvalue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncashvalue)
            Me.columnanalysis1 = New Global.System.Data.DataColumn("analysis1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanalysis1)
            Me.columnsituationsummary = New Global.System.Data.DataColumn("situationsummary", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsituationsummary)
            Me.columnleadsourceother = New Global.System.Data.DataColumn("leadsourceother", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadsourceother)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columnStatusFlag = New Global.System.Data.DataColumn("StatusFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusFlag)
            Me.columnleadsourceactivity = New Global.System.Data.DataColumn("leadsourceactivity", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadsourceactivity)
            Me.columnsys_a_objects_key = New Global.System.Data.DataColumn("sys_a_objects_key", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsys_a_objects_key)
            Me.columnleadtypecd = New Global.System.Data.DataColumn("leadtypecd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadtypecd)
            Me.columnsalesperson = New Global.System.Data.DataColumn("salesperson", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalesperson)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnleadno}, true))
            Me.columnleadno.AllowDBNull = false
            Me.columnleadno.Unique = true
            Me.columncontno.AllowDBNull = false
            Me.columnleadsrccd.AllowDBNull = false
            Me.columnleadsrccd.MaxLength = 6
            Me.columnleaddate.AllowDBNull = false
            Me.columncreatedby.AllowDBNull = false
            Me.columncreatedby.MaxLength = 3
            Me.columnleadsttscd.AllowDBNull = false
            Me.columnleadsttscd.MaxLength = 6
            Me.columnlsttsdtlcd.MaxLength = 6
            Me.columncg_code.MaxLength = 20
            Me.columnleadsizecd.AllowDBNull = false
            Me.columnleadsizecd.MaxLength = 6
            Me.columnguttometer.AllowDBNull = false
            Me.columnpostponed.AllowDBNull = false
            Me.columnprobcount.AllowDBNull = false
            Me.columnspokecd.MaxLength = 6
            Me.columnnotepad.MaxLength = 2000000000
            Me.columnnotepad_temp.MaxLength = 2000000000
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnlead_desc.MaxLength = 40
            Me.columnrespuser.MaxLength = 3
            Me.columnmarginsize.MaxLength = 6
            Me.columnaccount_director.MaxLength = 3
            Me.columncashvalue.MaxLength = 20
            Me.columnanalysis1.MaxLength = 6
            Me.columnsituationsummary.MaxLength = 2000000000
            Me.columnleadsourceother.MaxLength = 30
            Me.columnlastupdatedby.MaxLength = 3
            Me.columnStatusFlag.AllowDBNull = false
            Me.columnStatusFlag.MaxLength = 1
            Me.columnsys_a_objects_key.MaxLength = 30
            Me.columnleadtypecd.MaxLength = 6
            Me.columnsalesperson.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewleadRow() As leadRow
            Return CType(Me.NewRow,leadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New leadRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(leadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.leadRowChangedEvent) Is Nothing) Then
                RaiseEvent leadRowChanged(Me, New leadRowChangeEvent(CType(e.Row,leadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.leadRowChangingEvent) Is Nothing) Then
                RaiseEvent leadRowChanging(Me, New leadRowChangeEvent(CType(e.Row,leadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.leadRowDeletedEvent) Is Nothing) Then
                RaiseEvent leadRowDeleted(Me, New leadRowChangeEvent(CType(e.Row,leadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.leadRowDeletingEvent) Is Nothing) Then
                RaiseEvent leadRowDeleting(Me, New leadRowChangeEvent(CType(e.Row,leadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveleadRow(ByVal row As leadRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "leadDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class lead_xtraDataTable
        Inherits Global.System.Data.TypedTableBase(Of lead_xtraRow)
        
        Private columnleadno As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnrefno As Global.System.Data.DataColumn
        
        Private columnexhibitionname As Global.System.Data.DataColumn
        
        Private columnmagazinename As Global.System.Data.DataColumn
        
        Private columndatereceived As Global.System.Data.DataColumn
        
        Private columndateinfosent As Global.System.Data.DataColumn
        
        Private columnvisitdate As Global.System.Data.DataColumn
        
        Private columncalltimein As Global.System.Data.DataColumn
        
        Private columncalltimeout As Global.System.Data.DataColumn
        
        Private columnnooffloors As Global.System.Data.DataColumn
        
        Private columnnoofstaircasesescape As Global.System.Data.DataColumn
        
        Private columnobsolete_noofnotifieddisabled As Global.System.Data.DataColumn
        
        Private columnobsolete_accessofpublic As Global.System.Data.DataColumn
        
        Private columnobsolete_towhatfloors As Global.System.Data.DataColumn
        
        Private columnobsolete_locationofrestaurant As Global.System.Data.DataColumn
        
        Private columnobsolete_locationofdisabledtoilets As Global.System.Data.DataColumn
        
        Private columnsuggestednoofchairs As Global.System.Data.DataColumn
        
        Private columnobsolete_materials As Global.System.Data.DataColumn
        
        Private columnobsolete_lessdiscount As Global.System.Data.DataColumn
        
        Private columnobsolete_subtotal As Global.System.Data.DataColumn
        
        Private columnobsolete_postageandpackaging As Global.System.Data.DataColumn
        
        Private columnobsolete_labour As Global.System.Data.DataColumn
        
        Private columnobsolete_expenses As Global.System.Data.DataColumn
        
        Private columnobsolete_costtotal As Global.System.Data.DataColumn
        
        Private columnobsolete_vat As Global.System.Data.DataColumn
        
        Private columnobsolete_grandtotal As Global.System.Data.DataColumn
        
        Private columncomments As Global.System.Data.DataColumn
        
        Private columnrepinitials As Global.System.Data.DataColumn
        
        Private columnmailinglistdate As Global.System.Data.DataColumn
        
        Private columndemorequested As Global.System.Data.DataColumn
        
        Private columnprojectno As Global.System.Data.DataColumn
        
        Private columndemoarrangedby As Global.System.Data.DataColumn
        
        Private columnorder_no As Global.System.Data.DataColumn
        
        Private columncontract_chair_no As Global.System.Data.DataColumn
        
        Private columnadditional_notes As Global.System.Data.DataColumn
        
        Private columnadd_chair_inv_no As Global.System.Data.DataColumn
        
        Private columndate_executed As Global.System.Data.DataColumn
        
        Private columndate_cancelled As Global.System.Data.DataColumn
        
        Private columnhistory_date As Global.System.Data.DataColumn
        
        Private columnrenewal_date As Global.System.Data.DataColumn
        
        Private columndate_trained As Global.System.Data.DataColumn
        
        Private columntraining_done As Global.System.Data.DataColumn
        
        Private columntime_in As Global.System.Data.DataColumn
        
        Private columntime_out As Global.System.Data.DataColumn
        
        Private columnduration As Global.System.Data.DataColumn
        
        Private columnevac_chair_ref_no As Global.System.Data.DataColumn
        
        Private columnadditional_notes2 As Global.System.Data.DataColumn
        
        Private columnstart_date As Global.System.Data.DataColumn
        
        Private columncompletion_date As Global.System.Data.DataColumn
        
        Private columncontract_worksheet_no As Global.System.Data.DataColumn
        
        Private columnno_of_chairs As Global.System.Data.DataColumn
        
        Private columnannual_cost As Global.System.Data.DataColumn
        
        Private columncustomer_order_no As Global.System.Data.DataColumn
        
        Private columnquotepadref As Global.System.Data.DataColumn
        
        Private columndoc_no As Global.System.Data.DataColumn
        
        Private columnmaster_leadno As Global.System.Data.DataColumn
        
        Private columnproject_stair1_location As Global.System.Data.DataColumn
        
        Private columnproject_stair1_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair1_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair1_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair2_location As Global.System.Data.DataColumn
        
        Private columnproject_stair2_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair2_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair2_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair3_location As Global.System.Data.DataColumn
        
        Private columnproject_stair3_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair3_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair3_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair4_location As Global.System.Data.DataColumn
        
        Private columnproject_stair4_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair4_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair4_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair5_location As Global.System.Data.DataColumn
        
        Private columnproject_stair5_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair5_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair5_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair6_location As Global.System.Data.DataColumn
        
        Private columnproject_stair6_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair6_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair6_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair7_location As Global.System.Data.DataColumn
        
        Private columnproject_stair7_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair7_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair7_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair8_location As Global.System.Data.DataColumn
        
        Private columnproject_stair8_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair8_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair8_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair9_location As Global.System.Data.DataColumn
        
        Private columnproject_stair9_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair9_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair9_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair10_location As Global.System.Data.DataColumn
        
        Private columnproject_stair10_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair10_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair10_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair11_location As Global.System.Data.DataColumn
        
        Private columnproject_stair11_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair11_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair11_comments As Global.System.Data.DataColumn
        
        Private columnproject_stair12_location As Global.System.Data.DataColumn
        
        Private columnproject_stair12_finish As Global.System.Data.DataColumn
        
        Private columnproject_stair12_angle As Global.System.Data.DataColumn
        
        Private columnproject_stair12_comments As Global.System.Data.DataColumn
        
        Private columnproject_external_checks As Global.System.Data.DataColumn
        
        Private columnproject_demo_declined As Global.System.Data.DataColumn
        
        Private columnproject_all_staircases_evaluated As Global.System.Data.DataColumn
        
        Private columnparaid_estimated_date As Global.System.Data.DataColumn
        
        Private columnparaid_drawings_approved_date As Global.System.Data.DataColumn
        
        Private columnparaid_planned_date As Global.System.Data.DataColumn
        
        Private columnparaid_despatched_date As Global.System.Data.DataColumn
        
        Private columndd_type As Global.System.Data.DataColumn
        
        Private columndd_amount As Global.System.Data.DataColumn
        
        Private columndd_exportdate As Global.System.Data.DataColumn
        
        Private columndd_invoice_address As Global.System.Data.DataColumn
        
        Private columndd_paydate As Global.System.Data.DataColumn
        
        Private columndd_lastrejecteddate As Global.System.Data.DataColumn
        
        Private columndd_notes As Global.System.Data.DataColumn
        
        Private columnsuggested_service_date As Global.System.Data.DataColumn
        
        Private columnapppointment_date As Global.System.Data.DataColumn
        
        Private columnapppointment_confirmed As Global.System.Data.DataColumn
        
        Private columnonhold_letter As Global.System.Data.DataColumn
        
        Private columnonhold_date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "lead_xtra"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property leadnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnleadno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property refnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrefno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property exhibitionnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexhibitionname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property magazinenameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmagazinename
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property datereceivedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndatereceived
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateinfosentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndateinfosent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property visitdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvisitdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calltimeinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncalltimein
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property calltimeoutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncalltimeout
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nooffloorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnooffloors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property noofstaircasesescapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnoofstaircasesescape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_noofnotifieddisabledColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_noofnotifieddisabled
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_accessofpublicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_accessofpublic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_towhatfloorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_towhatfloors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_locationofrestaurantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_locationofrestaurant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_locationofdisabledtoiletsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_locationofdisabledtoilets
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property suggestednoofchairsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsuggestednoofchairs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_materialsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_materials
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_lessdiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_lessdiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_subtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_subtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_postageandpackagingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_postageandpackaging
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_labourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_labour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_expensesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_expenses
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_costtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_costtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_vatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_vat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsolete_grandtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete_grandtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property repinitialsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrepinitials
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mailinglistdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmailinglistdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property demorequestedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndemorequested
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property projectnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprojectno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property demoarrangedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndemoarrangedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property order_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorder_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contract_chair_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontract_chair_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property additional_notesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadditional_notes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property add_chair_inv_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_chair_inv_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property date_executedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_executed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property date_cancelledColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_cancelled
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property history_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhistory_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property renewal_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrenewal_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property date_trainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_trained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property training_doneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntraining_done
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_inColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_in
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property time_outColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntime_out
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property durationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnduration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property evac_chair_ref_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnevac_chair_ref_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property additional_notes2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadditional_notes2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property start_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstart_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property completion_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompletion_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contract_worksheet_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontract_worksheet_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_of_chairsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_of_chairs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property annual_costColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnannual_cost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property customer_order_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomer_order_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property quotepadrefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquotepadref
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property doc_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property master_leadnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaster_leadno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair1_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair1_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair1_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair1_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair1_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair1_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair1_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair1_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair2_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair2_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair2_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair2_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair2_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair2_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair2_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair2_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair3_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair3_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair3_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair3_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair3_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair3_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair3_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair3_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair4_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair4_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair4_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair4_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair4_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair4_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair4_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair4_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair5_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair5_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair5_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair5_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair5_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair5_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair5_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair5_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair6_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair6_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair6_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair6_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair6_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair6_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair6_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair6_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair7_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair7_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair7_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair7_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair7_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair7_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair7_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair7_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair8_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair8_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair8_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair8_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair8_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair8_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair8_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair8_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair9_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair9_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair9_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair9_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair9_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair9_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair9_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair9_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair10_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair10_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair10_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair10_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair10_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair10_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair10_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair10_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair11_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair11_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair11_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair11_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair11_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair11_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair11_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair11_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair12_locationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair12_location
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair12_finishColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair12_finish
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair12_angleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair12_angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_stair12_commentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_stair12_comments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_external_checksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_external_checks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_demo_declinedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_demo_declined
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property project_all_staircases_evaluatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproject_all_staircases_evaluated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paraid_estimated_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparaid_estimated_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paraid_drawings_approved_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparaid_drawings_approved_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paraid_planned_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparaid_planned_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paraid_despatched_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparaid_despatched_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_exportdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_exportdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_invoice_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_invoice_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_paydateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_paydate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_lastrejecteddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_lastrejecteddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dd_notesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndd_notes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property suggested_service_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsuggested_service_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property apppointment_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapppointment_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property apppointment_confirmedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapppointment_confirmed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property onhold_letterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnonhold_letter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property onhold_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnonhold_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As lead_xtraRow
            Get
                Return CType(Me.Rows(index),lead_xtraRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lead_xtraRowChanging As lead_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lead_xtraRowChanged As lead_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lead_xtraRowDeleting As lead_xtraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event lead_xtraRowDeleted As lead_xtraRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addlead_xtraRow(ByVal row As lead_xtraRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addlead_xtraRow( _
                    ByVal leadno As Integer,  _
                    ByVal account_mgr As String,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal createdby As String,  _
                    ByVal refno As String,  _
                    ByVal exhibitionname As String,  _
                    ByVal magazinename As String,  _
                    ByVal datereceived As Date,  _
                    ByVal dateinfosent As Date,  _
                    ByVal visitdate As Date,  _
                    ByVal calltimein As System.TimeSpan,  _
                    ByVal calltimeout As System.TimeSpan,  _
                    ByVal nooffloors As Integer,  _
                    ByVal noofstaircasesescape As Integer,  _
                    ByVal obsolete_noofnotifieddisabled As Integer,  _
                    ByVal obsolete_accessofpublic As Short,  _
                    ByVal obsolete_towhatfloors As String,  _
                    ByVal obsolete_locationofrestaurant As String,  _
                    ByVal obsolete_locationofdisabledtoilets As String,  _
                    ByVal suggestednoofchairs As Integer,  _
                    ByVal obsolete_materials As Decimal,  _
                    ByVal obsolete_lessdiscount As Decimal,  _
                    ByVal obsolete_subtotal As Decimal,  _
                    ByVal obsolete_postageandpackaging As Decimal,  _
                    ByVal obsolete_labour As Decimal,  _
                    ByVal obsolete_expenses As Decimal,  _
                    ByVal obsolete_costtotal As Decimal,  _
                    ByVal obsolete_vat As Decimal,  _
                    ByVal obsolete_grandtotal As Decimal,  _
                    ByVal comments As String,  _
                    ByVal repinitials As String,  _
                    ByVal mailinglistdate As Date,  _
                    ByVal demorequested As Short,  _
                    ByVal projectno As Integer,  _
                    ByVal demoarrangedby As String,  _
                    ByVal order_no As String,  _
                    ByVal contract_chair_no As String,  _
                    ByVal additional_notes As String,  _
                    ByVal add_chair_inv_no As String,  _
                    ByVal date_executed As Date,  _
                    ByVal date_cancelled As Date,  _
                    ByVal history_date As Date,  _
                    ByVal renewal_date As Date,  _
                    ByVal date_trained As Date,  _
                    ByVal training_done As String,  _
                    ByVal time_in As System.TimeSpan,  _
                    ByVal time_out As System.TimeSpan,  _
                    ByVal duration As Decimal,  _
                    ByVal evac_chair_ref_no As String,  _
                    ByVal additional_notes2 As String,  _
                    ByVal start_date As Date,  _
                    ByVal completion_date As Date,  _
                    ByVal contract_worksheet_no As String,  _
                    ByVal no_of_chairs As Decimal,  _
                    ByVal annual_cost As Decimal,  _
                    ByVal customer_order_no As String,  _
                    ByVal quotepadref As String,  _
                    ByVal doc_no As String,  _
                    ByVal master_leadno As Integer,  _
                    ByVal project_stair1_location As String,  _
                    ByVal project_stair1_finish As String,  _
                    ByVal project_stair1_angle As String,  _
                    ByVal project_stair1_comments As String,  _
                    ByVal project_stair2_location As String,  _
                    ByVal project_stair2_finish As String,  _
                    ByVal project_stair2_angle As String,  _
                    ByVal project_stair2_comments As String,  _
                    ByVal project_stair3_location As String,  _
                    ByVal project_stair3_finish As String,  _
                    ByVal project_stair3_angle As String,  _
                    ByVal project_stair3_comments As String,  _
                    ByVal project_stair4_location As String,  _
                    ByVal project_stair4_finish As String,  _
                    ByVal project_stair4_angle As String,  _
                    ByVal project_stair4_comments As String,  _
                    ByVal project_stair5_location As String,  _
                    ByVal project_stair5_finish As String,  _
                    ByVal project_stair5_angle As String,  _
                    ByVal project_stair5_comments As String,  _
                    ByVal project_stair6_location As String,  _
                    ByVal project_stair6_finish As String,  _
                    ByVal project_stair6_angle As String,  _
                    ByVal project_stair6_comments As String,  _
                    ByVal project_stair7_location As String,  _
                    ByVal project_stair7_finish As String,  _
                    ByVal project_stair7_angle As String,  _
                    ByVal project_stair7_comments As String,  _
                    ByVal project_stair8_location As String,  _
                    ByVal project_stair8_finish As String,  _
                    ByVal project_stair8_angle As String,  _
                    ByVal project_stair8_comments As String,  _
                    ByVal project_stair9_location As String,  _
                    ByVal project_stair9_finish As String,  _
                    ByVal project_stair9_angle As String,  _
                    ByVal project_stair9_comments As String,  _
                    ByVal project_stair10_location As String,  _
                    ByVal project_stair10_finish As String,  _
                    ByVal project_stair10_angle As String,  _
                    ByVal project_stair10_comments As String,  _
                    ByVal project_stair11_location As String,  _
                    ByVal project_stair11_finish As String,  _
                    ByVal project_stair11_angle As String,  _
                    ByVal project_stair11_comments As String,  _
                    ByVal project_stair12_location As String,  _
                    ByVal project_stair12_finish As String,  _
                    ByVal project_stair12_angle As String,  _
                    ByVal project_stair12_comments As String,  _
                    ByVal project_external_checks As String,  _
                    ByVal project_demo_declined As Integer,  _
                    ByVal project_all_staircases_evaluated As Integer,  _
                    ByVal paraid_estimated_date As Date,  _
                    ByVal paraid_drawings_approved_date As Date,  _
                    ByVal paraid_planned_date As Date,  _
                    ByVal paraid_despatched_date As Date,  _
                    ByVal dd_type As Short,  _
                    ByVal dd_amount As Decimal,  _
                    ByVal dd_exportdate As Date,  _
                    ByVal dd_invoice_address As Short,  _
                    ByVal dd_paydate As Date,  _
                    ByVal dd_lastrejecteddate As Date,  _
                    ByVal dd_notes As String,  _
                    ByVal suggested_service_date As Date,  _
                    ByVal apppointment_date As Date,  _
                    ByVal apppointment_confirmed As Boolean,  _
                    ByVal onhold_letter As Integer,  _
                    ByVal onhold_date As Date) As lead_xtraRow
            Dim rowlead_xtraRow As lead_xtraRow = CType(Me.NewRow,lead_xtraRow)
            Dim columnValuesArray() As Object = New Object() {leadno, account_mgr, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, refno, exhibitionname, magazinename, datereceived, dateinfosent, visitdate, calltimein, calltimeout, nooffloors, noofstaircasesescape, obsolete_noofnotifieddisabled, obsolete_accessofpublic, obsolete_towhatfloors, obsolete_locationofrestaurant, obsolete_locationofdisabledtoilets, suggestednoofchairs, obsolete_materials, obsolete_lessdiscount, obsolete_subtotal, obsolete_postageandpackaging, obsolete_labour, obsolete_expenses, obsolete_costtotal, obsolete_vat, obsolete_grandtotal, comments, repinitials, mailinglistdate, demorequested, projectno, demoarrangedby, order_no, contract_chair_no, additional_notes, add_chair_inv_no, date_executed, date_cancelled, history_date, renewal_date, date_trained, training_done, time_in, time_out, duration, evac_chair_ref_no, additional_notes2, start_date, completion_date, contract_worksheet_no, no_of_chairs, annual_cost, customer_order_no, quotepadref, doc_no, master_leadno, project_stair1_location, project_stair1_finish, project_stair1_angle, project_stair1_comments, project_stair2_location, project_stair2_finish, project_stair2_angle, project_stair2_comments, project_stair3_location, project_stair3_finish, project_stair3_angle, project_stair3_comments, project_stair4_location, project_stair4_finish, project_stair4_angle, project_stair4_comments, project_stair5_location, project_stair5_finish, project_stair5_angle, project_stair5_comments, project_stair6_location, project_stair6_finish, project_stair6_angle, project_stair6_comments, project_stair7_location, project_stair7_finish, project_stair7_angle, project_stair7_comments, project_stair8_location, project_stair8_finish, project_stair8_angle, project_stair8_comments, project_stair9_location, project_stair9_finish, project_stair9_angle, project_stair9_comments, project_stair10_location, project_stair10_finish, project_stair10_angle, project_stair10_comments, project_stair11_location, project_stair11_finish, project_stair11_angle, project_stair11_comments, project_stair12_location, project_stair12_finish, project_stair12_angle, project_stair12_comments, project_external_checks, project_demo_declined, project_all_staircases_evaluated, paraid_estimated_date, paraid_drawings_approved_date, paraid_planned_date, paraid_despatched_date, dd_type, dd_amount, dd_exportdate, dd_invoice_address, dd_paydate, dd_lastrejecteddate, dd_notes, suggested_service_date, apppointment_date, apppointment_confirmed, onhold_letter, onhold_date}
            rowlead_xtraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowlead_xtraRow)
            Return rowlead_xtraRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByleadno(ByVal leadno As Integer) As lead_xtraRow
            Return CType(Me.Rows.Find(New Object() {leadno}),lead_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As lead_xtraDataTable = CType(MyBase.Clone,lead_xtraDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New lead_xtraDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnleadno = MyBase.Columns("leadno")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnrefno = MyBase.Columns("refno")
            Me.columnexhibitionname = MyBase.Columns("exhibitionname")
            Me.columnmagazinename = MyBase.Columns("magazinename")
            Me.columndatereceived = MyBase.Columns("datereceived")
            Me.columndateinfosent = MyBase.Columns("dateinfosent")
            Me.columnvisitdate = MyBase.Columns("visitdate")
            Me.columncalltimein = MyBase.Columns("calltimein")
            Me.columncalltimeout = MyBase.Columns("calltimeout")
            Me.columnnooffloors = MyBase.Columns("nooffloors")
            Me.columnnoofstaircasesescape = MyBase.Columns("noofstaircasesescape")
            Me.columnobsolete_noofnotifieddisabled = MyBase.Columns("obsolete_noofnotifieddisabled")
            Me.columnobsolete_accessofpublic = MyBase.Columns("obsolete_accessofpublic")
            Me.columnobsolete_towhatfloors = MyBase.Columns("obsolete_towhatfloors")
            Me.columnobsolete_locationofrestaurant = MyBase.Columns("obsolete_locationofrestaurant")
            Me.columnobsolete_locationofdisabledtoilets = MyBase.Columns("obsolete_locationofdisabledtoilets")
            Me.columnsuggestednoofchairs = MyBase.Columns("suggestednoofchairs")
            Me.columnobsolete_materials = MyBase.Columns("obsolete_materials")
            Me.columnobsolete_lessdiscount = MyBase.Columns("obsolete_lessdiscount")
            Me.columnobsolete_subtotal = MyBase.Columns("obsolete_subtotal")
            Me.columnobsolete_postageandpackaging = MyBase.Columns("obsolete_postageandpackaging")
            Me.columnobsolete_labour = MyBase.Columns("obsolete_labour")
            Me.columnobsolete_expenses = MyBase.Columns("obsolete_expenses")
            Me.columnobsolete_costtotal = MyBase.Columns("obsolete_costtotal")
            Me.columnobsolete_vat = MyBase.Columns("obsolete_vat")
            Me.columnobsolete_grandtotal = MyBase.Columns("obsolete_grandtotal")
            Me.columncomments = MyBase.Columns("comments")
            Me.columnrepinitials = MyBase.Columns("repinitials")
            Me.columnmailinglistdate = MyBase.Columns("mailinglistdate")
            Me.columndemorequested = MyBase.Columns("demorequested")
            Me.columnprojectno = MyBase.Columns("projectno")
            Me.columndemoarrangedby = MyBase.Columns("demoarrangedby")
            Me.columnorder_no = MyBase.Columns("order_no")
            Me.columncontract_chair_no = MyBase.Columns("contract_chair_no")
            Me.columnadditional_notes = MyBase.Columns("additional_notes")
            Me.columnadd_chair_inv_no = MyBase.Columns("add_chair_inv_no")
            Me.columndate_executed = MyBase.Columns("date_executed")
            Me.columndate_cancelled = MyBase.Columns("date_cancelled")
            Me.columnhistory_date = MyBase.Columns("history_date")
            Me.columnrenewal_date = MyBase.Columns("renewal_date")
            Me.columndate_trained = MyBase.Columns("date_trained")
            Me.columntraining_done = MyBase.Columns("training_done")
            Me.columntime_in = MyBase.Columns("time_in")
            Me.columntime_out = MyBase.Columns("time_out")
            Me.columnduration = MyBase.Columns("duration")
            Me.columnevac_chair_ref_no = MyBase.Columns("evac_chair_ref_no")
            Me.columnadditional_notes2 = MyBase.Columns("additional_notes2")
            Me.columnstart_date = MyBase.Columns("start_date")
            Me.columncompletion_date = MyBase.Columns("completion_date")
            Me.columncontract_worksheet_no = MyBase.Columns("contract_worksheet_no")
            Me.columnno_of_chairs = MyBase.Columns("no_of_chairs")
            Me.columnannual_cost = MyBase.Columns("annual_cost")
            Me.columncustomer_order_no = MyBase.Columns("customer_order_no")
            Me.columnquotepadref = MyBase.Columns("quotepadref")
            Me.columndoc_no = MyBase.Columns("doc_no")
            Me.columnmaster_leadno = MyBase.Columns("master_leadno")
            Me.columnproject_stair1_location = MyBase.Columns("project_stair1_location")
            Me.columnproject_stair1_finish = MyBase.Columns("project_stair1_finish")
            Me.columnproject_stair1_angle = MyBase.Columns("project_stair1_angle")
            Me.columnproject_stair1_comments = MyBase.Columns("project_stair1_comments")
            Me.columnproject_stair2_location = MyBase.Columns("project_stair2_location")
            Me.columnproject_stair2_finish = MyBase.Columns("project_stair2_finish")
            Me.columnproject_stair2_angle = MyBase.Columns("project_stair2_angle")
            Me.columnproject_stair2_comments = MyBase.Columns("project_stair2_comments")
            Me.columnproject_stair3_location = MyBase.Columns("project_stair3_location")
            Me.columnproject_stair3_finish = MyBase.Columns("project_stair3_finish")
            Me.columnproject_stair3_angle = MyBase.Columns("project_stair3_angle")
            Me.columnproject_stair3_comments = MyBase.Columns("project_stair3_comments")
            Me.columnproject_stair4_location = MyBase.Columns("project_stair4_location")
            Me.columnproject_stair4_finish = MyBase.Columns("project_stair4_finish")
            Me.columnproject_stair4_angle = MyBase.Columns("project_stair4_angle")
            Me.columnproject_stair4_comments = MyBase.Columns("project_stair4_comments")
            Me.columnproject_stair5_location = MyBase.Columns("project_stair5_location")
            Me.columnproject_stair5_finish = MyBase.Columns("project_stair5_finish")
            Me.columnproject_stair5_angle = MyBase.Columns("project_stair5_angle")
            Me.columnproject_stair5_comments = MyBase.Columns("project_stair5_comments")
            Me.columnproject_stair6_location = MyBase.Columns("project_stair6_location")
            Me.columnproject_stair6_finish = MyBase.Columns("project_stair6_finish")
            Me.columnproject_stair6_angle = MyBase.Columns("project_stair6_angle")
            Me.columnproject_stair6_comments = MyBase.Columns("project_stair6_comments")
            Me.columnproject_stair7_location = MyBase.Columns("project_stair7_location")
            Me.columnproject_stair7_finish = MyBase.Columns("project_stair7_finish")
            Me.columnproject_stair7_angle = MyBase.Columns("project_stair7_angle")
            Me.columnproject_stair7_comments = MyBase.Columns("project_stair7_comments")
            Me.columnproject_stair8_location = MyBase.Columns("project_stair8_location")
            Me.columnproject_stair8_finish = MyBase.Columns("project_stair8_finish")
            Me.columnproject_stair8_angle = MyBase.Columns("project_stair8_angle")
            Me.columnproject_stair8_comments = MyBase.Columns("project_stair8_comments")
            Me.columnproject_stair9_location = MyBase.Columns("project_stair9_location")
            Me.columnproject_stair9_finish = MyBase.Columns("project_stair9_finish")
            Me.columnproject_stair9_angle = MyBase.Columns("project_stair9_angle")
            Me.columnproject_stair9_comments = MyBase.Columns("project_stair9_comments")
            Me.columnproject_stair10_location = MyBase.Columns("project_stair10_location")
            Me.columnproject_stair10_finish = MyBase.Columns("project_stair10_finish")
            Me.columnproject_stair10_angle = MyBase.Columns("project_stair10_angle")
            Me.columnproject_stair10_comments = MyBase.Columns("project_stair10_comments")
            Me.columnproject_stair11_location = MyBase.Columns("project_stair11_location")
            Me.columnproject_stair11_finish = MyBase.Columns("project_stair11_finish")
            Me.columnproject_stair11_angle = MyBase.Columns("project_stair11_angle")
            Me.columnproject_stair11_comments = MyBase.Columns("project_stair11_comments")
            Me.columnproject_stair12_location = MyBase.Columns("project_stair12_location")
            Me.columnproject_stair12_finish = MyBase.Columns("project_stair12_finish")
            Me.columnproject_stair12_angle = MyBase.Columns("project_stair12_angle")
            Me.columnproject_stair12_comments = MyBase.Columns("project_stair12_comments")
            Me.columnproject_external_checks = MyBase.Columns("project_external_checks")
            Me.columnproject_demo_declined = MyBase.Columns("project_demo_declined")
            Me.columnproject_all_staircases_evaluated = MyBase.Columns("project_all_staircases_evaluated")
            Me.columnparaid_estimated_date = MyBase.Columns("paraid_estimated_date")
            Me.columnparaid_drawings_approved_date = MyBase.Columns("paraid_drawings_approved_date")
            Me.columnparaid_planned_date = MyBase.Columns("paraid_planned_date")
            Me.columnparaid_despatched_date = MyBase.Columns("paraid_despatched_date")
            Me.columndd_type = MyBase.Columns("dd_type")
            Me.columndd_amount = MyBase.Columns("dd_amount")
            Me.columndd_exportdate = MyBase.Columns("dd_exportdate")
            Me.columndd_invoice_address = MyBase.Columns("dd_invoice_address")
            Me.columndd_paydate = MyBase.Columns("dd_paydate")
            Me.columndd_lastrejecteddate = MyBase.Columns("dd_lastrejecteddate")
            Me.columndd_notes = MyBase.Columns("dd_notes")
            Me.columnsuggested_service_date = MyBase.Columns("suggested_service_date")
            Me.columnapppointment_date = MyBase.Columns("apppointment_date")
            Me.columnapppointment_confirmed = MyBase.Columns("apppointment_confirmed")
            Me.columnonhold_letter = MyBase.Columns("onhold_letter")
            Me.columnonhold_date = MyBase.Columns("onhold_date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnleadno = New Global.System.Data.DataColumn("leadno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnleadno)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnrefno = New Global.System.Data.DataColumn("refno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrefno)
            Me.columnexhibitionname = New Global.System.Data.DataColumn("exhibitionname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexhibitionname)
            Me.columnmagazinename = New Global.System.Data.DataColumn("magazinename", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmagazinename)
            Me.columndatereceived = New Global.System.Data.DataColumn("datereceived", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndatereceived)
            Me.columndateinfosent = New Global.System.Data.DataColumn("dateinfosent", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateinfosent)
            Me.columnvisitdate = New Global.System.Data.DataColumn("visitdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvisitdate)
            Me.columncalltimein = New Global.System.Data.DataColumn("calltimein", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalltimein)
            Me.columncalltimeout = New Global.System.Data.DataColumn("calltimeout", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncalltimeout)
            Me.columnnooffloors = New Global.System.Data.DataColumn("nooffloors", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnooffloors)
            Me.columnnoofstaircasesescape = New Global.System.Data.DataColumn("noofstaircasesescape", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnoofstaircasesescape)
            Me.columnobsolete_noofnotifieddisabled = New Global.System.Data.DataColumn("obsolete_noofnotifieddisabled", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_noofnotifieddisabled)
            Me.columnobsolete_accessofpublic = New Global.System.Data.DataColumn("obsolete_accessofpublic", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_accessofpublic)
            Me.columnobsolete_towhatfloors = New Global.System.Data.DataColumn("obsolete_towhatfloors", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_towhatfloors)
            Me.columnobsolete_locationofrestaurant = New Global.System.Data.DataColumn("obsolete_locationofrestaurant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_locationofrestaurant)
            Me.columnobsolete_locationofdisabledtoilets = New Global.System.Data.DataColumn("obsolete_locationofdisabledtoilets", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_locationofdisabledtoilets)
            Me.columnsuggestednoofchairs = New Global.System.Data.DataColumn("suggestednoofchairs", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsuggestednoofchairs)
            Me.columnobsolete_materials = New Global.System.Data.DataColumn("obsolete_materials", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_materials)
            Me.columnobsolete_lessdiscount = New Global.System.Data.DataColumn("obsolete_lessdiscount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_lessdiscount)
            Me.columnobsolete_subtotal = New Global.System.Data.DataColumn("obsolete_subtotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_subtotal)
            Me.columnobsolete_postageandpackaging = New Global.System.Data.DataColumn("obsolete_postageandpackaging", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_postageandpackaging)
            Me.columnobsolete_labour = New Global.System.Data.DataColumn("obsolete_labour", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_labour)
            Me.columnobsolete_expenses = New Global.System.Data.DataColumn("obsolete_expenses", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_expenses)
            Me.columnobsolete_costtotal = New Global.System.Data.DataColumn("obsolete_costtotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_costtotal)
            Me.columnobsolete_vat = New Global.System.Data.DataColumn("obsolete_vat", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_vat)
            Me.columnobsolete_grandtotal = New Global.System.Data.DataColumn("obsolete_grandtotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete_grandtotal)
            Me.columncomments = New Global.System.Data.DataColumn("comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomments)
            Me.columnrepinitials = New Global.System.Data.DataColumn("repinitials", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrepinitials)
            Me.columnmailinglistdate = New Global.System.Data.DataColumn("mailinglistdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmailinglistdate)
            Me.columndemorequested = New Global.System.Data.DataColumn("demorequested", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndemorequested)
            Me.columnprojectno = New Global.System.Data.DataColumn("projectno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprojectno)
            Me.columndemoarrangedby = New Global.System.Data.DataColumn("demoarrangedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndemoarrangedby)
            Me.columnorder_no = New Global.System.Data.DataColumn("order_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorder_no)
            Me.columncontract_chair_no = New Global.System.Data.DataColumn("contract_chair_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontract_chair_no)
            Me.columnadditional_notes = New Global.System.Data.DataColumn("additional_notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadditional_notes)
            Me.columnadd_chair_inv_no = New Global.System.Data.DataColumn("add_chair_inv_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_chair_inv_no)
            Me.columndate_executed = New Global.System.Data.DataColumn("date_executed", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_executed)
            Me.columndate_cancelled = New Global.System.Data.DataColumn("date_cancelled", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_cancelled)
            Me.columnhistory_date = New Global.System.Data.DataColumn("history_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhistory_date)
            Me.columnrenewal_date = New Global.System.Data.DataColumn("renewal_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrenewal_date)
            Me.columndate_trained = New Global.System.Data.DataColumn("date_trained", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_trained)
            Me.columntraining_done = New Global.System.Data.DataColumn("training_done", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntraining_done)
            Me.columntime_in = New Global.System.Data.DataColumn("time_in", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_in)
            Me.columntime_out = New Global.System.Data.DataColumn("time_out", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntime_out)
            Me.columnduration = New Global.System.Data.DataColumn("duration", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnduration)
            Me.columnevac_chair_ref_no = New Global.System.Data.DataColumn("evac_chair_ref_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnevac_chair_ref_no)
            Me.columnadditional_notes2 = New Global.System.Data.DataColumn("additional_notes2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadditional_notes2)
            Me.columnstart_date = New Global.System.Data.DataColumn("start_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstart_date)
            Me.columncompletion_date = New Global.System.Data.DataColumn("completion_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompletion_date)
            Me.columncontract_worksheet_no = New Global.System.Data.DataColumn("contract_worksheet_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontract_worksheet_no)
            Me.columnno_of_chairs = New Global.System.Data.DataColumn("no_of_chairs", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_of_chairs)
            Me.columnannual_cost = New Global.System.Data.DataColumn("annual_cost", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnannual_cost)
            Me.columncustomer_order_no = New Global.System.Data.DataColumn("customer_order_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomer_order_no)
            Me.columnquotepadref = New Global.System.Data.DataColumn("quotepadref", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquotepadref)
            Me.columndoc_no = New Global.System.Data.DataColumn("doc_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_no)
            Me.columnmaster_leadno = New Global.System.Data.DataColumn("master_leadno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaster_leadno)
            Me.columnproject_stair1_location = New Global.System.Data.DataColumn("project_stair1_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair1_location)
            Me.columnproject_stair1_finish = New Global.System.Data.DataColumn("project_stair1_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair1_finish)
            Me.columnproject_stair1_angle = New Global.System.Data.DataColumn("project_stair1_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair1_angle)
            Me.columnproject_stair1_comments = New Global.System.Data.DataColumn("project_stair1_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair1_comments)
            Me.columnproject_stair2_location = New Global.System.Data.DataColumn("project_stair2_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair2_location)
            Me.columnproject_stair2_finish = New Global.System.Data.DataColumn("project_stair2_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair2_finish)
            Me.columnproject_stair2_angle = New Global.System.Data.DataColumn("project_stair2_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair2_angle)
            Me.columnproject_stair2_comments = New Global.System.Data.DataColumn("project_stair2_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair2_comments)
            Me.columnproject_stair3_location = New Global.System.Data.DataColumn("project_stair3_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair3_location)
            Me.columnproject_stair3_finish = New Global.System.Data.DataColumn("project_stair3_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair3_finish)
            Me.columnproject_stair3_angle = New Global.System.Data.DataColumn("project_stair3_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair3_angle)
            Me.columnproject_stair3_comments = New Global.System.Data.DataColumn("project_stair3_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair3_comments)
            Me.columnproject_stair4_location = New Global.System.Data.DataColumn("project_stair4_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair4_location)
            Me.columnproject_stair4_finish = New Global.System.Data.DataColumn("project_stair4_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair4_finish)
            Me.columnproject_stair4_angle = New Global.System.Data.DataColumn("project_stair4_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair4_angle)
            Me.columnproject_stair4_comments = New Global.System.Data.DataColumn("project_stair4_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair4_comments)
            Me.columnproject_stair5_location = New Global.System.Data.DataColumn("project_stair5_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair5_location)
            Me.columnproject_stair5_finish = New Global.System.Data.DataColumn("project_stair5_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair5_finish)
            Me.columnproject_stair5_angle = New Global.System.Data.DataColumn("project_stair5_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair5_angle)
            Me.columnproject_stair5_comments = New Global.System.Data.DataColumn("project_stair5_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair5_comments)
            Me.columnproject_stair6_location = New Global.System.Data.DataColumn("project_stair6_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair6_location)
            Me.columnproject_stair6_finish = New Global.System.Data.DataColumn("project_stair6_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair6_finish)
            Me.columnproject_stair6_angle = New Global.System.Data.DataColumn("project_stair6_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair6_angle)
            Me.columnproject_stair6_comments = New Global.System.Data.DataColumn("project_stair6_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair6_comments)
            Me.columnproject_stair7_location = New Global.System.Data.DataColumn("project_stair7_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair7_location)
            Me.columnproject_stair7_finish = New Global.System.Data.DataColumn("project_stair7_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair7_finish)
            Me.columnproject_stair7_angle = New Global.System.Data.DataColumn("project_stair7_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair7_angle)
            Me.columnproject_stair7_comments = New Global.System.Data.DataColumn("project_stair7_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair7_comments)
            Me.columnproject_stair8_location = New Global.System.Data.DataColumn("project_stair8_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair8_location)
            Me.columnproject_stair8_finish = New Global.System.Data.DataColumn("project_stair8_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair8_finish)
            Me.columnproject_stair8_angle = New Global.System.Data.DataColumn("project_stair8_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair8_angle)
            Me.columnproject_stair8_comments = New Global.System.Data.DataColumn("project_stair8_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair8_comments)
            Me.columnproject_stair9_location = New Global.System.Data.DataColumn("project_stair9_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair9_location)
            Me.columnproject_stair9_finish = New Global.System.Data.DataColumn("project_stair9_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair9_finish)
            Me.columnproject_stair9_angle = New Global.System.Data.DataColumn("project_stair9_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair9_angle)
            Me.columnproject_stair9_comments = New Global.System.Data.DataColumn("project_stair9_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair9_comments)
            Me.columnproject_stair10_location = New Global.System.Data.DataColumn("project_stair10_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair10_location)
            Me.columnproject_stair10_finish = New Global.System.Data.DataColumn("project_stair10_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair10_finish)
            Me.columnproject_stair10_angle = New Global.System.Data.DataColumn("project_stair10_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair10_angle)
            Me.columnproject_stair10_comments = New Global.System.Data.DataColumn("project_stair10_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair10_comments)
            Me.columnproject_stair11_location = New Global.System.Data.DataColumn("project_stair11_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair11_location)
            Me.columnproject_stair11_finish = New Global.System.Data.DataColumn("project_stair11_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair11_finish)
            Me.columnproject_stair11_angle = New Global.System.Data.DataColumn("project_stair11_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair11_angle)
            Me.columnproject_stair11_comments = New Global.System.Data.DataColumn("project_stair11_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair11_comments)
            Me.columnproject_stair12_location = New Global.System.Data.DataColumn("project_stair12_location", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair12_location)
            Me.columnproject_stair12_finish = New Global.System.Data.DataColumn("project_stair12_finish", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair12_finish)
            Me.columnproject_stair12_angle = New Global.System.Data.DataColumn("project_stair12_angle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair12_angle)
            Me.columnproject_stair12_comments = New Global.System.Data.DataColumn("project_stair12_comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_stair12_comments)
            Me.columnproject_external_checks = New Global.System.Data.DataColumn("project_external_checks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_external_checks)
            Me.columnproject_demo_declined = New Global.System.Data.DataColumn("project_demo_declined", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_demo_declined)
            Me.columnproject_all_staircases_evaluated = New Global.System.Data.DataColumn("project_all_staircases_evaluated", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproject_all_staircases_evaluated)
            Me.columnparaid_estimated_date = New Global.System.Data.DataColumn("paraid_estimated_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparaid_estimated_date)
            Me.columnparaid_drawings_approved_date = New Global.System.Data.DataColumn("paraid_drawings_approved_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparaid_drawings_approved_date)
            Me.columnparaid_planned_date = New Global.System.Data.DataColumn("paraid_planned_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparaid_planned_date)
            Me.columnparaid_despatched_date = New Global.System.Data.DataColumn("paraid_despatched_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparaid_despatched_date)
            Me.columndd_type = New Global.System.Data.DataColumn("dd_type", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_type)
            Me.columndd_amount = New Global.System.Data.DataColumn("dd_amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_amount)
            Me.columndd_exportdate = New Global.System.Data.DataColumn("dd_exportdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_exportdate)
            Me.columndd_invoice_address = New Global.System.Data.DataColumn("dd_invoice_address", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_invoice_address)
            Me.columndd_paydate = New Global.System.Data.DataColumn("dd_paydate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_paydate)
            Me.columndd_lastrejecteddate = New Global.System.Data.DataColumn("dd_lastrejecteddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_lastrejecteddate)
            Me.columndd_notes = New Global.System.Data.DataColumn("dd_notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndd_notes)
            Me.columnsuggested_service_date = New Global.System.Data.DataColumn("suggested_service_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsuggested_service_date)
            Me.columnapppointment_date = New Global.System.Data.DataColumn("apppointment_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapppointment_date)
            Me.columnapppointment_confirmed = New Global.System.Data.DataColumn("apppointment_confirmed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapppointment_confirmed)
            Me.columnonhold_letter = New Global.System.Data.DataColumn("onhold_letter", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnonhold_letter)
            Me.columnonhold_date = New Global.System.Data.DataColumn("onhold_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnonhold_date)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnleadno}, true))
            Me.columnleadno.AllowDBNull = false
            Me.columnleadno.Unique = true
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnrefno.MaxLength = 15
            Me.columnexhibitionname.MaxLength = 30
            Me.columnmagazinename.MaxLength = 30
            Me.columnobsolete_towhatfloors.MaxLength = 20
            Me.columnobsolete_locationofrestaurant.MaxLength = 30
            Me.columnobsolete_locationofdisabledtoilets.MaxLength = 30
            Me.columncomments.MaxLength = 300
            Me.columnrepinitials.MaxLength = 5
            Me.columndemoarrangedby.MaxLength = 2
            Me.columnorder_no.MaxLength = 25
            Me.columncontract_chair_no.MaxLength = 150
            Me.columnadditional_notes.MaxLength = 300
            Me.columnadd_chair_inv_no.MaxLength = 20
            Me.columntraining_done.MaxLength = 10
            Me.columnevac_chair_ref_no.MaxLength = 10
            Me.columnadditional_notes2.MaxLength = 300
            Me.columncontract_worksheet_no.MaxLength = 50
            Me.columncustomer_order_no.MaxLength = 50
            Me.columnquotepadref.MaxLength = 15
            Me.columndoc_no.MaxLength = 15
            Me.columnproject_stair1_location.MaxLength = 200
            Me.columnproject_stair1_finish.MaxLength = 200
            Me.columnproject_stair1_angle.MaxLength = 20
            Me.columnproject_stair1_comments.MaxLength = 200
            Me.columnproject_stair2_location.MaxLength = 200
            Me.columnproject_stair2_finish.MaxLength = 200
            Me.columnproject_stair2_angle.MaxLength = 20
            Me.columnproject_stair2_comments.MaxLength = 200
            Me.columnproject_stair3_location.MaxLength = 200
            Me.columnproject_stair3_finish.MaxLength = 200
            Me.columnproject_stair3_angle.MaxLength = 20
            Me.columnproject_stair3_comments.MaxLength = 200
            Me.columnproject_stair4_location.MaxLength = 200
            Me.columnproject_stair4_finish.MaxLength = 200
            Me.columnproject_stair4_angle.MaxLength = 20
            Me.columnproject_stair4_comments.MaxLength = 200
            Me.columnproject_stair5_location.MaxLength = 200
            Me.columnproject_stair5_finish.MaxLength = 200
            Me.columnproject_stair5_angle.MaxLength = 20
            Me.columnproject_stair5_comments.MaxLength = 200
            Me.columnproject_stair6_location.MaxLength = 200
            Me.columnproject_stair6_finish.MaxLength = 200
            Me.columnproject_stair6_angle.MaxLength = 20
            Me.columnproject_stair6_comments.MaxLength = 200
            Me.columnproject_stair7_location.MaxLength = 200
            Me.columnproject_stair7_finish.MaxLength = 200
            Me.columnproject_stair7_angle.MaxLength = 20
            Me.columnproject_stair7_comments.MaxLength = 200
            Me.columnproject_stair8_location.MaxLength = 200
            Me.columnproject_stair8_finish.MaxLength = 200
            Me.columnproject_stair8_angle.MaxLength = 20
            Me.columnproject_stair8_comments.MaxLength = 200
            Me.columnproject_stair9_location.MaxLength = 200
            Me.columnproject_stair9_finish.MaxLength = 200
            Me.columnproject_stair9_angle.MaxLength = 20
            Me.columnproject_stair9_comments.MaxLength = 200
            Me.columnproject_stair10_location.MaxLength = 200
            Me.columnproject_stair10_finish.MaxLength = 200
            Me.columnproject_stair10_angle.MaxLength = 20
            Me.columnproject_stair10_comments.MaxLength = 200
            Me.columnproject_stair11_location.MaxLength = 200
            Me.columnproject_stair11_finish.MaxLength = 200
            Me.columnproject_stair11_angle.MaxLength = 20
            Me.columnproject_stair11_comments.MaxLength = 200
            Me.columnproject_stair12_location.MaxLength = 200
            Me.columnproject_stair12_finish.MaxLength = 200
            Me.columnproject_stair12_angle.MaxLength = 20
            Me.columnproject_stair12_comments.MaxLength = 200
            Me.columnproject_external_checks.MaxLength = 200
            Me.columndd_notes.MaxLength = 2000000000
            Me.columnapppointment_confirmed.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newlead_xtraRow() As lead_xtraRow
            Return CType(Me.NewRow,lead_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New lead_xtraRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(lead_xtraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.lead_xtraRowChangedEvent) Is Nothing) Then
                RaiseEvent lead_xtraRowChanged(Me, New lead_xtraRowChangeEvent(CType(e.Row,lead_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.lead_xtraRowChangingEvent) Is Nothing) Then
                RaiseEvent lead_xtraRowChanging(Me, New lead_xtraRowChangeEvent(CType(e.Row,lead_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.lead_xtraRowDeletedEvent) Is Nothing) Then
                RaiseEvent lead_xtraRowDeleted(Me, New lead_xtraRowChangeEvent(CType(e.Row,lead_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.lead_xtraRowDeletingEvent) Is Nothing) Then
                RaiseEvent lead_xtraRowDeleting(Me, New lead_xtraRowChangeEvent(CType(e.Row,lead_xtraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removelead_xtraRow(ByVal row As lead_xtraRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "lead_xtraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class userDataTable
        Inherits Global.System.Data.TypedTableBase(Of userRow)
        
        Private columnusercode As Global.System.Data.DataColumn
        
        Private columnusername As Global.System.Data.DataColumn
        
        Private columnemailaddr As Global.System.Data.DataColumn
        
        Private columnsequence As Global.System.Data.DataColumn
        
        Private columnobsolete As Global.System.Data.DataColumn
        
        Private columndictionary As Global.System.Data.DataColumn
        
        Private columnacctmgr As Global.System.Data.DataColumn
        
        Private columnprintlists As Global.System.Data.DataColumn
        
        Private columnprintdetails As Global.System.Data.DataColumn
        
        Private columngroup As Global.System.Data.DataColumn
        
        Private columnepros_password As Global.System.Data.DataColumn
        
        Private columnepros_By_AcctMgr As Global.System.Data.DataColumn
        
        Private columndirectphone As Global.System.Data.DataColumn
        
        Private columndirectfax As Global.System.Data.DataColumn
        
        Private columnjobtitle As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnfirstlogin As Global.System.Data.DataColumn
        
        Private columnlastlogin As Global.System.Data.DataColumn
        
        Private columnmme_userid As Global.System.Data.DataColumn
        
        Private columnmme_password As Global.System.Data.DataColumn
        
        Private columncontno As Global.System.Data.DataColumn
        
        Private columnepros_login As Global.System.Data.DataColumn
        
        Private columnloginmethod As Global.System.Data.DataColumn
        
        Private columnpreventexternalaccess As Global.System.Data.DataColumn
        
        Private columnwow_userid As Global.System.Data.DataColumn
        
        Private columnwow_password As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "user"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property usercodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusercode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property usernameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusername
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property emailaddrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemailaddr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property obsoleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobsolete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dictionaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndictionary
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctmgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctmgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property printlistsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintlists
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property printdetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprintdetails
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property groupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property epros_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnepros_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property epros_By_AcctMgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnepros_By_AcctMgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property directphoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectphone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property directfaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirectfax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jobtitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjobtitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property firstloginColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirstlogin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastloginColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastlogin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mme_useridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmme_userid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mme_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmme_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property epros_loginColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnepros_login
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property loginmethodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnloginmethod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property preventexternalaccessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpreventexternalaccess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property wow_useridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwow_userid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property wow_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwow_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As userRow
            Get
                Return CType(Me.Rows(index),userRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event userRowChanging As userRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event userRowChanged As userRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event userRowDeleting As userRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event userRowDeleted As userRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdduserRow(ByVal row As userRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdduserRow( _
                    ByVal usercode As String,  _
                    ByVal username As String,  _
                    ByVal emailaddr As String,  _
                    ByVal sequence As Integer,  _
                    ByVal obsolete As Short,  _
                    ByVal dictionary As String,  _
                    ByVal acctmgr As Short,  _
                    ByVal printlists As Short,  _
                    ByVal printdetails As Short,  _
                    ByVal group As String,  _
                    ByVal epros_password As String,  _
                    ByVal epros_By_AcctMgr As String,  _
                    ByVal directphone As String,  _
                    ByVal directfax As String,  _
                    ByVal jobtitle As String,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal createdby As String,  _
                    ByVal firstlogin As Date,  _
                    ByVal lastlogin As Date,  _
                    ByVal mme_userid As String,  _
                    ByVal mme_password As String,  _
                    ByVal contno As Integer,  _
                    ByVal epros_login As Byte,  _
                    ByVal loginmethod As String,  _
                    ByVal preventexternalaccess As Short,  _
                    ByVal wow_userid As String,  _
                    ByVal wow_password As String) As userRow
            Dim rowuserRow As userRow = CType(Me.NewRow,userRow)
            Dim columnValuesArray() As Object = New Object() {usercode, username, emailaddr, sequence, obsolete, dictionary, acctmgr, printlists, printdetails, group, epros_password, epros_By_AcctMgr, directphone, directfax, jobtitle, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, firstlogin, lastlogin, mme_userid, mme_password, contno, epros_login, loginmethod, preventexternalaccess, wow_userid, wow_password}
            rowuserRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowuserRow)
            Return rowuserRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByusercode(ByVal usercode As String) As userRow
            Return CType(Me.Rows.Find(New Object() {usercode}),userRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As userDataTable = CType(MyBase.Clone,userDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New userDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnusercode = MyBase.Columns("usercode")
            Me.columnusername = MyBase.Columns("username")
            Me.columnemailaddr = MyBase.Columns("emailaddr")
            Me.columnsequence = MyBase.Columns("sequence")
            Me.columnobsolete = MyBase.Columns("obsolete")
            Me.columndictionary = MyBase.Columns("dictionary")
            Me.columnacctmgr = MyBase.Columns("acctmgr")
            Me.columnprintlists = MyBase.Columns("printlists")
            Me.columnprintdetails = MyBase.Columns("printdetails")
            Me.columngroup = MyBase.Columns("group")
            Me.columnepros_password = MyBase.Columns("epros_password")
            Me.columnepros_By_AcctMgr = MyBase.Columns("epros_By_AcctMgr")
            Me.columndirectphone = MyBase.Columns("directphone")
            Me.columndirectfax = MyBase.Columns("directfax")
            Me.columnjobtitle = MyBase.Columns("jobtitle")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnfirstlogin = MyBase.Columns("firstlogin")
            Me.columnlastlogin = MyBase.Columns("lastlogin")
            Me.columnmme_userid = MyBase.Columns("mme_userid")
            Me.columnmme_password = MyBase.Columns("mme_password")
            Me.columncontno = MyBase.Columns("contno")
            Me.columnepros_login = MyBase.Columns("epros_login")
            Me.columnloginmethod = MyBase.Columns("loginmethod")
            Me.columnpreventexternalaccess = MyBase.Columns("preventexternalaccess")
            Me.columnwow_userid = MyBase.Columns("wow_userid")
            Me.columnwow_password = MyBase.Columns("wow_password")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnusercode = New Global.System.Data.DataColumn("usercode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusercode)
            Me.columnusername = New Global.System.Data.DataColumn("username", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusername)
            Me.columnemailaddr = New Global.System.Data.DataColumn("emailaddr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemailaddr)
            Me.columnsequence = New Global.System.Data.DataColumn("sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsequence)
            Me.columnobsolete = New Global.System.Data.DataColumn("obsolete", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobsolete)
            Me.columndictionary = New Global.System.Data.DataColumn("dictionary", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndictionary)
            Me.columnacctmgr = New Global.System.Data.DataColumn("acctmgr", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctmgr)
            Me.columnprintlists = New Global.System.Data.DataColumn("printlists", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintlists)
            Me.columnprintdetails = New Global.System.Data.DataColumn("printdetails", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprintdetails)
            Me.columngroup = New Global.System.Data.DataColumn("group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroup)
            Me.columnepros_password = New Global.System.Data.DataColumn("epros_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnepros_password)
            Me.columnepros_By_AcctMgr = New Global.System.Data.DataColumn("epros_By_AcctMgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnepros_By_AcctMgr)
            Me.columndirectphone = New Global.System.Data.DataColumn("directphone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectphone)
            Me.columndirectfax = New Global.System.Data.DataColumn("directfax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirectfax)
            Me.columnjobtitle = New Global.System.Data.DataColumn("jobtitle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjobtitle)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnfirstlogin = New Global.System.Data.DataColumn("firstlogin", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirstlogin)
            Me.columnlastlogin = New Global.System.Data.DataColumn("lastlogin", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastlogin)
            Me.columnmme_userid = New Global.System.Data.DataColumn("mme_userid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmme_userid)
            Me.columnmme_password = New Global.System.Data.DataColumn("mme_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmme_password)
            Me.columncontno = New Global.System.Data.DataColumn("contno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontno)
            Me.columnepros_login = New Global.System.Data.DataColumn("epros_login", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnepros_login)
            Me.columnloginmethod = New Global.System.Data.DataColumn("loginmethod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnloginmethod)
            Me.columnpreventexternalaccess = New Global.System.Data.DataColumn("preventexternalaccess", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpreventexternalaccess)
            Me.columnwow_userid = New Global.System.Data.DataColumn("wow_userid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwow_userid)
            Me.columnwow_password = New Global.System.Data.DataColumn("wow_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwow_password)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnusercode}, true))
            Me.columnusercode.AllowDBNull = false
            Me.columnusercode.Unique = true
            Me.columnusercode.Caption = "c"
            Me.columnusercode.MaxLength = 3
            Me.columnusername.AllowDBNull = false
            Me.columnusername.MaxLength = 30
            Me.columnemailaddr.MaxLength = 100
            Me.columndictionary.MaxLength = 10
            Me.columngroup.MaxLength = 6
            Me.columnepros_password.MaxLength = 128
            Me.columnepros_By_AcctMgr.MaxLength = 128
            Me.columndirectphone.MaxLength = 60
            Me.columndirectfax.MaxLength = 60
            Me.columnjobtitle.MaxLength = 60
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnmme_userid.MaxLength = 100
            Me.columnmme_password.MaxLength = 100
            Me.columnloginmethod.MaxLength = 1
            Me.columnwow_userid.MaxLength = 100
            Me.columnwow_password.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewuserRow() As userRow
            Return CType(Me.NewRow,userRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New userRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(userRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.userRowChangedEvent) Is Nothing) Then
                RaiseEvent userRowChanged(Me, New userRowChangeEvent(CType(e.Row,userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.userRowChangingEvent) Is Nothing) Then
                RaiseEvent userRowChanging(Me, New userRowChangeEvent(CType(e.Row,userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.userRowDeletedEvent) Is Nothing) Then
                RaiseEvent userRowDeleted(Me, New userRowChangeEvent(CType(e.Row,userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.userRowDeletingEvent) Is Nothing) Then
                RaiseEvent userRowDeleting(Me, New userRowChangeEvent(CType(e.Row,userRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveuserRow(ByVal row As userRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "userDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class engineer_locationsDataTable
        Inherits Global.System.Data.TypedTableBase(Of engineer_locationsRow)
        
        Private columnengineerno As Global.System.Data.DataColumn
        
        Private columnengineer As Global.System.Data.DataColumn
        
        Private columnengineer_postcode As Global.System.Data.DataColumn
        
        Private columnengineer_longitude As Global.System.Data.DataColumn
        
        Private columnengineer_latitude As Global.System.Data.DataColumn
        
        Private columnengineer_name As Global.System.Data.DataColumn
        
        Private columnengineer_colour As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "engineer_locations"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineernoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineerno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineer_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineer_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineer_longitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineer_longitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineer_latitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineer_latitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineer_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineer_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property engineer_colourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnengineer_colour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As engineer_locationsRow
            Get
                Return CType(Me.Rows(index),engineer_locationsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event engineer_locationsRowChanging As engineer_locationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event engineer_locationsRowChanged As engineer_locationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event engineer_locationsRowDeleting As engineer_locationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event engineer_locationsRowDeleted As engineer_locationsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addengineer_locationsRow(ByVal row As engineer_locationsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addengineer_locationsRow(ByVal engineer As String, ByVal engineer_postcode As String, ByVal engineer_longitude As Decimal, ByVal engineer_latitude As Decimal, ByVal engineer_name As String, ByVal engineer_colour As Integer) As engineer_locationsRow
            Dim rowengineer_locationsRow As engineer_locationsRow = CType(Me.NewRow,engineer_locationsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, engineer, engineer_postcode, engineer_longitude, engineer_latitude, engineer_name, engineer_colour}
            rowengineer_locationsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowengineer_locationsRow)
            Return rowengineer_locationsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByengineerno(ByVal engineerno As Integer) As engineer_locationsRow
            Return CType(Me.Rows.Find(New Object() {engineerno}),engineer_locationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As engineer_locationsDataTable = CType(MyBase.Clone,engineer_locationsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New engineer_locationsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnengineerno = MyBase.Columns("engineerno")
            Me.columnengineer = MyBase.Columns("engineer")
            Me.columnengineer_postcode = MyBase.Columns("engineer_postcode")
            Me.columnengineer_longitude = MyBase.Columns("engineer_longitude")
            Me.columnengineer_latitude = MyBase.Columns("engineer_latitude")
            Me.columnengineer_name = MyBase.Columns("engineer_name")
            Me.columnengineer_colour = MyBase.Columns("engineer_colour")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnengineerno = New Global.System.Data.DataColumn("engineerno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineerno)
            Me.columnengineer = New Global.System.Data.DataColumn("engineer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineer)
            Me.columnengineer_postcode = New Global.System.Data.DataColumn("engineer_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineer_postcode)
            Me.columnengineer_longitude = New Global.System.Data.DataColumn("engineer_longitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineer_longitude)
            Me.columnengineer_latitude = New Global.System.Data.DataColumn("engineer_latitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineer_latitude)
            Me.columnengineer_name = New Global.System.Data.DataColumn("engineer_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineer_name)
            Me.columnengineer_colour = New Global.System.Data.DataColumn("engineer_colour", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnengineer_colour)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnengineerno}, true))
            Me.columnengineerno.AutoIncrement = true
            Me.columnengineerno.AutoIncrementSeed = -1
            Me.columnengineerno.AutoIncrementStep = -1
            Me.columnengineerno.AllowDBNull = false
            Me.columnengineerno.Unique = true
            Me.columnengineer.MaxLength = 10
            Me.columnengineer_postcode.MaxLength = 10
            Me.columnengineer_name.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newengineer_locationsRow() As engineer_locationsRow
            Return CType(Me.NewRow,engineer_locationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New engineer_locationsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(engineer_locationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.engineer_locationsRowChangedEvent) Is Nothing) Then
                RaiseEvent engineer_locationsRowChanged(Me, New engineer_locationsRowChangeEvent(CType(e.Row,engineer_locationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.engineer_locationsRowChangingEvent) Is Nothing) Then
                RaiseEvent engineer_locationsRowChanging(Me, New engineer_locationsRowChangeEvent(CType(e.Row,engineer_locationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.engineer_locationsRowDeletedEvent) Is Nothing) Then
                RaiseEvent engineer_locationsRowDeleted(Me, New engineer_locationsRowChangeEvent(CType(e.Row,engineer_locationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.engineer_locationsRowDeletingEvent) Is Nothing) Then
                RaiseEvent engineer_locationsRowDeleting(Me, New engineer_locationsRowChangeEvent(CType(e.Row,engineer_locationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeengineer_locationsRow(ByVal row As engineer_locationsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "engineer_locationsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class divisionaddressDataTable
        Inherits Global.System.Data.TypedTableBase(Of divisionaddressRow)
        
        Private columnaddrno As Global.System.Data.DataColumn
        
        Private columnaddress1 As Global.System.Data.DataColumn
        
        Private columnaddress2 As Global.System.Data.DataColumn
        
        Private columnaddress3 As Global.System.Data.DataColumn
        
        Private columncountry As Global.System.Data.DataColumn
        
        Private columnpostcode As Global.System.Data.DataColumn
        
        Private columnregionno As Global.System.Data.DataColumn
        
        Private columnpostcdtype As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnaddress4 As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnoutcode As Global.System.Data.DataColumn
        
        Private columnlongitude As Global.System.Data.DataColumn
        
        Private columnlatitude As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "divisionaddress"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addrnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddrno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property regionnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnregionno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property postcdtypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostcdtype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property outcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoutcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property longitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlongitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property latitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlatitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As divisionaddressRow
            Get
                Return CType(Me.Rows(index),divisionaddressRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionaddressRowChanging As divisionaddressRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionaddressRowChanged As divisionaddressRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionaddressRowDeleting As divisionaddressRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event divisionaddressRowDeleted As divisionaddressRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddivisionaddressRow(ByVal row As divisionaddressRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddivisionaddressRow( _
                    ByVal addrno As Integer,  _
                    ByVal address1 As String,  _
                    ByVal address2 As String,  _
                    ByVal address3 As String,  _
                    ByVal country As String,  _
                    ByVal postcode As String,  _
                    ByVal regionno As String,  _
                    ByVal postcdtype As String,  _
                    ByVal account_mgr As String,  _
                    ByVal address4 As String,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal createdby As String,  _
                    ByVal outcode As String,  _
                    ByVal longitude As Decimal,  _
                    ByVal latitude As Decimal) As divisionaddressRow
            Dim rowdivisionaddressRow As divisionaddressRow = CType(Me.NewRow,divisionaddressRow)
            Dim columnValuesArray() As Object = New Object() {addrno, address1, address2, address3, country, postcode, regionno, postcdtype, account_mgr, address4, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, outcode, longitude, latitude}
            rowdivisionaddressRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdivisionaddressRow)
            Return rowdivisionaddressRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByaddrno(ByVal addrno As Integer) As divisionaddressRow
            Return CType(Me.Rows.Find(New Object() {addrno}),divisionaddressRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As divisionaddressDataTable = CType(MyBase.Clone,divisionaddressDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New divisionaddressDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnaddrno = MyBase.Columns("addrno")
            Me.columnaddress1 = MyBase.Columns("address1")
            Me.columnaddress2 = MyBase.Columns("address2")
            Me.columnaddress3 = MyBase.Columns("address3")
            Me.columncountry = MyBase.Columns("country")
            Me.columnpostcode = MyBase.Columns("postcode")
            Me.columnregionno = MyBase.Columns("regionno")
            Me.columnpostcdtype = MyBase.Columns("postcdtype")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnaddress4 = MyBase.Columns("address4")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnoutcode = MyBase.Columns("outcode")
            Me.columnlongitude = MyBase.Columns("longitude")
            Me.columnlatitude = MyBase.Columns("latitude")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnaddrno = New Global.System.Data.DataColumn("addrno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddrno)
            Me.columnaddress1 = New Global.System.Data.DataColumn("address1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress1)
            Me.columnaddress2 = New Global.System.Data.DataColumn("address2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress2)
            Me.columnaddress3 = New Global.System.Data.DataColumn("address3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress3)
            Me.columncountry = New Global.System.Data.DataColumn("country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncountry)
            Me.columnpostcode = New Global.System.Data.DataColumn("postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostcode)
            Me.columnregionno = New Global.System.Data.DataColumn("regionno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregionno)
            Me.columnpostcdtype = New Global.System.Data.DataColumn("postcdtype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostcdtype)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnaddress4 = New Global.System.Data.DataColumn("address4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress4)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnoutcode = New Global.System.Data.DataColumn("outcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoutcode)
            Me.columnlongitude = New Global.System.Data.DataColumn("longitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlongitude)
            Me.columnlatitude = New Global.System.Data.DataColumn("latitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlatitude)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnaddrno}, true))
            Me.columnaddrno.AllowDBNull = false
            Me.columnaddrno.Unique = true
            Me.columnaddress1.MaxLength = 30
            Me.columnaddress2.MaxLength = 30
            Me.columnaddress3.MaxLength = 30
            Me.columncountry.MaxLength = 30
            Me.columnpostcode.MaxLength = 20
            Me.columnregionno.MaxLength = 3
            Me.columnpostcdtype.MaxLength = 1
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnaddress4.MaxLength = 30
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnoutcode.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdivisionaddressRow() As divisionaddressRow
            Return CType(Me.NewRow,divisionaddressRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New divisionaddressRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(divisionaddressRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.divisionaddressRowChangedEvent) Is Nothing) Then
                RaiseEvent divisionaddressRowChanged(Me, New divisionaddressRowChangeEvent(CType(e.Row,divisionaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.divisionaddressRowChangingEvent) Is Nothing) Then
                RaiseEvent divisionaddressRowChanging(Me, New divisionaddressRowChangeEvent(CType(e.Row,divisionaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.divisionaddressRowDeletedEvent) Is Nothing) Then
                RaiseEvent divisionaddressRowDeleted(Me, New divisionaddressRowChangeEvent(CType(e.Row,divisionaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.divisionaddressRowDeletingEvent) Is Nothing) Then
                RaiseEvent divisionaddressRowDeleting(Me, New divisionaddressRowChangeEvent(CType(e.Row,divisionaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedivisionaddressRow(ByVal row As divisionaddressRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "divisionaddressDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class companyDataTable
        Inherits Global.System.Data.TypedTableBase(Of companyRow)
        
        Private columncompno As Global.System.Data.DataColumn
        
        Private columncompname As Global.System.Data.DataColumn
        
        Private columncomptypecd As Global.System.Data.DataColumn
        
        Private columnowner As Global.System.Data.DataColumn
        
        Private columncompname_soundex As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnStatusFlag As Global.System.Data.DataColumn
        
        Private columnbgid As Global.System.Data.DataColumn
        
        Private columnsys_a_objects_key As Global.System.Data.DataColumn
        
        Private columnsource As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "company"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property compnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property compnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property comptypecdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomptypecd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnowner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property compname_soundexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncompname_soundex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bgidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbgid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sys_a_objects_keyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsys_a_objects_key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As companyRow
            Get
                Return CType(Me.Rows(index),companyRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event companyRowChanging As companyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event companyRowChanged As companyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event companyRowDeleting As companyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event companyRowDeleted As companyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddcompanyRow(ByVal row As companyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddcompanyRow(ByVal compno As Integer, ByVal compname As String, ByVal comptypecd As String, ByVal owner As String, ByVal compname_soundex As Integer, ByVal lastupdatedtimestamp As Date, ByVal lastupdated As Date, ByVal lastupdatedby As String, ByVal created As Date, ByVal createdby As String, ByVal StatusFlag As String, ByVal bgid As Integer, ByVal sys_a_objects_key As String, ByVal source As String) As companyRow
            Dim rowcompanyRow As companyRow = CType(Me.NewRow,companyRow)
            Dim columnValuesArray() As Object = New Object() {compno, compname, comptypecd, owner, compname_soundex, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, StatusFlag, bgid, sys_a_objects_key, source}
            rowcompanyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcompanyRow)
            Return rowcompanyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBycompno(ByVal compno As Integer) As companyRow
            Return CType(Me.Rows.Find(New Object() {compno}),companyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As companyDataTable = CType(MyBase.Clone,companyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New companyDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncompno = MyBase.Columns("compno")
            Me.columncompname = MyBase.Columns("compname")
            Me.columncomptypecd = MyBase.Columns("comptypecd")
            Me.columnowner = MyBase.Columns("owner")
            Me.columncompname_soundex = MyBase.Columns("compname_soundex")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnStatusFlag = MyBase.Columns("StatusFlag")
            Me.columnbgid = MyBase.Columns("bgid")
            Me.columnsys_a_objects_key = MyBase.Columns("sys_a_objects_key")
            Me.columnsource = MyBase.Columns("source")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columncompno = New Global.System.Data.DataColumn("compno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompno)
            Me.columncompname = New Global.System.Data.DataColumn("compname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompname)
            Me.columncomptypecd = New Global.System.Data.DataColumn("comptypecd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomptypecd)
            Me.columnowner = New Global.System.Data.DataColumn("owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnowner)
            Me.columncompname_soundex = New Global.System.Data.DataColumn("compname_soundex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncompname_soundex)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnStatusFlag = New Global.System.Data.DataColumn("StatusFlag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusFlag)
            Me.columnbgid = New Global.System.Data.DataColumn("bgid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbgid)
            Me.columnsys_a_objects_key = New Global.System.Data.DataColumn("sys_a_objects_key", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsys_a_objects_key)
            Me.columnsource = New Global.System.Data.DataColumn("source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsource)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncompno}, true))
            Me.columncompno.AllowDBNull = false
            Me.columncompno.Unique = true
            Me.columncompname.MaxLength = 120
            Me.columncomptypecd.AllowDBNull = false
            Me.columncomptypecd.MaxLength = 3
            Me.columnowner.MaxLength = 3
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnStatusFlag.AllowDBNull = false
            Me.columnStatusFlag.MaxLength = 1
            Me.columnsys_a_objects_key.MaxLength = 30
            Me.columnsource.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewcompanyRow() As companyRow
            Return CType(Me.NewRow,companyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New companyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(companyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.companyRowChangedEvent) Is Nothing) Then
                RaiseEvent companyRowChanged(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.companyRowChangingEvent) Is Nothing) Then
                RaiseEvent companyRowChanging(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.companyRowDeletedEvent) Is Nothing) Then
                RaiseEvent companyRowDeleted(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.companyRowDeletingEvent) Is Nothing) Then
                RaiseEvent companyRowDeleting(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovecompanyRow(ByVal row As companyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "companyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class contactaddressDataTable
        Inherits Global.System.Data.TypedTableBase(Of contactaddressRow)
        
        Private columnaddrno As Global.System.Data.DataColumn
        
        Private columnaddress1 As Global.System.Data.DataColumn
        
        Private columnaddress2 As Global.System.Data.DataColumn
        
        Private columnaddress3 As Global.System.Data.DataColumn
        
        Private columncountry As Global.System.Data.DataColumn
        
        Private columnpostcode As Global.System.Data.DataColumn
        
        Private columnregionno As Global.System.Data.DataColumn
        
        Private columnpostcdtype As Global.System.Data.DataColumn
        
        Private columnaccount_mgr As Global.System.Data.DataColumn
        
        Private columnaddress4 As Global.System.Data.DataColumn
        
        Private columnlastupdatedtimestamp As Global.System.Data.DataColumn
        
        Private columnlastupdated As Global.System.Data.DataColumn
        
        Private columnlastupdatedby As Global.System.Data.DataColumn
        
        Private columncreated As Global.System.Data.DataColumn
        
        Private columncreatedby As Global.System.Data.DataColumn
        
        Private columnoutcode As Global.System.Data.DataColumn
        
        Private columnlongitude As Global.System.Data.DataColumn
        
        Private columnlatitude As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "contactaddress"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addrnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddrno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property countryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property regionnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnregionno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property postcdtypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostcdtype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property account_mgrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccount_mgr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property address4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedtimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedtimestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lastupdatedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlastupdatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property createdbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreatedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property outcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoutcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property longitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlongitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property latitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlatitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As contactaddressRow
            Get
                Return CType(Me.Rows(index),contactaddressRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactaddressRowChanging As contactaddressRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactaddressRowChanged As contactaddressRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactaddressRowDeleting As contactaddressRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event contactaddressRowDeleted As contactaddressRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddcontactaddressRow(ByVal row As contactaddressRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddcontactaddressRow( _
                    ByVal addrno As Integer,  _
                    ByVal address1 As String,  _
                    ByVal address2 As String,  _
                    ByVal address3 As String,  _
                    ByVal country As String,  _
                    ByVal postcode As String,  _
                    ByVal regionno As String,  _
                    ByVal postcdtype As String,  _
                    ByVal account_mgr As String,  _
                    ByVal address4 As String,  _
                    ByVal lastupdatedtimestamp As Date,  _
                    ByVal lastupdated As Date,  _
                    ByVal lastupdatedby As String,  _
                    ByVal created As Date,  _
                    ByVal createdby As String,  _
                    ByVal outcode As String,  _
                    ByVal longitude As Decimal,  _
                    ByVal latitude As Decimal) As contactaddressRow
            Dim rowcontactaddressRow As contactaddressRow = CType(Me.NewRow,contactaddressRow)
            Dim columnValuesArray() As Object = New Object() {addrno, address1, address2, address3, country, postcode, regionno, postcdtype, account_mgr, address4, lastupdatedtimestamp, lastupdated, lastupdatedby, created, createdby, outcode, longitude, latitude}
            rowcontactaddressRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcontactaddressRow)
            Return rowcontactaddressRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByaddrno(ByVal addrno As Integer) As contactaddressRow
            Return CType(Me.Rows.Find(New Object() {addrno}),contactaddressRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As contactaddressDataTable = CType(MyBase.Clone,contactaddressDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New contactaddressDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnaddrno = MyBase.Columns("addrno")
            Me.columnaddress1 = MyBase.Columns("address1")
            Me.columnaddress2 = MyBase.Columns("address2")
            Me.columnaddress3 = MyBase.Columns("address3")
            Me.columncountry = MyBase.Columns("country")
            Me.columnpostcode = MyBase.Columns("postcode")
            Me.columnregionno = MyBase.Columns("regionno")
            Me.columnpostcdtype = MyBase.Columns("postcdtype")
            Me.columnaccount_mgr = MyBase.Columns("account_mgr")
            Me.columnaddress4 = MyBase.Columns("address4")
            Me.columnlastupdatedtimestamp = MyBase.Columns("lastupdatedtimestamp")
            Me.columnlastupdated = MyBase.Columns("lastupdated")
            Me.columnlastupdatedby = MyBase.Columns("lastupdatedby")
            Me.columncreated = MyBase.Columns("created")
            Me.columncreatedby = MyBase.Columns("createdby")
            Me.columnoutcode = MyBase.Columns("outcode")
            Me.columnlongitude = MyBase.Columns("longitude")
            Me.columnlatitude = MyBase.Columns("latitude")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnaddrno = New Global.System.Data.DataColumn("addrno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddrno)
            Me.columnaddress1 = New Global.System.Data.DataColumn("address1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress1)
            Me.columnaddress2 = New Global.System.Data.DataColumn("address2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress2)
            Me.columnaddress3 = New Global.System.Data.DataColumn("address3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress3)
            Me.columncountry = New Global.System.Data.DataColumn("country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncountry)
            Me.columnpostcode = New Global.System.Data.DataColumn("postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostcode)
            Me.columnregionno = New Global.System.Data.DataColumn("regionno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregionno)
            Me.columnpostcdtype = New Global.System.Data.DataColumn("postcdtype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostcdtype)
            Me.columnaccount_mgr = New Global.System.Data.DataColumn("account_mgr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccount_mgr)
            Me.columnaddress4 = New Global.System.Data.DataColumn("address4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress4)
            Me.columnlastupdatedtimestamp = New Global.System.Data.DataColumn("lastupdatedtimestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedtimestamp)
            Me.columnlastupdated = New Global.System.Data.DataColumn("lastupdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdated)
            Me.columnlastupdatedby = New Global.System.Data.DataColumn("lastupdatedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlastupdatedby)
            Me.columncreated = New Global.System.Data.DataColumn("created", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated)
            Me.columncreatedby = New Global.System.Data.DataColumn("createdby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreatedby)
            Me.columnoutcode = New Global.System.Data.DataColumn("outcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoutcode)
            Me.columnlongitude = New Global.System.Data.DataColumn("longitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlongitude)
            Me.columnlatitude = New Global.System.Data.DataColumn("latitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlatitude)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnaddrno}, true))
            Me.columnaddrno.AllowDBNull = false
            Me.columnaddrno.Unique = true
            Me.columnaddress1.MaxLength = 30
            Me.columnaddress2.MaxLength = 30
            Me.columnaddress3.MaxLength = 30
            Me.columncountry.MaxLength = 30
            Me.columnpostcode.MaxLength = 20
            Me.columnregionno.MaxLength = 3
            Me.columnpostcdtype.MaxLength = 1
            Me.columnaccount_mgr.MaxLength = 3
            Me.columnaddress4.MaxLength = 30
            Me.columnlastupdatedby.MaxLength = 3
            Me.columncreatedby.MaxLength = 3
            Me.columnoutcode.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewcontactaddressRow() As contactaddressRow
            Return CType(Me.NewRow,contactaddressRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New contactaddressRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(contactaddressRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.contactaddressRowChangedEvent) Is Nothing) Then
                RaiseEvent contactaddressRowChanged(Me, New contactaddressRowChangeEvent(CType(e.Row,contactaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.contactaddressRowChangingEvent) Is Nothing) Then
                RaiseEvent contactaddressRowChanging(Me, New contactaddressRowChangeEvent(CType(e.Row,contactaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.contactaddressRowDeletedEvent) Is Nothing) Then
                RaiseEvent contactaddressRowDeleted(Me, New contactaddressRowChangeEvent(CType(e.Row,contactaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.contactaddressRowDeletingEvent) Is Nothing) Then
                RaiseEvent contactaddressRowDeleting(Me, New contactaddressRowChangeEvent(CType(e.Row,contactaddressRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovecontactaddressRow(ByVal row As contactaddressRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "contactaddressDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class central_diaryDataTable
        Inherits Global.System.Data.TypedTableBase(Of central_diaryRow)
        
        Private columnAppType As Global.System.Data.DataColumn
        
        Private columnLeadno As Global.System.Data.DataColumn
        
        Private columnno_of_chairs As Global.System.Data.DataColumn
        
        Private columnEndDate As Global.System.Data.DataColumn
        
        Private columnAllDay As Global.System.Data.DataColumn
        
        Private columnSubject As Global.System.Data.DataColumn
        
        Private columnAppLocation As Global.System.Data.DataColumn
        
        Private columnAppDescription As Global.System.Data.DataColumn
        
        Private columnAppStatus As Global.System.Data.DataColumn
        
        Private columnLabel As Global.System.Data.DataColumn
        
        Private columnReminderInfo As Global.System.Data.DataColumn
        
        Private columnRecurrenceInfo As Global.System.Data.DataColumn
        
        Private columncentral_diaryno As Global.System.Data.DataColumn
        
        Private columnconfirmed As Global.System.Data.DataColumn
        
        Private columnlongitude As Global.System.Data.DataColumn
        
        Private columnlatitude As Global.System.Data.DataColumn
        
        Private columnOutlookEntryID As Global.System.Data.DataColumn
        
        Private columnBookedDate As Global.System.Data.DataColumn
        
        Private columnUserId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "central_diary"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LeadnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeadno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_of_chairsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_of_chairs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AllDayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllDay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubject
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppLocationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppLocation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LabelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReminderInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReminderInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecurrenceInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecurrenceInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property central_diarynoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncentral_diaryno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property confirmedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconfirmed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property longitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlongitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property latitudeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlatitude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OutlookEntryIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlookEntryID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BookedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As central_diaryRow
            Get
                Return CType(Me.Rows(index),central_diaryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event central_diaryRowChanging As central_diaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event central_diaryRowChanged As central_diaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event central_diaryRowDeleting As central_diaryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event central_diaryRowDeleted As central_diaryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addcentral_diaryRow(ByVal row As central_diaryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addcentral_diaryRow( _
                    ByVal AppType As Integer,  _
                    ByVal Leadno As Integer,  _
                    ByVal no_of_chairs As Integer,  _
                    ByVal EndDate As Date,  _
                    ByVal AllDay As Boolean,  _
                    ByVal Subject As String,  _
                    ByVal AppLocation As String,  _
                    ByVal AppDescription As String,  _
                    ByVal AppStatus As Integer,  _
                    ByVal Label As Integer,  _
                    ByVal ReminderInfo As String,  _
                    ByVal RecurrenceInfo As String,  _
                    ByVal confirmed As Boolean,  _
                    ByVal longitude As Decimal,  _
                    ByVal latitude As Decimal,  _
                    ByVal OutlookEntryID As String,  _
                    ByVal BookedDate As Date,  _
                    ByVal UserId As Integer) As central_diaryRow
            Dim rowcentral_diaryRow As central_diaryRow = CType(Me.NewRow,central_diaryRow)
            Dim columnValuesArray() As Object = New Object() {AppType, Leadno, no_of_chairs, EndDate, AllDay, Subject, AppLocation, AppDescription, AppStatus, Label, ReminderInfo, RecurrenceInfo, Nothing, confirmed, longitude, latitude, OutlookEntryID, BookedDate, UserId}
            rowcentral_diaryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcentral_diaryRow)
            Return rowcentral_diaryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBycentral_diaryno(ByVal central_diaryno As Integer) As central_diaryRow
            Return CType(Me.Rows.Find(New Object() {central_diaryno}),central_diaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As central_diaryDataTable = CType(MyBase.Clone,central_diaryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New central_diaryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAppType = MyBase.Columns("AppType")
            Me.columnLeadno = MyBase.Columns("Leadno")
            Me.columnno_of_chairs = MyBase.Columns("no_of_chairs")
            Me.columnEndDate = MyBase.Columns("EndDate")
            Me.columnAllDay = MyBase.Columns("AllDay")
            Me.columnSubject = MyBase.Columns("Subject")
            Me.columnAppLocation = MyBase.Columns("AppLocation")
            Me.columnAppDescription = MyBase.Columns("AppDescription")
            Me.columnAppStatus = MyBase.Columns("AppStatus")
            Me.columnLabel = MyBase.Columns("Label")
            Me.columnReminderInfo = MyBase.Columns("ReminderInfo")
            Me.columnRecurrenceInfo = MyBase.Columns("RecurrenceInfo")
            Me.columncentral_diaryno = MyBase.Columns("central_diaryno")
            Me.columnconfirmed = MyBase.Columns("confirmed")
            Me.columnlongitude = MyBase.Columns("longitude")
            Me.columnlatitude = MyBase.Columns("latitude")
            Me.columnOutlookEntryID = MyBase.Columns("OutlookEntryID")
            Me.columnBookedDate = MyBase.Columns("BookedDate")
            Me.columnUserId = MyBase.Columns("UserId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAppType = New Global.System.Data.DataColumn("AppType", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppType)
            Me.columnLeadno = New Global.System.Data.DataColumn("Leadno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeadno)
            Me.columnno_of_chairs = New Global.System.Data.DataColumn("no_of_chairs", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_of_chairs)
            Me.columnEndDate = New Global.System.Data.DataColumn("EndDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndDate)
            Me.columnAllDay = New Global.System.Data.DataColumn("AllDay", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllDay)
            Me.columnSubject = New Global.System.Data.DataColumn("Subject", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubject)
            Me.columnAppLocation = New Global.System.Data.DataColumn("AppLocation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppLocation)
            Me.columnAppDescription = New Global.System.Data.DataColumn("AppDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppDescription)
            Me.columnAppStatus = New Global.System.Data.DataColumn("AppStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppStatus)
            Me.columnLabel = New Global.System.Data.DataColumn("Label", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabel)
            Me.columnReminderInfo = New Global.System.Data.DataColumn("ReminderInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReminderInfo)
            Me.columnRecurrenceInfo = New Global.System.Data.DataColumn("RecurrenceInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecurrenceInfo)
            Me.columncentral_diaryno = New Global.System.Data.DataColumn("central_diaryno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncentral_diaryno)
            Me.columnconfirmed = New Global.System.Data.DataColumn("confirmed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconfirmed)
            Me.columnlongitude = New Global.System.Data.DataColumn("longitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlongitude)
            Me.columnlatitude = New Global.System.Data.DataColumn("latitude", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlatitude)
            Me.columnOutlookEntryID = New Global.System.Data.DataColumn("OutlookEntryID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlookEntryID)
            Me.columnBookedDate = New Global.System.Data.DataColumn("BookedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookedDate)
            Me.columnUserId = New Global.System.Data.DataColumn("UserId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncentral_diaryno}, true))
            Me.columnSubject.MaxLength = 100
            Me.columnAppLocation.MaxLength = 50
            Me.columnAppDescription.MaxLength = 2000000000
            Me.columnReminderInfo.MaxLength = 2000000000
            Me.columnRecurrenceInfo.MaxLength = 2000000000
            Me.columncentral_diaryno.AutoIncrement = true
            Me.columncentral_diaryno.AutoIncrementSeed = -1
            Me.columncentral_diaryno.AutoIncrementStep = -1
            Me.columncentral_diaryno.AllowDBNull = false
            Me.columncentral_diaryno.Unique = true
            Me.columnOutlookEntryID.MaxLength = 256
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newcentral_diaryRow() As central_diaryRow
            Return CType(Me.NewRow,central_diaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New central_diaryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(central_diaryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.central_diaryRowChangedEvent) Is Nothing) Then
                RaiseEvent central_diaryRowChanged(Me, New central_diaryRowChangeEvent(CType(e.Row,central_diaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.central_diaryRowChangingEvent) Is Nothing) Then
                RaiseEvent central_diaryRowChanging(Me, New central_diaryRowChangeEvent(CType(e.Row,central_diaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.central_diaryRowDeletedEvent) Is Nothing) Then
                RaiseEvent central_diaryRowDeleted(Me, New central_diaryRowChangeEvent(CType(e.Row,central_diaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.central_diaryRowDeletingEvent) Is Nothing) Then
                RaiseEvent central_diaryRowDeleting(Me, New central_diaryRowChangeEvent(CType(e.Row,central_diaryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removecentral_diaryRow(ByVal row As central_diaryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "central_diaryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class contactRow
        Inherits Global.System.Data.DataRow
        
        Private tablecontact As contactDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecontact = CType(Me.Table,contactDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contno() As Integer
            Get
                Return CType(Me(Me.tablecontact.contnoColumn),Integer)
            End Get
            Set
                Me(Me.tablecontact.contnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property divno() As Integer
            Get
                Return CType(Me(Me.tablecontact.divnoColumn),Integer)
            End Get
            Set
                Me(Me.tablecontact.divnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property surname() As String
            Get
                Return CType(Me(Me.tablecontact.surnameColumn),String)
            End Get
            Set
                Me(Me.tablecontact.surnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property forename() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.forenameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'forename' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.forenameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prefdname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.prefdnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prefdname' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.prefdnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property title() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'title' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property salutation() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.salutationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'salutation' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.salutationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addrno() As Integer
            Get
                Return CType(Me(Me.tablecontact.addrnoColumn),Integer)
            End Get
            Set
                Me(Me.tablecontact.addrnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property email() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property notepad() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.notepadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'notepad' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.notepadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jobtitle() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.jobtitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jobtitle' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.jobtitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rolecd() As String
            Get
                Return CType(Me(Me.tablecontact.rolecdColumn),String)
            End Get
            Set
                Me(Me.tablecontact.rolecdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property primephone() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.primephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'primephone' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.primephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property primefax() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.primefaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'primefax' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.primefaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mailflag() As Short
            Get
                Return CType(Me(Me.tablecontact.mailflagColumn),Short)
            End Get
            Set
                Me(Me.tablecontact.mailflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact.createdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdate' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.createdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property swapmailfg() As Short
            Get
                Return CType(Me(Me.tablecontact.swapmailfgColumn),Short)
            End Get
            Set
                Me(Me.tablecontact.swapmailfgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property memolines() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecontact.memolinesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'memolines' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.memolinesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastmemodt() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact.lastmemodtColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastmemodt' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.lastmemodtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property source() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.sourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'source' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.sourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property faxflag() As Short
            Get
                Try 
                    Return CType(Me(Me.tablecontact.faxflagColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'faxflag' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.faxflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property surname_soundex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecontact.surname_soundexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'surname_soundex' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.surname_soundexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property forename_soundex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecontact.forename_soundexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'forename_soundex' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.forename_soundexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property notepad_temp() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.notepad_tempColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'notepad_temp' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.notepad_tempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spokecd() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.spokecdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spokecd' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.spokecdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spokedate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact.spokedateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spokedate' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.spokedateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spoketime() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablecontact.spoketimeColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spoketime' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.spoketimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property secretaryname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.secretarynameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'secretaryname' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.secretarynameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property secretaryphone() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.secretaryphoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'secretaryphone' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.secretaryphoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property secretaryemail() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.secretaryemailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'secretaryemail' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.secretaryemailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property department() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.departmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'department' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.departmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property emailflag() As Short
            Get
                Try 
                    Return CType(Me(Me.tablecontact.emailflagColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'emailflag' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.emailflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatusFlag() As String
            Get
                Return CType(Me(Me.tablecontact.StatusFlagColumn),String)
            End Get
            Set
                Me(Me.tablecontact.StatusFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bgid() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.bgidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bgid' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.bgidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sys_a_objects_key() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact.sys_a_objects_keyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sys_a_objects_key' in table 'contact' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact.sys_a_objects_keyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property emailbounced() As Short
            Get
                Return CType(Me(Me.tablecontact.emailbouncedColumn),Short)
            End Get
            Set
                Me(Me.tablecontact.emailbouncedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsforenameNull() As Boolean
            Return Me.IsNull(Me.tablecontact.forenameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetforenameNull()
            Me(Me.tablecontact.forenameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprefdnameNull() As Boolean
            Return Me.IsNull(Me.tablecontact.prefdnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprefdnameNull()
            Me(Me.tablecontact.prefdnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstitleNull() As Boolean
            Return Me.IsNull(Me.tablecontact.titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettitleNull()
            Me(Me.tablecontact.titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssalutationNull() As Boolean
            Return Me.IsNull(Me.tablecontact.salutationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsalutationNull()
            Me(Me.tablecontact.salutationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tablecontact.emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetemailNull()
            Me(Me.tablecontact.emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnotepadNull() As Boolean
            Return Me.IsNull(Me.tablecontact.notepadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnotepadNull()
            Me(Me.tablecontact.notepadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjobtitleNull() As Boolean
            Return Me.IsNull(Me.tablecontact.jobtitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjobtitleNull()
            Me(Me.tablecontact.jobtitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprimephoneNull() As Boolean
            Return Me.IsNull(Me.tablecontact.primephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprimephoneNull()
            Me(Me.tablecontact.primephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprimefaxNull() As Boolean
            Return Me.IsNull(Me.tablecontact.primefaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprimefaxNull()
            Me(Me.tablecontact.primefaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedateNull() As Boolean
            Return Me.IsNull(Me.tablecontact.createdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedateNull()
            Me(Me.tablecontact.createdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmemolinesNull() As Boolean
            Return Me.IsNull(Me.tablecontact.memolinesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmemolinesNull()
            Me(Me.tablecontact.memolinesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastmemodtNull() As Boolean
            Return Me.IsNull(Me.tablecontact.lastmemodtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastmemodtNull()
            Me(Me.tablecontact.lastmemodtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssourceNull() As Boolean
            Return Me.IsNull(Me.tablecontact.sourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsourceNull()
            Me(Me.tablecontact.sourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfaxflagNull() As Boolean
            Return Me.IsNull(Me.tablecontact.faxflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfaxflagNull()
            Me(Me.tablecontact.faxflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Issurname_soundexNull() As Boolean
            Return Me.IsNull(Me.tablecontact.surname_soundexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setsurname_soundexNull()
            Me(Me.tablecontact.surname_soundexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isforename_soundexNull() As Boolean
            Return Me.IsNull(Me.tablecontact.forename_soundexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setforename_soundexNull()
            Me(Me.tablecontact.forename_soundexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnotepad_tempNull() As Boolean
            Return Me.IsNull(Me.tablecontact.notepad_tempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnotepad_tempNull()
            Me(Me.tablecontact.notepad_tempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tablecontact.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tablecontact.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspokecdNull() As Boolean
            Return Me.IsNull(Me.tablecontact.spokecdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspokecdNull()
            Me(Me.tablecontact.spokecdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspokedateNull() As Boolean
            Return Me.IsNull(Me.tablecontact.spokedateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspokedateNull()
            Me(Me.tablecontact.spokedateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspoketimeNull() As Boolean
            Return Me.IsNull(Me.tablecontact.spoketimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspoketimeNull()
            Me(Me.tablecontact.spoketimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssecretarynameNull() As Boolean
            Return Me.IsNull(Me.tablecontact.secretarynameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsecretarynameNull()
            Me(Me.tablecontact.secretarynameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssecretaryphoneNull() As Boolean
            Return Me.IsNull(Me.tablecontact.secretaryphoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsecretaryphoneNull()
            Me(Me.tablecontact.secretaryphoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssecretaryemailNull() As Boolean
            Return Me.IsNull(Me.tablecontact.secretaryemailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsecretaryemailNull()
            Me(Me.tablecontact.secretaryemailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdepartmentNull() As Boolean
            Return Me.IsNull(Me.tablecontact.departmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdepartmentNull()
            Me(Me.tablecontact.departmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsemailflagNull() As Boolean
            Return Me.IsNull(Me.tablecontact.emailflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetemailflagNull()
            Me(Me.tablecontact.emailflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tablecontact.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tablecontact.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tablecontact.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tablecontact.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecontact.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tablecontact.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tablecontact.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tablecontact.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecontact.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tablecontact.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbgidNull() As Boolean
            Return Me.IsNull(Me.tablecontact.bgidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbgidNull()
            Me(Me.tablecontact.bgidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Issys_a_objects_keyNull() As Boolean
            Return Me.IsNull(Me.tablecontact.sys_a_objects_keyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setsys_a_objects_keyNull()
            Me(Me.tablecontact.sys_a_objects_keyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class contact_xtraRow
        Inherits Global.System.Data.DataRow
        
        Private tablecontact_xtra As contact_xtraDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecontact_xtra = CType(Me.Table,contact_xtraDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contno() As Integer
            Get
                Return CType(Me(Me.tablecontact_xtra.contnoColumn),Integer)
            End Get
            Set
                Me(Me.tablecontact_xtra.contnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property hold() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.holdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hold' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.holdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property executed() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.executedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'executed' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.executedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cancelled() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.cancelledColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cancelled' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.cancelledColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property order_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.order_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'order_no' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.order_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contract_chair_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.contract_chair_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contract_chair_no' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.contract_chair_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property invoice_address() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.invoice_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'invoice_address' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.invoice_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property customer_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.customer_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer_code' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.customer_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property additional_notes() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.additional_notesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'additional_notes' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.additional_notesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contract_contact_tel_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.contract_contact_tel_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contract_contact_tel_no' in table 'contact_xtra' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.contract_contact_tel_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contract_contact_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.contract_contact_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contract_contact_name' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.contract_contact_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property position() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.positionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'position' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.positionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_of_chairs() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.no_of_chairsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'no_of_chairs' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.no_of_chairsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property start_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.start_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'start_date' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.start_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property date_executed() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.date_executedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_executed' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.date_executedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property completion_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.completion_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'completion_date' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.completion_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contract_worksheet_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.contract_worksheet_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contract_worksheet_no' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.contract_worksheet_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property training_done() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.training_doneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'training_done' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.training_doneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property customer_order_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.customer_order_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer_order_no' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.customer_order_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_contact_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_contact_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_contact_name' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_contact_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_contact_tel_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_contact_tel_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_contact_tel_no' in table 'contact_xtra' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_contact_tel_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_worksheet_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_worksheet_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_worksheet_no' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_worksheet_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property evac_chair_ref_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.evac_chair_ref_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'evac_chair_ref_no' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.evac_chair_ref_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_chair_quantity() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_chair_quantityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_chair_quantity' in table 'contact_xtra' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_chair_quantityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_date' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_in() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.time_inColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'time_in' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.time_inColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_out() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.time_outColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'time_out' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.time_outColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property duration() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.durationColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'duration' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.durationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property additional_chairs_invoice_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.additional_chairs_invoice_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'additional_chairs_invoice_no' in table 'contact_xtra' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.additional_chairs_invoice_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no1' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no3' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no4' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no5() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no5' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no6() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no6' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no7() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no7' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no8() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no8' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no9() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no9' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no10() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no10' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no11() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no11' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no12() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no12' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no13() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no13' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no14() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no14' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no15() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no15' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no16() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no16' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber1' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber3' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber4' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber5() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber5' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber6() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber6' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber7() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber7' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber8() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber8' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber9() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber9' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber10() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber10' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber11() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber11' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber12() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber12' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber13() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber13' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber14() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber14' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber15() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber15' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber16() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber16' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no1' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no3' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no4' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no5() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no5' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no6() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no6' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no7() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no7' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no8() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no8' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no9() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no9' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no10() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no10' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no11() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no11' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no12() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no12' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no13() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no13' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no14() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no14' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no15() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no15' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no16() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no16' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location1' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location3' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location4' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location5() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location5' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location6() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location6' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location7() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location7' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location8() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location8' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location9() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location9' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location10() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location10' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location11() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location11' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location12() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location12' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location13() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location13' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location14() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location14' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location15() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location15' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location16() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location16' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments1' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments3' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments4' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments5() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments5' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments6() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments6' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments7() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments7' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments8() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments8' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments9() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments9' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments10() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments10' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments11() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments11' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments12() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments12' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments13() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments13' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments14() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments14' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments15() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments15' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_comments16() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_comments16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_comments16' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_comments16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok1' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok3' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok4' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok5() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok5' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok6() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok6' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok7() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok7' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok8() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok8' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok9() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok9' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok10() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok10' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok11() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok11' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok12() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok12' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok13() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok13' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok14() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok14' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok15() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok15' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_ok16() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_ok16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_ok16' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_ok16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested1' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested3' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested4' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested5() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested5' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested6() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested6' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested7() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested7' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested8() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested8' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested9() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested9' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested10() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested10' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested11() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested11' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested12() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested12' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested13() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested13' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested14() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested14' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested15() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested15' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_tested16() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_tested16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_tested16' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_tested16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property date_trained() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.date_trainedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_trained' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.date_trainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property date_cancelled() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.date_cancelledColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_cancelled' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.date_cancelledColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property status() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'status' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property add_chair_inv_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.add_chair_inv_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_chair_inv_no' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.add_chair_inv_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contract_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.contract_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contract_date' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.contract_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineer() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.engineerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'engineer' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.engineerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property annual_cost() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.annual_costColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'annual_cost' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.annual_costColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property additional_notes2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.additional_notes2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'additional_notes2' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.additional_notes2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property area() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.areaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'area' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.areaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no17() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no17' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no18() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no18' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no19() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no19' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_no20() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_no20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_no20' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_no20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber17() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber17' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber18() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber18' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber19() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber19' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_enumber20() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_enumber20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_enumber20' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_enumber20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no17() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no17' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no18() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no18' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no19() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no19' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property worksheet_fl_no20() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.worksheet_fl_no20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'worksheet_fl_no20' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.worksheet_fl_no20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location17() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location17Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location17' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location18() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location18Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location18' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location19() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location19Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location19' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exact_location20() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.exact_location20Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exact_location20' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.exact_location20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property historydate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.historydateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'historydate' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.historydateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property renewaldate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.renewaldateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'renewaldate' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.renewaldateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property history() As Short
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.historyColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'history' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.historyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property directdebit() As Short
            Get
                Try 
                    Return CType(Me(Me.tablecontact_xtra.directdebitColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directdebit' in table 'contact_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontact_xtra.directdebitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tablecontact_xtra.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tablecontact_xtra.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tablecontact_xtra.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tablecontact_xtra.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tablecontact_xtra.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tablecontact_xtra.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsholdNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.holdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetholdNull()
            Me(Me.tablecontact_xtra.holdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsexecutedNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.executedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetexecutedNull()
            Me(Me.tablecontact_xtra.executedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscancelledNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.cancelledColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcancelledNull()
            Me(Me.tablecontact_xtra.cancelledColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isorder_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.order_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setorder_noNull()
            Me(Me.tablecontact_xtra.order_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscontract_chair_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.contract_chair_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcontract_chair_noNull()
            Me(Me.tablecontact_xtra.contract_chair_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isinvoice_addressNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.invoice_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setinvoice_addressNull()
            Me(Me.tablecontact_xtra.invoice_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscustomer_codeNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.customer_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcustomer_codeNull()
            Me(Me.tablecontact_xtra.customer_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isadditional_notesNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.additional_notesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setadditional_notesNull()
            Me(Me.tablecontact_xtra.additional_notesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscontract_contact_tel_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.contract_contact_tel_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcontract_contact_tel_noNull()
            Me(Me.tablecontact_xtra.contract_contact_tel_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscontract_contact_nameNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.contract_contact_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcontract_contact_nameNull()
            Me(Me.tablecontact_xtra.contract_contact_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspositionNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.positionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpositionNull()
            Me(Me.tablecontact_xtra.positionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isno_of_chairsNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.no_of_chairsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setno_of_chairsNull()
            Me(Me.tablecontact_xtra.no_of_chairsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isstart_dateNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.start_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setstart_dateNull()
            Me(Me.tablecontact_xtra.start_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdate_executedNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.date_executedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdate_executedNull()
            Me(Me.tablecontact_xtra.date_executedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscompletion_dateNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.completion_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcompletion_dateNull()
            Me(Me.tablecontact_xtra.completion_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscontract_worksheet_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.contract_worksheet_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcontract_worksheet_noNull()
            Me(Me.tablecontact_xtra.contract_worksheet_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istraining_doneNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.training_doneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settraining_doneNull()
            Me(Me.tablecontact_xtra.training_doneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscustomer_order_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.customer_order_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcustomer_order_noNull()
            Me(Me.tablecontact_xtra.customer_order_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_contact_nameNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_contact_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_contact_nameNull()
            Me(Me.tablecontact_xtra.worksheet_contact_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_contact_tel_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_contact_tel_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_contact_tel_noNull()
            Me(Me.tablecontact_xtra.worksheet_contact_tel_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_worksheet_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_worksheet_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_worksheet_noNull()
            Me(Me.tablecontact_xtra.worksheet_worksheet_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumberNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumberNull()
            Me(Me.tablecontact_xtra.worksheet_enumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isevac_chair_ref_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.evac_chair_ref_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setevac_chair_ref_noNull()
            Me(Me.tablecontact_xtra.evac_chair_ref_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_chair_quantityNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_chair_quantityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_chair_quantityNull()
            Me(Me.tablecontact_xtra.worksheet_chair_quantityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_dateNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_dateNull()
            Me(Me.tablecontact_xtra.worksheet_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istime_inNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.time_inColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settime_inNull()
            Me(Me.tablecontact_xtra.time_inColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istime_outNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.time_outColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settime_outNull()
            Me(Me.tablecontact_xtra.time_outColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdurationNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.durationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdurationNull()
            Me(Me.tablecontact_xtra.durationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isadditional_chairs_invoice_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.additional_chairs_invoice_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setadditional_chairs_invoice_noNull()
            Me(Me.tablecontact_xtra.additional_chairs_invoice_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no1Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no1Null()
            Me(Me.tablecontact_xtra.worksheet_no1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no2Null()
            Me(Me.tablecontact_xtra.worksheet_no2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no3Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no3Null()
            Me(Me.tablecontact_xtra.worksheet_no3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no4Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no4Null()
            Me(Me.tablecontact_xtra.worksheet_no4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no5Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no5Null()
            Me(Me.tablecontact_xtra.worksheet_no5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no6Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no6Null()
            Me(Me.tablecontact_xtra.worksheet_no6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no7Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no7Null()
            Me(Me.tablecontact_xtra.worksheet_no7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no8Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no8Null()
            Me(Me.tablecontact_xtra.worksheet_no8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no9Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no9Null()
            Me(Me.tablecontact_xtra.worksheet_no9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no10Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no10Null()
            Me(Me.tablecontact_xtra.worksheet_no10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no11Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no11Null()
            Me(Me.tablecontact_xtra.worksheet_no11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no12Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no12Null()
            Me(Me.tablecontact_xtra.worksheet_no12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no13Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no13Null()
            Me(Me.tablecontact_xtra.worksheet_no13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no14Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no14Null()
            Me(Me.tablecontact_xtra.worksheet_no14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no15Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no15Null()
            Me(Me.tablecontact_xtra.worksheet_no15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no16Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no16Null()
            Me(Me.tablecontact_xtra.worksheet_no16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber1Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber1Null()
            Me(Me.tablecontact_xtra.worksheet_enumber1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber2Null()
            Me(Me.tablecontact_xtra.worksheet_enumber2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber3Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber3Null()
            Me(Me.tablecontact_xtra.worksheet_enumber3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber4Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber4Null()
            Me(Me.tablecontact_xtra.worksheet_enumber4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber5Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber5Null()
            Me(Me.tablecontact_xtra.worksheet_enumber5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber6Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber6Null()
            Me(Me.tablecontact_xtra.worksheet_enumber6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber7Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber7Null()
            Me(Me.tablecontact_xtra.worksheet_enumber7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber8Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber8Null()
            Me(Me.tablecontact_xtra.worksheet_enumber8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber9Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber9Null()
            Me(Me.tablecontact_xtra.worksheet_enumber9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber10Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber10Null()
            Me(Me.tablecontact_xtra.worksheet_enumber10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber11Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber11Null()
            Me(Me.tablecontact_xtra.worksheet_enumber11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber12Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber12Null()
            Me(Me.tablecontact_xtra.worksheet_enumber12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber13Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber13Null()
            Me(Me.tablecontact_xtra.worksheet_enumber13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber14Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber14Null()
            Me(Me.tablecontact_xtra.worksheet_enumber14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber15Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber15Null()
            Me(Me.tablecontact_xtra.worksheet_enumber15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber16Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber16Null()
            Me(Me.tablecontact_xtra.worksheet_enumber16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no1Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no1Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no2Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no3Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no3Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no4Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no4Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no5Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no5Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no6Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no6Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no7Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no7Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no8Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no8Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no9Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no9Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no10Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no10Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no11Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no11Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no12Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no12Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no13Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no13Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no14Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no14Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no15Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no15Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no16Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no16Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location1Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location1Null()
            Me(Me.tablecontact_xtra.exact_location1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location2Null()
            Me(Me.tablecontact_xtra.exact_location2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location3Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location3Null()
            Me(Me.tablecontact_xtra.exact_location3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location4Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location4Null()
            Me(Me.tablecontact_xtra.exact_location4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location5Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location5Null()
            Me(Me.tablecontact_xtra.exact_location5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location6Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location6Null()
            Me(Me.tablecontact_xtra.exact_location6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location7Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location7Null()
            Me(Me.tablecontact_xtra.exact_location7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location8Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location8Null()
            Me(Me.tablecontact_xtra.exact_location8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location9Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location9Null()
            Me(Me.tablecontact_xtra.exact_location9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location10Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location10Null()
            Me(Me.tablecontact_xtra.exact_location10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location11Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location11Null()
            Me(Me.tablecontact_xtra.exact_location11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location12Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location12Null()
            Me(Me.tablecontact_xtra.exact_location12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location13Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location13Null()
            Me(Me.tablecontact_xtra.exact_location13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location14Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location14Null()
            Me(Me.tablecontact_xtra.exact_location14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location15Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location15Null()
            Me(Me.tablecontact_xtra.exact_location15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location16Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location16Null()
            Me(Me.tablecontact_xtra.exact_location16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments1Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments1Null()
            Me(Me.tablecontact_xtra.worksheet_comments1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments2Null()
            Me(Me.tablecontact_xtra.worksheet_comments2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments3Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments3Null()
            Me(Me.tablecontact_xtra.worksheet_comments3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments4Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments4Null()
            Me(Me.tablecontact_xtra.worksheet_comments4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments5Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments5Null()
            Me(Me.tablecontact_xtra.worksheet_comments5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments6Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments6Null()
            Me(Me.tablecontact_xtra.worksheet_comments6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments7Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments7Null()
            Me(Me.tablecontact_xtra.worksheet_comments7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments8Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments8Null()
            Me(Me.tablecontact_xtra.worksheet_comments8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments9Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments9Null()
            Me(Me.tablecontact_xtra.worksheet_comments9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments10Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments10Null()
            Me(Me.tablecontact_xtra.worksheet_comments10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments11Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments11Null()
            Me(Me.tablecontact_xtra.worksheet_comments11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments12Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments12Null()
            Me(Me.tablecontact_xtra.worksheet_comments12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments13Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments13Null()
            Me(Me.tablecontact_xtra.worksheet_comments13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments14Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments14Null()
            Me(Me.tablecontact_xtra.worksheet_comments14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments15Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments15Null()
            Me(Me.tablecontact_xtra.worksheet_comments15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_comments16Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_comments16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_comments16Null()
            Me(Me.tablecontact_xtra.worksheet_comments16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok1Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok1Null()
            Me(Me.tablecontact_xtra.worksheet_ok1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok2Null()
            Me(Me.tablecontact_xtra.worksheet_ok2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok3Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok3Null()
            Me(Me.tablecontact_xtra.worksheet_ok3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok4Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok4Null()
            Me(Me.tablecontact_xtra.worksheet_ok4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok5Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok5Null()
            Me(Me.tablecontact_xtra.worksheet_ok5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok6Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok6Null()
            Me(Me.tablecontact_xtra.worksheet_ok6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok7Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok7Null()
            Me(Me.tablecontact_xtra.worksheet_ok7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok8Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok8Null()
            Me(Me.tablecontact_xtra.worksheet_ok8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok9Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok9Null()
            Me(Me.tablecontact_xtra.worksheet_ok9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok10Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok10Null()
            Me(Me.tablecontact_xtra.worksheet_ok10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok11Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok11Null()
            Me(Me.tablecontact_xtra.worksheet_ok11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok12Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok12Null()
            Me(Me.tablecontact_xtra.worksheet_ok12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok13Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok13Null()
            Me(Me.tablecontact_xtra.worksheet_ok13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok14Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok14Null()
            Me(Me.tablecontact_xtra.worksheet_ok14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok15Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok15Null()
            Me(Me.tablecontact_xtra.worksheet_ok15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_ok16Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_ok16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_ok16Null()
            Me(Me.tablecontact_xtra.worksheet_ok16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested1Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested1Null()
            Me(Me.tablecontact_xtra.worksheet_tested1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested2Null()
            Me(Me.tablecontact_xtra.worksheet_tested2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested3Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested3Null()
            Me(Me.tablecontact_xtra.worksheet_tested3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested4Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested4Null()
            Me(Me.tablecontact_xtra.worksheet_tested4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested5Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested5Null()
            Me(Me.tablecontact_xtra.worksheet_tested5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested6Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested6Null()
            Me(Me.tablecontact_xtra.worksheet_tested6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested7Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested7Null()
            Me(Me.tablecontact_xtra.worksheet_tested7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested8Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested8Null()
            Me(Me.tablecontact_xtra.worksheet_tested8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested9Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested9Null()
            Me(Me.tablecontact_xtra.worksheet_tested9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested10Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested10Null()
            Me(Me.tablecontact_xtra.worksheet_tested10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested11Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested11Null()
            Me(Me.tablecontact_xtra.worksheet_tested11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested12Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested12Null()
            Me(Me.tablecontact_xtra.worksheet_tested12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested13Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested13Null()
            Me(Me.tablecontact_xtra.worksheet_tested13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested14Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested14Null()
            Me(Me.tablecontact_xtra.worksheet_tested14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested15Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested15Null()
            Me(Me.tablecontact_xtra.worksheet_tested15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_tested16Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_tested16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_tested16Null()
            Me(Me.tablecontact_xtra.worksheet_tested16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdate_trainedNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.date_trainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdate_trainedNull()
            Me(Me.tablecontact_xtra.date_trainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdate_cancelledNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.date_cancelledColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdate_cancelledNull()
            Me(Me.tablecontact_xtra.date_cancelledColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstatusNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstatusNull()
            Me(Me.tablecontact_xtra.statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isadd_chair_inv_noNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.add_chair_inv_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setadd_chair_inv_noNull()
            Me(Me.tablecontact_xtra.add_chair_inv_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscontract_dateNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.contract_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcontract_dateNull()
            Me(Me.tablecontact_xtra.contract_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsengineerNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.engineerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetengineerNull()
            Me(Me.tablecontact_xtra.engineerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isannual_costNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.annual_costColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setannual_costNull()
            Me(Me.tablecontact_xtra.annual_costColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isadditional_notes2Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.additional_notes2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setadditional_notes2Null()
            Me(Me.tablecontact_xtra.additional_notes2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsareaNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.areaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetareaNull()
            Me(Me.tablecontact_xtra.areaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no17Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no17Null()
            Me(Me.tablecontact_xtra.worksheet_no17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no18Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no18Null()
            Me(Me.tablecontact_xtra.worksheet_no18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no19Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no19Null()
            Me(Me.tablecontact_xtra.worksheet_no19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_no20Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_no20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_no20Null()
            Me(Me.tablecontact_xtra.worksheet_no20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber17Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber17Null()
            Me(Me.tablecontact_xtra.worksheet_enumber17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber18Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber18Null()
            Me(Me.tablecontact_xtra.worksheet_enumber18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber19Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber19Null()
            Me(Me.tablecontact_xtra.worksheet_enumber19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_enumber20Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_enumber20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_enumber20Null()
            Me(Me.tablecontact_xtra.worksheet_enumber20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no17Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no17Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no18Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no18Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no19Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no19Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isworksheet_fl_no20Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.worksheet_fl_no20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setworksheet_fl_no20Null()
            Me(Me.tablecontact_xtra.worksheet_fl_no20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location17Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location17Null()
            Me(Me.tablecontact_xtra.exact_location17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location18Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location18Null()
            Me(Me.tablecontact_xtra.exact_location18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location19Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location19Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location19Null()
            Me(Me.tablecontact_xtra.exact_location19Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isexact_location20Null() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.exact_location20Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setexact_location20Null()
            Me(Me.tablecontact_xtra.exact_location20Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IshistorydateNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.historydateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SethistorydateNull()
            Me(Me.tablecontact_xtra.historydateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrenewaldateNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.renewaldateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrenewaldateNull()
            Me(Me.tablecontact_xtra.renewaldateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IshistoryNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.historyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SethistoryNull()
            Me(Me.tablecontact_xtra.historyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdirectdebitNull() As Boolean
            Return Me.IsNull(Me.tablecontact_xtra.directdebitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdirectdebitNull()
            Me(Me.tablecontact_xtra.directdebitColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class divisionRow
        Inherits Global.System.Data.DataRow
        
        Private tabledivision As divisionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledivision = CType(Me.Table,divisionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property divno() As Integer
            Get
                Return CType(Me(Me.tabledivision.divnoColumn),Integer)
            End Get
            Set
                Me(Me.tabledivision.divnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property compno() As Integer
            Get
                Return CType(Me(Me.tabledivision.compnoColumn),Integer)
            End Get
            Set
                Me(Me.tabledivision.compnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property divname() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.divnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'divname' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.divnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addrno() As Integer
            Get
                Return CType(Me(Me.tabledivision.addrnoColumn),Integer)
            End Get
            Set
                Me(Me.tabledivision.addrnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property oprano() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.opranoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'oprano' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.opranoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property phone() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.phoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'phone' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.phoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fax() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fax' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property employees() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledivision.employeesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'employees' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.employeesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property turnovercd() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.turnovercdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'turnovercd' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.turnovercdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sic() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.sicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sic' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.sicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property divtypedsc() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.divtypedscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'divtypedsc' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.divtypedscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property divname_soundex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledivision.divname_soundexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'divname_soundex' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.divname_soundexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fcurrcode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.fcurrcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fcurrcode' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.fcurrcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property opcompany() As String
            Get
                Return CType(Me(Me.tabledivision.opcompanyColumn),String)
            End Get
            Set
                Me(Me.tabledivision.opcompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property website() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.websiteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'website' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.websiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fiscalyear() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision.fiscalyearColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fiscalyear' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.fiscalyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property limited() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.limitedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'limited' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.limitedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastverified() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision.lastverifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastverified' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.lastverifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property notepad() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.notepadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'notepad' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.notepadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property notepad_temp() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.notepad_tempColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'notepad_temp' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.notepad_tempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Priority() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledivision.PriorityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Priority' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.PriorityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property division_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.division_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'division_mgr' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.division_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pledgerno() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.pledgernoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pledgerno' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.pledgernoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property atref() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.atrefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'atref' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.atrefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatusFlag() As String
            Get
                Return CType(Me(Me.tabledivision.StatusFlagColumn),String)
            End Get
            Set
                Me(Me.tabledivision.StatusFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bgid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledivision.bgidColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bgid' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.bgidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mystorehideothercategories() As Double
            Get
                Return CType(Me(Me.tabledivision.mystorehideothercategoriesColumn),Double)
            End Get
            Set
                Me(Me.tabledivision.mystorehideothercategoriesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property usesharedbaskets() As Short
            Get
                Try 
                    Return CType(Me(Me.tabledivision.usesharedbasketsColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'usesharedbaskets' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.usesharedbasketsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property temptaxcode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.temptaxcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'temptaxcode' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.temptaxcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tempcountrycode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.tempcountrycodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tempcountrycode' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.tempcountrycodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tempvatregcode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.tempvatregcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tempvatregcode' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.tempvatregcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sys_a_objects_key() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.sys_a_objects_keyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sys_a_objects_key' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.sys_a_objects_keyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property wowpermalink() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.wowpermalinkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wowpermalink' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.wowpermalinkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property source() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision.sourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'source' in table 'division' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision.sourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdivnameNull() As Boolean
            Return Me.IsNull(Me.tabledivision.divnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdivnameNull()
            Me(Me.tabledivision.divnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsopranoNull() As Boolean
            Return Me.IsNull(Me.tabledivision.opranoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetopranoNull()
            Me(Me.tabledivision.opranoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsphoneNull() As Boolean
            Return Me.IsNull(Me.tabledivision.phoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetphoneNull()
            Me(Me.tabledivision.phoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfaxNull() As Boolean
            Return Me.IsNull(Me.tabledivision.faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfaxNull()
            Me(Me.tabledivision.faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsemployeesNull() As Boolean
            Return Me.IsNull(Me.tabledivision.employeesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetemployeesNull()
            Me(Me.tabledivision.employeesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsturnovercdNull() As Boolean
            Return Me.IsNull(Me.tabledivision.turnovercdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetturnovercdNull()
            Me(Me.tabledivision.turnovercdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssicNull() As Boolean
            Return Me.IsNull(Me.tabledivision.sicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsicNull()
            Me(Me.tabledivision.sicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdivtypedscNull() As Boolean
            Return Me.IsNull(Me.tabledivision.divtypedscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdivtypedscNull()
            Me(Me.tabledivision.divtypedscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdivname_soundexNull() As Boolean
            Return Me.IsNull(Me.tabledivision.divname_soundexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdivname_soundexNull()
            Me(Me.tabledivision.divname_soundexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfcurrcodeNull() As Boolean
            Return Me.IsNull(Me.tabledivision.fcurrcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfcurrcodeNull()
            Me(Me.tabledivision.fcurrcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tabledivision.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tabledivision.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IswebsiteNull() As Boolean
            Return Me.IsNull(Me.tabledivision.websiteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetwebsiteNull()
            Me(Me.tabledivision.websiteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfiscalyearNull() As Boolean
            Return Me.IsNull(Me.tabledivision.fiscalyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfiscalyearNull()
            Me(Me.tabledivision.fiscalyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslimitedNull() As Boolean
            Return Me.IsNull(Me.tabledivision.limitedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlimitedNull()
            Me(Me.tabledivision.limitedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastverifiedNull() As Boolean
            Return Me.IsNull(Me.tabledivision.lastverifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastverifiedNull()
            Me(Me.tabledivision.lastverifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnotepadNull() As Boolean
            Return Me.IsNull(Me.tabledivision.notepadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnotepadNull()
            Me(Me.tabledivision.notepadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnotepad_tempNull() As Boolean
            Return Me.IsNull(Me.tabledivision.notepad_tempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnotepad_tempNull()
            Me(Me.tabledivision.notepad_tempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriorityNull() As Boolean
            Return Me.IsNull(Me.tabledivision.PriorityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriorityNull()
            Me(Me.tabledivision.PriorityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdivision_mgrNull() As Boolean
            Return Me.IsNull(Me.tabledivision.division_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdivision_mgrNull()
            Me(Me.tabledivision.division_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspledgernoNull() As Boolean
            Return Me.IsNull(Me.tabledivision.pledgernoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpledgernoNull()
            Me(Me.tabledivision.pledgernoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsatrefNull() As Boolean
            Return Me.IsNull(Me.tabledivision.atrefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetatrefNull()
            Me(Me.tabledivision.atrefColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tabledivision.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tabledivision.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tabledivision.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tabledivision.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tabledivision.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tabledivision.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tabledivision.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tabledivision.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tabledivision.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tabledivision.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbgidNull() As Boolean
            Return Me.IsNull(Me.tabledivision.bgidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbgidNull()
            Me(Me.tabledivision.bgidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsusesharedbasketsNull() As Boolean
            Return Me.IsNull(Me.tabledivision.usesharedbasketsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetusesharedbasketsNull()
            Me(Me.tabledivision.usesharedbasketsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstemptaxcodeNull() As Boolean
            Return Me.IsNull(Me.tabledivision.temptaxcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettemptaxcodeNull()
            Me(Me.tabledivision.temptaxcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstempcountrycodeNull() As Boolean
            Return Me.IsNull(Me.tabledivision.tempcountrycodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettempcountrycodeNull()
            Me(Me.tabledivision.tempcountrycodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstempvatregcodeNull() As Boolean
            Return Me.IsNull(Me.tabledivision.tempvatregcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettempvatregcodeNull()
            Me(Me.tabledivision.tempvatregcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Issys_a_objects_keyNull() As Boolean
            Return Me.IsNull(Me.tabledivision.sys_a_objects_keyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setsys_a_objects_keyNull()
            Me(Me.tabledivision.sys_a_objects_keyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IswowpermalinkNull() As Boolean
            Return Me.IsNull(Me.tabledivision.wowpermalinkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetwowpermalinkNull()
            Me(Me.tabledivision.wowpermalinkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssourceNull() As Boolean
            Return Me.IsNull(Me.tabledivision.sourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsourceNull()
            Me(Me.tabledivision.sourceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class division_xtraRow
        Inherits Global.System.Data.DataRow
        
        Private tabledivision_xtra As division_xtraDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledivision_xtra = CType(Me.Table,division_xtraDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivNo() As Integer
            Get
                Return CType(Me(Me.tabledivision_xtra.DivNoColumn),Integer)
            End Get
            Set
                Me(Me.tabledivision_xtra.DivNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_ddi_exportdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.dd_ddi_exportdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_ddi_exportdate' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.dd_ddi_exportdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_ddi_receiveddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.dd_ddi_receiveddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_ddi_receiveddate' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.dd_ddi_receiveddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_ddi_activateddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivision_xtra.dd_ddi_activateddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_ddi_activateddate' in table 'division_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivision_xtra.dd_ddi_activateddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tabledivision_xtra.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tabledivision_xtra.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tabledivision_xtra.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tabledivision_xtra.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tabledivision_xtra.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tabledivision_xtra.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_ddi_exportdateNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.dd_ddi_exportdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_ddi_exportdateNull()
            Me(Me.tabledivision_xtra.dd_ddi_exportdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_ddi_receiveddateNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.dd_ddi_receiveddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_ddi_receiveddateNull()
            Me(Me.tabledivision_xtra.dd_ddi_receiveddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_ddi_activateddateNull() As Boolean
            Return Me.IsNull(Me.tabledivision_xtra.dd_ddi_activateddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_ddi_activateddateNull()
            Me(Me.tabledivision_xtra.dd_ddi_activateddateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class leadRow
        Inherits Global.System.Data.DataRow
        
        Private tablelead As leadDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelead = CType(Me.Table,leadDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadno() As Integer
            Get
                Return CType(Me(Me.tablelead.leadnoColumn),Integer)
            End Get
            Set
                Me(Me.tablelead.leadnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contno() As Integer
            Get
                Return CType(Me(Me.tablelead.contnoColumn),Integer)
            End Get
            Set
                Me(Me.tablelead.contnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadsrccd() As String
            Get
                Return CType(Me(Me.tablelead.leadsrccdColumn),String)
            End Get
            Set
                Me(Me.tablelead.leadsrccdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leaddate() As Date
            Get
                Return CType(Me(Me.tablelead.leaddateColumn),Date)
            End Get
            Set
                Me(Me.tablelead.leaddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Return CType(Me(Me.tablelead.createdbyColumn),String)
            End Get
            Set
                Me(Me.tablelead.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadsttscd() As String
            Get
                Return CType(Me(Me.tablelead.leadsttscdColumn),String)
            End Get
            Set
                Me(Me.tablelead.leadsttscdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lsttsdtlcd() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.lsttsdtlcdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lsttsdtlcd' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.lsttsdtlcdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property stchngdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead.stchngdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'stchngdate' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.stchngdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property quoteno() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead.quotenoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quoteno' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.quotenoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cg_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.cg_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cg_code' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.cg_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadsizecd() As String
            Get
                Return CType(Me(Me.tablelead.leadsizecdColumn),String)
            End Get
            Set
                Me(Me.tablelead.leadsizecdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property guttometer() As Integer
            Get
                Return CType(Me(Me.tablelead.guttometerColumn),Integer)
            End Get
            Set
                Me(Me.tablelead.guttometerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property postponed() As Integer
            Get
                Return CType(Me(Me.tablelead.postponedColumn),Integer)
            End Get
            Set
                Me(Me.tablelead.postponedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property probcount() As Integer
            Get
                Return CType(Me(Me.tablelead.probcountColumn),Integer)
            End Get
            Set
                Me(Me.tablelead.probcountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spokedate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead.spokedateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spokedate' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.spokedateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spokecd() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.spokecdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spokecd' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.spokecdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property notepad() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.notepadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'notepad' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.notepadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spoketime() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablelead.spoketimeColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spoketime' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.spoketimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sttschgtm() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablelead.sttschgtmColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sttschgtm' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.sttschgtmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property notepad_temp() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.notepad_tempColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'notepad_temp' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.notepad_tempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property estclose() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead.estcloseColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estclose' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.estcloseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lead_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.lead_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lead_desc' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.lead_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property respuser() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.respuserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'respuser' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.respuserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property marginsize() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.marginsizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marginsize' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.marginsizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_director() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.account_directorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_director' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.account_directorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cashvalue() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.cashvalueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cashvalue' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.cashvalueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property analysis1() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.analysis1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'analysis1' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.analysis1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property situationsummary() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.situationsummaryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'situationsummary' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.situationsummaryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadsourceother() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.leadsourceotherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'leadsourceother' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.leadsourceotherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatusFlag() As String
            Get
                Return CType(Me(Me.tablelead.StatusFlagColumn),String)
            End Get
            Set
                Me(Me.tablelead.StatusFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadsourceactivity() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead.leadsourceactivityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'leadsourceactivity' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.leadsourceactivityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sys_a_objects_key() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.sys_a_objects_keyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sys_a_objects_key' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.sys_a_objects_keyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadtypecd() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.leadtypecdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'leadtypecd' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.leadtypecdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property salesperson() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead.salespersonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'salesperson' in table 'lead' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead.salespersonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslsttsdtlcdNull() As Boolean
            Return Me.IsNull(Me.tablelead.lsttsdtlcdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlsttsdtlcdNull()
            Me(Me.tablelead.lsttsdtlcdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstchngdateNull() As Boolean
            Return Me.IsNull(Me.tablelead.stchngdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstchngdateNull()
            Me(Me.tablelead.stchngdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsquotenoNull() As Boolean
            Return Me.IsNull(Me.tablelead.quotenoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetquotenoNull()
            Me(Me.tablelead.quotenoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscg_codeNull() As Boolean
            Return Me.IsNull(Me.tablelead.cg_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcg_codeNull()
            Me(Me.tablelead.cg_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspokedateNull() As Boolean
            Return Me.IsNull(Me.tablelead.spokedateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspokedateNull()
            Me(Me.tablelead.spokedateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspokecdNull() As Boolean
            Return Me.IsNull(Me.tablelead.spokecdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspokecdNull()
            Me(Me.tablelead.spokecdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnotepadNull() As Boolean
            Return Me.IsNull(Me.tablelead.notepadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnotepadNull()
            Me(Me.tablelead.notepadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspoketimeNull() As Boolean
            Return Me.IsNull(Me.tablelead.spoketimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspoketimeNull()
            Me(Me.tablelead.spoketimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssttschgtmNull() As Boolean
            Return Me.IsNull(Me.tablelead.sttschgtmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsttschgtmNull()
            Me(Me.tablelead.sttschgtmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnotepad_tempNull() As Boolean
            Return Me.IsNull(Me.tablelead.notepad_tempColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnotepad_tempNull()
            Me(Me.tablelead.notepad_tempColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsestcloseNull() As Boolean
            Return Me.IsNull(Me.tablelead.estcloseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetestcloseNull()
            Me(Me.tablelead.estcloseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tablelead.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tablelead.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islead_descNull() As Boolean
            Return Me.IsNull(Me.tablelead.lead_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlead_descNull()
            Me(Me.tablelead.lead_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrespuserNull() As Boolean
            Return Me.IsNull(Me.tablelead.respuserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrespuserNull()
            Me(Me.tablelead.respuserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmarginsizeNull() As Boolean
            Return Me.IsNull(Me.tablelead.marginsizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmarginsizeNull()
            Me(Me.tablelead.marginsizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_directorNull() As Boolean
            Return Me.IsNull(Me.tablelead.account_directorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_directorNull()
            Me(Me.tablelead.account_directorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscashvalueNull() As Boolean
            Return Me.IsNull(Me.tablelead.cashvalueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcashvalueNull()
            Me(Me.tablelead.cashvalueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isanalysis1Null() As Boolean
            Return Me.IsNull(Me.tablelead.analysis1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setanalysis1Null()
            Me(Me.tablelead.analysis1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssituationsummaryNull() As Boolean
            Return Me.IsNull(Me.tablelead.situationsummaryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsituationsummaryNull()
            Me(Me.tablelead.situationsummaryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsleadsourceotherNull() As Boolean
            Return Me.IsNull(Me.tablelead.leadsourceotherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetleadsourceotherNull()
            Me(Me.tablelead.leadsourceotherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tablelead.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tablelead.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tablelead.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tablelead.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tablelead.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tablelead.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tablelead.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tablelead.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsleadsourceactivityNull() As Boolean
            Return Me.IsNull(Me.tablelead.leadsourceactivityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetleadsourceactivityNull()
            Me(Me.tablelead.leadsourceactivityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Issys_a_objects_keyNull() As Boolean
            Return Me.IsNull(Me.tablelead.sys_a_objects_keyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setsys_a_objects_keyNull()
            Me(Me.tablelead.sys_a_objects_keyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsleadtypecdNull() As Boolean
            Return Me.IsNull(Me.tablelead.leadtypecdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetleadtypecdNull()
            Me(Me.tablelead.leadtypecdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssalespersonNull() As Boolean
            Return Me.IsNull(Me.tablelead.salespersonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsalespersonNull()
            Me(Me.tablelead.salespersonColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class lead_xtraRow
        Inherits Global.System.Data.DataRow
        
        Private tablelead_xtra As lead_xtraDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablelead_xtra = CType(Me.Table,lead_xtraDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property leadno() As Integer
            Get
                Return CType(Me(Me.tablelead_xtra.leadnoColumn),Integer)
            End Get
            Set
                Me(Me.tablelead_xtra.leadnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property refno() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.refnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'refno' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.refnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property exhibitionname() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.exhibitionnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'exhibitionname' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.exhibitionnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property magazinename() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.magazinenameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'magazinename' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.magazinenameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property datereceived() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.datereceivedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'datereceived' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.datereceivedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateinfosent() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dateinfosentColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dateinfosent' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dateinfosentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property visitdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.visitdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'visitdate' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.visitdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calltimein() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.calltimeinColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'calltimein' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.calltimeinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property calltimeout() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.calltimeoutColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'calltimeout' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.calltimeoutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nooffloors() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.nooffloorsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nooffloors' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.nooffloorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property noofstaircasesescape() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.noofstaircasesescapeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'noofstaircasesescape' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.noofstaircasesescapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_noofnotifieddisabled() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_noofnotifieddisabledColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_noofnotifieddisabled' in table 'lead_xtra' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_noofnotifieddisabledColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_accessofpublic() As Short
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_accessofpublicColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_accessofpublic' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_accessofpublicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_towhatfloors() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_towhatfloorsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_towhatfloors' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_towhatfloorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_locationofrestaurant() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_locationofrestaurantColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_locationofrestaurant' in table 'lead_xtra' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_locationofrestaurantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_locationofdisabledtoilets() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_locationofdisabledtoiletsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_locationofdisabledtoilets' in table 'lead_xtra' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_locationofdisabledtoiletsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property suggestednoofchairs() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.suggestednoofchairsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'suggestednoofchairs' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.suggestednoofchairsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_materials() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_materialsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_materials' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_materialsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_lessdiscount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_lessdiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_lessdiscount' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_lessdiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_subtotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_subtotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_subtotal' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_subtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_postageandpackaging() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_postageandpackagingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_postageandpackaging' in table 'lead_xtra' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_postageandpackagingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_labour() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_labourColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_labour' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_labourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_expenses() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_expensesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_expenses' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_expensesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_costtotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_costtotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_costtotal' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_costtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_vat() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_vatColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_vat' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_vatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete_grandtotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.obsolete_grandtotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete_grandtotal' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.obsolete_grandtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property repinitials() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.repinitialsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'repinitials' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.repinitialsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mailinglistdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.mailinglistdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mailinglistdate' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.mailinglistdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property demorequested() As Short
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.demorequestedColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'demorequested' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.demorequestedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property projectno() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.projectnoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'projectno' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.projectnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property demoarrangedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.demoarrangedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'demoarrangedby' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.demoarrangedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property order_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.order_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'order_no' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.order_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contract_chair_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.contract_chair_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contract_chair_no' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.contract_chair_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property additional_notes() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.additional_notesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'additional_notes' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.additional_notesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property add_chair_inv_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.add_chair_inv_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add_chair_inv_no' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.add_chair_inv_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property date_executed() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.date_executedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_executed' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.date_executedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property date_cancelled() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.date_cancelledColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_cancelled' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.date_cancelledColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property history_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.history_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'history_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.history_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property renewal_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.renewal_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'renewal_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.renewal_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property date_trained() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.date_trainedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_trained' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.date_trainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property training_done() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.training_doneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'training_done' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.training_doneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_in() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.time_inColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'time_in' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.time_inColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property time_out() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.time_outColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'time_out' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.time_outColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property duration() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.durationColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'duration' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.durationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property evac_chair_ref_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.evac_chair_ref_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'evac_chair_ref_no' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.evac_chair_ref_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property additional_notes2() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.additional_notes2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'additional_notes2' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.additional_notes2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property start_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.start_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'start_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.start_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property completion_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.completion_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'completion_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.completion_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contract_worksheet_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.contract_worksheet_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contract_worksheet_no' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.contract_worksheet_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_of_chairs() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.no_of_chairsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'no_of_chairs' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.no_of_chairsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property annual_cost() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.annual_costColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'annual_cost' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.annual_costColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property customer_order_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.customer_order_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customer_order_no' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.customer_order_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property quotepadref() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.quotepadrefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'quotepadref' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.quotepadrefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property doc_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.doc_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_no' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.doc_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property master_leadno() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.master_leadnoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'master_leadno' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.master_leadnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair1_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair1_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair1_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair1_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair1_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair1_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair1_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair1_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair1_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair1_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair1_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair1_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair1_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair1_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair1_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair1_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair2_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair2_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair2_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair2_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair2_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair2_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair2_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair2_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair2_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair2_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair2_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair2_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair2_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair2_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair2_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair2_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair3_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair3_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair3_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair3_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair3_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair3_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair3_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair3_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair3_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair3_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair3_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair3_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair3_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair3_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair3_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair3_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair4_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair4_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair4_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair4_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair4_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair4_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair4_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair4_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair4_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair4_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair4_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair4_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair4_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair4_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair4_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair4_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair5_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair5_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair5_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair5_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair5_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair5_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair5_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair5_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair5_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair5_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair5_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair5_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair5_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair5_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair5_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair5_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair6_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair6_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair6_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair6_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair6_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair6_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair6_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair6_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair6_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair6_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair6_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair6_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair6_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair6_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair6_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair6_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair7_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair7_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair7_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair7_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair7_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair7_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair7_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair7_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair7_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair7_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair7_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair7_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair7_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair7_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair7_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair7_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair8_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair8_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair8_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair8_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair8_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair8_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair8_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair8_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair8_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair8_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair8_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair8_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair8_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair8_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair8_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair8_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair9_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair9_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair9_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair9_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair9_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair9_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair9_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair9_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair9_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair9_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair9_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair9_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair9_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair9_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair9_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair9_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair10_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair10_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair10_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair10_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair10_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair10_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair10_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair10_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair10_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair10_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair10_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair10_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair10_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair10_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair10_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair10_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair11_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair11_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair11_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair11_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair11_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair11_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair11_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair11_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair11_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair11_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair11_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair11_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair11_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair11_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair11_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair11_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair12_location() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair12_locationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair12_location' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair12_locationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair12_finish() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair12_finishColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair12_finish' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair12_finishColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair12_angle() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair12_angleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair12_angle' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair12_angleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_stair12_comments() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_stair12_commentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_stair12_comments' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_stair12_commentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_external_checks() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_external_checksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_external_checks' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_external_checksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_demo_declined() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_demo_declinedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_demo_declined' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_demo_declinedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property project_all_staircases_evaluated() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.project_all_staircases_evaluatedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'project_all_staircases_evaluated' in table 'lead_xtra' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.project_all_staircases_evaluatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property paraid_estimated_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.paraid_estimated_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paraid_estimated_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.paraid_estimated_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property paraid_drawings_approved_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.paraid_drawings_approved_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paraid_drawings_approved_date' in table 'lead_xtra' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.paraid_drawings_approved_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property paraid_planned_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.paraid_planned_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paraid_planned_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.paraid_planned_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property paraid_despatched_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.paraid_despatched_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paraid_despatched_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.paraid_despatched_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_type() As Short
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dd_typeColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_type' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dd_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dd_amountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_amount' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dd_amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_exportdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dd_exportdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_exportdate' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dd_exportdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_invoice_address() As Short
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dd_invoice_addressColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_invoice_address' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dd_invoice_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_paydate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dd_paydateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_paydate' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dd_paydateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_lastrejecteddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dd_lastrejecteddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_lastrejecteddate' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dd_lastrejecteddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dd_notes() As String
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.dd_notesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dd_notes' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.dd_notesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property suggested_service_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.suggested_service_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'suggested_service_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.suggested_service_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property apppointment_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.apppointment_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'apppointment_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.apppointment_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property apppointment_confirmed() As Boolean
            Get
                Return CType(Me(Me.tablelead_xtra.apppointment_confirmedColumn),Boolean)
            End Get
            Set
                Me(Me.tablelead_xtra.apppointment_confirmedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property onhold_letter() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.onhold_letterColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'onhold_letter' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.onhold_letterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property onhold_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablelead_xtra.onhold_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'onhold_date' in table 'lead_xtra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablelead_xtra.onhold_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tablelead_xtra.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tablelead_xtra.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tablelead_xtra.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tablelead_xtra.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tablelead_xtra.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tablelead_xtra.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrefnoNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.refnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrefnoNull()
            Me(Me.tablelead_xtra.refnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsexhibitionnameNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.exhibitionnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetexhibitionnameNull()
            Me(Me.tablelead_xtra.exhibitionnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmagazinenameNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.magazinenameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmagazinenameNull()
            Me(Me.tablelead_xtra.magazinenameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdatereceivedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.datereceivedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdatereceivedNull()
            Me(Me.tablelead_xtra.datereceivedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdateinfosentNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dateinfosentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdateinfosentNull()
            Me(Me.tablelead_xtra.dateinfosentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsvisitdateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.visitdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetvisitdateNull()
            Me(Me.tablelead_xtra.visitdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscalltimeinNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.calltimeinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcalltimeinNull()
            Me(Me.tablelead_xtra.calltimeinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscalltimeoutNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.calltimeoutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcalltimeoutNull()
            Me(Me.tablelead_xtra.calltimeoutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnooffloorsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.nooffloorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnooffloorsNull()
            Me(Me.tablelead_xtra.nooffloorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnoofstaircasesescapeNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.noofstaircasesescapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnoofstaircasesescapeNull()
            Me(Me.tablelead_xtra.noofstaircasesescapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_noofnotifieddisabledNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_noofnotifieddisabledColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_noofnotifieddisabledNull()
            Me(Me.tablelead_xtra.obsolete_noofnotifieddisabledColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_accessofpublicNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_accessofpublicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_accessofpublicNull()
            Me(Me.tablelead_xtra.obsolete_accessofpublicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_towhatfloorsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_towhatfloorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_towhatfloorsNull()
            Me(Me.tablelead_xtra.obsolete_towhatfloorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_locationofrestaurantNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_locationofrestaurantColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_locationofrestaurantNull()
            Me(Me.tablelead_xtra.obsolete_locationofrestaurantColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_locationofdisabledtoiletsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_locationofdisabledtoiletsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_locationofdisabledtoiletsNull()
            Me(Me.tablelead_xtra.obsolete_locationofdisabledtoiletsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssuggestednoofchairsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.suggestednoofchairsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsuggestednoofchairsNull()
            Me(Me.tablelead_xtra.suggestednoofchairsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_materialsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_materialsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_materialsNull()
            Me(Me.tablelead_xtra.obsolete_materialsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_lessdiscountNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_lessdiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_lessdiscountNull()
            Me(Me.tablelead_xtra.obsolete_lessdiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_subtotalNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_subtotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_subtotalNull()
            Me(Me.tablelead_xtra.obsolete_subtotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_postageandpackagingNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_postageandpackagingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_postageandpackagingNull()
            Me(Me.tablelead_xtra.obsolete_postageandpackagingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_labourNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_labourColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_labourNull()
            Me(Me.tablelead_xtra.obsolete_labourColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_expensesNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_expensesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_expensesNull()
            Me(Me.tablelead_xtra.obsolete_expensesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_costtotalNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_costtotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_costtotalNull()
            Me(Me.tablelead_xtra.obsolete_costtotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_vatNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_vatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_vatNull()
            Me(Me.tablelead_xtra.obsolete_vatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isobsolete_grandtotalNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.obsolete_grandtotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setobsolete_grandtotalNull()
            Me(Me.tablelead_xtra.obsolete_grandtotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscommentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcommentsNull()
            Me(Me.tablelead_xtra.commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrepinitialsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.repinitialsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrepinitialsNull()
            Me(Me.tablelead_xtra.repinitialsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmailinglistdateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.mailinglistdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmailinglistdateNull()
            Me(Me.tablelead_xtra.mailinglistdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdemorequestedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.demorequestedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdemorequestedNull()
            Me(Me.tablelead_xtra.demorequestedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprojectnoNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.projectnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprojectnoNull()
            Me(Me.tablelead_xtra.projectnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdemoarrangedbyNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.demoarrangedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdemoarrangedbyNull()
            Me(Me.tablelead_xtra.demoarrangedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isorder_noNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.order_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setorder_noNull()
            Me(Me.tablelead_xtra.order_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscontract_chair_noNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.contract_chair_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcontract_chair_noNull()
            Me(Me.tablelead_xtra.contract_chair_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isadditional_notesNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.additional_notesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setadditional_notesNull()
            Me(Me.tablelead_xtra.additional_notesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isadd_chair_inv_noNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.add_chair_inv_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setadd_chair_inv_noNull()
            Me(Me.tablelead_xtra.add_chair_inv_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdate_executedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.date_executedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdate_executedNull()
            Me(Me.tablelead_xtra.date_executedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdate_cancelledNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.date_cancelledColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdate_cancelledNull()
            Me(Me.tablelead_xtra.date_cancelledColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ishistory_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.history_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Sethistory_dateNull()
            Me(Me.tablelead_xtra.history_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isrenewal_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.renewal_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setrenewal_dateNull()
            Me(Me.tablelead_xtra.renewal_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdate_trainedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.date_trainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdate_trainedNull()
            Me(Me.tablelead_xtra.date_trainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istraining_doneNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.training_doneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settraining_doneNull()
            Me(Me.tablelead_xtra.training_doneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istime_inNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.time_inColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settime_inNull()
            Me(Me.tablelead_xtra.time_inColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istime_outNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.time_outColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settime_outNull()
            Me(Me.tablelead_xtra.time_outColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdurationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.durationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdurationNull()
            Me(Me.tablelead_xtra.durationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isevac_chair_ref_noNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.evac_chair_ref_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setevac_chair_ref_noNull()
            Me(Me.tablelead_xtra.evac_chair_ref_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isadditional_notes2Null() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.additional_notes2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setadditional_notes2Null()
            Me(Me.tablelead_xtra.additional_notes2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isstart_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.start_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setstart_dateNull()
            Me(Me.tablelead_xtra.start_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscompletion_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.completion_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcompletion_dateNull()
            Me(Me.tablelead_xtra.completion_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscontract_worksheet_noNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.contract_worksheet_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcontract_worksheet_noNull()
            Me(Me.tablelead_xtra.contract_worksheet_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isno_of_chairsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.no_of_chairsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setno_of_chairsNull()
            Me(Me.tablelead_xtra.no_of_chairsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isannual_costNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.annual_costColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setannual_costNull()
            Me(Me.tablelead_xtra.annual_costColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscustomer_order_noNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.customer_order_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcustomer_order_noNull()
            Me(Me.tablelead_xtra.customer_order_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsquotepadrefNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.quotepadrefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetquotepadrefNull()
            Me(Me.tablelead_xtra.quotepadrefColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdoc_noNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.doc_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdoc_noNull()
            Me(Me.tablelead_xtra.doc_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismaster_leadnoNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.master_leadnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmaster_leadnoNull()
            Me(Me.tablelead_xtra.master_leadnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair1_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair1_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair1_locationNull()
            Me(Me.tablelead_xtra.project_stair1_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair1_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair1_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair1_finishNull()
            Me(Me.tablelead_xtra.project_stair1_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair1_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair1_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair1_angleNull()
            Me(Me.tablelead_xtra.project_stair1_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair1_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair1_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair1_commentsNull()
            Me(Me.tablelead_xtra.project_stair1_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair2_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair2_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair2_locationNull()
            Me(Me.tablelead_xtra.project_stair2_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair2_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair2_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair2_finishNull()
            Me(Me.tablelead_xtra.project_stair2_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair2_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair2_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair2_angleNull()
            Me(Me.tablelead_xtra.project_stair2_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair2_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair2_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair2_commentsNull()
            Me(Me.tablelead_xtra.project_stair2_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair3_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair3_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair3_locationNull()
            Me(Me.tablelead_xtra.project_stair3_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair3_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair3_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair3_finishNull()
            Me(Me.tablelead_xtra.project_stair3_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair3_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair3_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair3_angleNull()
            Me(Me.tablelead_xtra.project_stair3_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair3_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair3_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair3_commentsNull()
            Me(Me.tablelead_xtra.project_stair3_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair4_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair4_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair4_locationNull()
            Me(Me.tablelead_xtra.project_stair4_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair4_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair4_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair4_finishNull()
            Me(Me.tablelead_xtra.project_stair4_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair4_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair4_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair4_angleNull()
            Me(Me.tablelead_xtra.project_stair4_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair4_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair4_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair4_commentsNull()
            Me(Me.tablelead_xtra.project_stair4_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair5_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair5_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair5_locationNull()
            Me(Me.tablelead_xtra.project_stair5_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair5_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair5_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair5_finishNull()
            Me(Me.tablelead_xtra.project_stair5_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair5_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair5_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair5_angleNull()
            Me(Me.tablelead_xtra.project_stair5_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair5_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair5_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair5_commentsNull()
            Me(Me.tablelead_xtra.project_stair5_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair6_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair6_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair6_locationNull()
            Me(Me.tablelead_xtra.project_stair6_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair6_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair6_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair6_finishNull()
            Me(Me.tablelead_xtra.project_stair6_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair6_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair6_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair6_angleNull()
            Me(Me.tablelead_xtra.project_stair6_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair6_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair6_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair6_commentsNull()
            Me(Me.tablelead_xtra.project_stair6_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair7_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair7_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair7_locationNull()
            Me(Me.tablelead_xtra.project_stair7_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair7_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair7_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair7_finishNull()
            Me(Me.tablelead_xtra.project_stair7_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair7_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair7_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair7_angleNull()
            Me(Me.tablelead_xtra.project_stair7_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair7_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair7_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair7_commentsNull()
            Me(Me.tablelead_xtra.project_stair7_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair8_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair8_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair8_locationNull()
            Me(Me.tablelead_xtra.project_stair8_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair8_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair8_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair8_finishNull()
            Me(Me.tablelead_xtra.project_stair8_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair8_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair8_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair8_angleNull()
            Me(Me.tablelead_xtra.project_stair8_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair8_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair8_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair8_commentsNull()
            Me(Me.tablelead_xtra.project_stair8_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair9_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair9_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair9_locationNull()
            Me(Me.tablelead_xtra.project_stair9_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair9_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair9_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair9_finishNull()
            Me(Me.tablelead_xtra.project_stair9_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair9_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair9_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair9_angleNull()
            Me(Me.tablelead_xtra.project_stair9_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair9_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair9_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair9_commentsNull()
            Me(Me.tablelead_xtra.project_stair9_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair10_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair10_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair10_locationNull()
            Me(Me.tablelead_xtra.project_stair10_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair10_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair10_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair10_finishNull()
            Me(Me.tablelead_xtra.project_stair10_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair10_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair10_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair10_angleNull()
            Me(Me.tablelead_xtra.project_stair10_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair10_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair10_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair10_commentsNull()
            Me(Me.tablelead_xtra.project_stair10_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair11_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair11_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair11_locationNull()
            Me(Me.tablelead_xtra.project_stair11_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair11_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair11_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair11_finishNull()
            Me(Me.tablelead_xtra.project_stair11_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair11_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair11_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair11_angleNull()
            Me(Me.tablelead_xtra.project_stair11_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair11_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair11_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair11_commentsNull()
            Me(Me.tablelead_xtra.project_stair11_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair12_locationNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair12_locationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair12_locationNull()
            Me(Me.tablelead_xtra.project_stair12_locationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair12_finishNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair12_finishColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair12_finishNull()
            Me(Me.tablelead_xtra.project_stair12_finishColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair12_angleNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair12_angleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair12_angleNull()
            Me(Me.tablelead_xtra.project_stair12_angleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_stair12_commentsNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_stair12_commentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_stair12_commentsNull()
            Me(Me.tablelead_xtra.project_stair12_commentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_external_checksNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_external_checksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_external_checksNull()
            Me(Me.tablelead_xtra.project_external_checksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_demo_declinedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_demo_declinedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_demo_declinedNull()
            Me(Me.tablelead_xtra.project_demo_declinedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isproject_all_staircases_evaluatedNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.project_all_staircases_evaluatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setproject_all_staircases_evaluatedNull()
            Me(Me.tablelead_xtra.project_all_staircases_evaluatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparaid_estimated_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.paraid_estimated_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparaid_estimated_dateNull()
            Me(Me.tablelead_xtra.paraid_estimated_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparaid_drawings_approved_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.paraid_drawings_approved_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparaid_drawings_approved_dateNull()
            Me(Me.tablelead_xtra.paraid_drawings_approved_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparaid_planned_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.paraid_planned_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparaid_planned_dateNull()
            Me(Me.tablelead_xtra.paraid_planned_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isparaid_despatched_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.paraid_despatched_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setparaid_despatched_dateNull()
            Me(Me.tablelead_xtra.paraid_despatched_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_typeNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dd_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_typeNull()
            Me(Me.tablelead_xtra.dd_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_amountNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dd_amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_amountNull()
            Me(Me.tablelead_xtra.dd_amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_exportdateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dd_exportdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_exportdateNull()
            Me(Me.tablelead_xtra.dd_exportdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_invoice_addressNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dd_invoice_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_invoice_addressNull()
            Me(Me.tablelead_xtra.dd_invoice_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_paydateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dd_paydateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_paydateNull()
            Me(Me.tablelead_xtra.dd_paydateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_lastrejecteddateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dd_lastrejecteddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_lastrejecteddateNull()
            Me(Me.tablelead_xtra.dd_lastrejecteddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdd_notesNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.dd_notesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdd_notesNull()
            Me(Me.tablelead_xtra.dd_notesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Issuggested_service_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.suggested_service_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setsuggested_service_dateNull()
            Me(Me.tablelead_xtra.suggested_service_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isapppointment_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.apppointment_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setapppointment_dateNull()
            Me(Me.tablelead_xtra.apppointment_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isonhold_letterNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.onhold_letterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setonhold_letterNull()
            Me(Me.tablelead_xtra.onhold_letterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isonhold_dateNull() As Boolean
            Return Me.IsNull(Me.tablelead_xtra.onhold_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setonhold_dateNull()
            Me(Me.tablelead_xtra.onhold_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class userRow
        Inherits Global.System.Data.DataRow
        
        Private tableuser As userDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableuser = CType(Me.Table,userDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property usercode() As String
            Get
                Return CType(Me(Me.tableuser.usercodeColumn),String)
            End Get
            Set
                Me(Me.tableuser.usercodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property username() As String
            Get
                Return CType(Me(Me.tableuser.usernameColumn),String)
            End Get
            Set
                Me(Me.tableuser.usernameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property emailaddr() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.emailaddrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'emailaddr' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.emailaddrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableuser.sequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sequence' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.sequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property obsolete() As Short
            Get
                Try 
                    Return CType(Me(Me.tableuser.obsoleteColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'obsolete' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.obsoleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dictionary() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.dictionaryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dictionary' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.dictionaryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctmgr() As Short
            Get
                Try 
                    Return CType(Me(Me.tableuser.acctmgrColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctmgr' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.acctmgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property printlists() As Short
            Get
                Try 
                    Return CType(Me(Me.tableuser.printlistsColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printlists' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.printlistsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property printdetails() As Short
            Get
                Try 
                    Return CType(Me(Me.tableuser.printdetailsColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printdetails' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.printdetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property group() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.groupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'group' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.groupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property epros_password() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.epros_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'epros_password' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.epros_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property epros_By_AcctMgr() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.epros_By_AcctMgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'epros_By_AcctMgr' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.epros_By_AcctMgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property directphone() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.directphoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directphone' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.directphoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property directfax() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.directfaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'directfax' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.directfaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jobtitle() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.jobtitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jobtitle' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.jobtitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tableuser.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tableuser.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tableuser.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property firstlogin() As Date
            Get
                Try 
                    Return CType(Me(Me.tableuser.firstloginColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'firstlogin' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.firstloginColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastlogin() As Date
            Get
                Try 
                    Return CType(Me(Me.tableuser.lastloginColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastlogin' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.lastloginColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mme_userid() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.mme_useridColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mme_userid' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.mme_useridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mme_password() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.mme_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mme_password' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.mme_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contno() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableuser.contnoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contno' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.contnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property epros_login() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableuser.epros_loginColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'epros_login' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.epros_loginColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property loginmethod() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.loginmethodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'loginmethod' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.loginmethodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property preventexternalaccess() As Short
            Get
                Try 
                    Return CType(Me(Me.tableuser.preventexternalaccessColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'preventexternalaccess' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.preventexternalaccessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property wow_userid() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.wow_useridColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wow_userid' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.wow_useridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property wow_password() As String
            Get
                Try 
                    Return CType(Me(Me.tableuser.wow_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wow_password' in table 'user' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableuser.wow_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsemailaddrNull() As Boolean
            Return Me.IsNull(Me.tableuser.emailaddrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetemailaddrNull()
            Me(Me.tableuser.emailaddrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssequenceNull() As Boolean
            Return Me.IsNull(Me.tableuser.sequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsequenceNull()
            Me(Me.tableuser.sequenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsobsoleteNull() As Boolean
            Return Me.IsNull(Me.tableuser.obsoleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetobsoleteNull()
            Me(Me.tableuser.obsoleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdictionaryNull() As Boolean
            Return Me.IsNull(Me.tableuser.dictionaryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdictionaryNull()
            Me(Me.tableuser.dictionaryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctmgrNull() As Boolean
            Return Me.IsNull(Me.tableuser.acctmgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctmgrNull()
            Me(Me.tableuser.acctmgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprintlistsNull() As Boolean
            Return Me.IsNull(Me.tableuser.printlistsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprintlistsNull()
            Me(Me.tableuser.printlistsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprintdetailsNull() As Boolean
            Return Me.IsNull(Me.tableuser.printdetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprintdetailsNull()
            Me(Me.tableuser.printdetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgroupNull() As Boolean
            Return Me.IsNull(Me.tableuser.groupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgroupNull()
            Me(Me.tableuser.groupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isepros_passwordNull() As Boolean
            Return Me.IsNull(Me.tableuser.epros_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setepros_passwordNull()
            Me(Me.tableuser.epros_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isepros_By_AcctMgrNull() As Boolean
            Return Me.IsNull(Me.tableuser.epros_By_AcctMgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setepros_By_AcctMgrNull()
            Me(Me.tableuser.epros_By_AcctMgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdirectphoneNull() As Boolean
            Return Me.IsNull(Me.tableuser.directphoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdirectphoneNull()
            Me(Me.tableuser.directphoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdirectfaxNull() As Boolean
            Return Me.IsNull(Me.tableuser.directfaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdirectfaxNull()
            Me(Me.tableuser.directfaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjobtitleNull() As Boolean
            Return Me.IsNull(Me.tableuser.jobtitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjobtitleNull()
            Me(Me.tableuser.jobtitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tableuser.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tableuser.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tableuser.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tableuser.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tableuser.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tableuser.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tableuser.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tableuser.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tableuser.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tableuser.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfirstloginNull() As Boolean
            Return Me.IsNull(Me.tableuser.firstloginColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfirstloginNull()
            Me(Me.tableuser.firstloginColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastloginNull() As Boolean
            Return Me.IsNull(Me.tableuser.lastloginColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastloginNull()
            Me(Me.tableuser.lastloginColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismme_useridNull() As Boolean
            Return Me.IsNull(Me.tableuser.mme_useridColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmme_useridNull()
            Me(Me.tableuser.mme_useridColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismme_passwordNull() As Boolean
            Return Me.IsNull(Me.tableuser.mme_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmme_passwordNull()
            Me(Me.tableuser.mme_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscontnoNull() As Boolean
            Return Me.IsNull(Me.tableuser.contnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcontnoNull()
            Me(Me.tableuser.contnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isepros_loginNull() As Boolean
            Return Me.IsNull(Me.tableuser.epros_loginColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setepros_loginNull()
            Me(Me.tableuser.epros_loginColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsloginmethodNull() As Boolean
            Return Me.IsNull(Me.tableuser.loginmethodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetloginmethodNull()
            Me(Me.tableuser.loginmethodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspreventexternalaccessNull() As Boolean
            Return Me.IsNull(Me.tableuser.preventexternalaccessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpreventexternalaccessNull()
            Me(Me.tableuser.preventexternalaccessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iswow_useridNull() As Boolean
            Return Me.IsNull(Me.tableuser.wow_useridColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setwow_useridNull()
            Me(Me.tableuser.wow_useridColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iswow_passwordNull() As Boolean
            Return Me.IsNull(Me.tableuser.wow_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setwow_passwordNull()
            Me(Me.tableuser.wow_passwordColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class engineer_locationsRow
        Inherits Global.System.Data.DataRow
        
        Private tableengineer_locations As engineer_locationsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableengineer_locations = CType(Me.Table,engineer_locationsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineerno() As Integer
            Get
                Return CType(Me(Me.tableengineer_locations.engineernoColumn),Integer)
            End Get
            Set
                Me(Me.tableengineer_locations.engineernoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineer() As String
            Get
                Try 
                    Return CType(Me(Me.tableengineer_locations.engineerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'engineer' in table 'engineer_locations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableengineer_locations.engineerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineer_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableengineer_locations.engineer_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'engineer_postcode' in table 'engineer_locations' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableengineer_locations.engineer_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineer_longitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableengineer_locations.engineer_longitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'engineer_longitude' in table 'engineer_locations' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableengineer_locations.engineer_longitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineer_latitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableengineer_locations.engineer_latitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'engineer_latitude' in table 'engineer_locations' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableengineer_locations.engineer_latitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineer_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableengineer_locations.engineer_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'engineer_name' in table 'engineer_locations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableengineer_locations.engineer_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property engineer_colour() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableengineer_locations.engineer_colourColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'engineer_colour' in table 'engineer_locations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableengineer_locations.engineer_colourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsengineerNull() As Boolean
            Return Me.IsNull(Me.tableengineer_locations.engineerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetengineerNull()
            Me(Me.tableengineer_locations.engineerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isengineer_postcodeNull() As Boolean
            Return Me.IsNull(Me.tableengineer_locations.engineer_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setengineer_postcodeNull()
            Me(Me.tableengineer_locations.engineer_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isengineer_longitudeNull() As Boolean
            Return Me.IsNull(Me.tableengineer_locations.engineer_longitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setengineer_longitudeNull()
            Me(Me.tableengineer_locations.engineer_longitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isengineer_latitudeNull() As Boolean
            Return Me.IsNull(Me.tableengineer_locations.engineer_latitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setengineer_latitudeNull()
            Me(Me.tableengineer_locations.engineer_latitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isengineer_nameNull() As Boolean
            Return Me.IsNull(Me.tableengineer_locations.engineer_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setengineer_nameNull()
            Me(Me.tableengineer_locations.engineer_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isengineer_colourNull() As Boolean
            Return Me.IsNull(Me.tableengineer_locations.engineer_colourColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setengineer_colourNull()
            Me(Me.tableengineer_locations.engineer_colourColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class divisionaddressRow
        Inherits Global.System.Data.DataRow
        
        Private tabledivisionaddress As divisionaddressDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledivisionaddress = CType(Me.Table,divisionaddressDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addrno() As Integer
            Get
                Return CType(Me(Me.tabledivisionaddress.addrnoColumn),Integer)
            End Get
            Set
                Me(Me.tabledivisionaddress.addrnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address1() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.address1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address1' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.address1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address2() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.address2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address2' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.address2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address3() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.address3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address3' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.address3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property country() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'country' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'postcode' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property regionno() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.regionnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'regionno' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.regionnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property postcdtype() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.postcdtypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'postcdtype' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.postcdtypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address4() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.address4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address4' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.address4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'divisionaddress' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property outcode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.outcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'outcode' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.outcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property longitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.longitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'longitude' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.longitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property latitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledivisionaddress.latitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'latitude' in table 'divisionaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledivisionaddress.latitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress1Null() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.address1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress1Null()
            Me(Me.tabledivisionaddress.address1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress2Null() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.address2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress2Null()
            Me(Me.tabledivisionaddress.address2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress3Null() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.address3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress3Null()
            Me(Me.tabledivisionaddress.address3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscountryNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcountryNull()
            Me(Me.tabledivisionaddress.countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspostcodeNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpostcodeNull()
            Me(Me.tabledivisionaddress.postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsregionnoNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.regionnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetregionnoNull()
            Me(Me.tabledivisionaddress.regionnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspostcdtypeNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.postcdtypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpostcdtypeNull()
            Me(Me.tabledivisionaddress.postcdtypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tabledivisionaddress.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress4Null() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.address4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress4Null()
            Me(Me.tabledivisionaddress.address4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tabledivisionaddress.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tabledivisionaddress.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tabledivisionaddress.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tabledivisionaddress.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tabledivisionaddress.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoutcodeNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.outcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoutcodeNull()
            Me(Me.tabledivisionaddress.outcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslongitudeNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.longitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlongitudeNull()
            Me(Me.tabledivisionaddress.longitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslatitudeNull() As Boolean
            Return Me.IsNull(Me.tabledivisionaddress.latitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlatitudeNull()
            Me(Me.tabledivisionaddress.latitudeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class companyRow
        Inherits Global.System.Data.DataRow
        
        Private tablecompany As companyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecompany = CType(Me.Table,companyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property compno() As Integer
            Get
                Return CType(Me(Me.tablecompany.compnoColumn),Integer)
            End Get
            Set
                Me(Me.tablecompany.compnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property compname() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.compnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compname' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.compnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property comptypecd() As String
            Get
                Return CType(Me(Me.tablecompany.comptypecdColumn),String)
            End Get
            Set
                Me(Me.tablecompany.comptypecdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property owner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'owner' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property compname_soundex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecompany.compname_soundexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'compname_soundex' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.compname_soundexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecompany.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecompany.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecompany.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatusFlag() As String
            Get
                Return CType(Me(Me.tablecompany.StatusFlagColumn),String)
            End Get
            Set
                Me(Me.tablecompany.StatusFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bgid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecompany.bgidColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bgid' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.bgidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sys_a_objects_key() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.sys_a_objects_keyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sys_a_objects_key' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.sys_a_objects_keyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property source() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.sourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'source' in table 'company' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.sourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscompnameNull() As Boolean
            Return Me.IsNull(Me.tablecompany.compnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcompnameNull()
            Me(Me.tablecompany.compnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsownerNull() As Boolean
            Return Me.IsNull(Me.tablecompany.ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetownerNull()
            Me(Me.tablecompany.ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscompname_soundexNull() As Boolean
            Return Me.IsNull(Me.tablecompany.compname_soundexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcompname_soundexNull()
            Me(Me.tablecompany.compname_soundexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tablecompany.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tablecompany.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tablecompany.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tablecompany.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecompany.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tablecompany.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tablecompany.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tablecompany.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecompany.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tablecompany.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbgidNull() As Boolean
            Return Me.IsNull(Me.tablecompany.bgidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbgidNull()
            Me(Me.tablecompany.bgidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Issys_a_objects_keyNull() As Boolean
            Return Me.IsNull(Me.tablecompany.sys_a_objects_keyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setsys_a_objects_keyNull()
            Me(Me.tablecompany.sys_a_objects_keyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssourceNull() As Boolean
            Return Me.IsNull(Me.tablecompany.sourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsourceNull()
            Me(Me.tablecompany.sourceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class contactaddressRow
        Inherits Global.System.Data.DataRow
        
        Private tablecontactaddress As contactaddressDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecontactaddress = CType(Me.Table,contactaddressDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addrno() As Integer
            Get
                Return CType(Me(Me.tablecontactaddress.addrnoColumn),Integer)
            End Get
            Set
                Me(Me.tablecontactaddress.addrnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address1() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.address1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address1' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.address1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address2() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.address2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address2' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.address2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address3() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.address3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address3' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.address3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property country() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.countryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'country' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.countryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'postcode' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property regionno() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.regionnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'regionno' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.regionnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property postcdtype() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.postcdtypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'postcdtype' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.postcdtypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property account_mgr() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.account_mgrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'account_mgr' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.account_mgrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property address4() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.address4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'address4' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.address4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedtimestamp() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.lastupdatedtimestampColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedtimestamp' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.lastupdatedtimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.lastupdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdated' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.lastupdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lastupdatedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.lastupdatedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lastupdatedby' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.lastupdatedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property created() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.createdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.createdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property createdby() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.createdbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'createdby' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.createdbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property outcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.outcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'outcode' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.outcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property longitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.longitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'longitude' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.longitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property latitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecontactaddress.latitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'latitude' in table 'contactaddress' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecontactaddress.latitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress1Null() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.address1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress1Null()
            Me(Me.tablecontactaddress.address1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress2Null() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.address2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress2Null()
            Me(Me.tablecontactaddress.address2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress3Null() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.address3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress3Null()
            Me(Me.tablecontactaddress.address3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscountryNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.countryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcountryNull()
            Me(Me.tablecontactaddress.countryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspostcodeNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpostcodeNull()
            Me(Me.tablecontactaddress.postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsregionnoNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.regionnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetregionnoNull()
            Me(Me.tablecontactaddress.regionnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspostcdtypeNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.postcdtypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpostcdtypeNull()
            Me(Me.tablecontactaddress.postcdtypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaccount_mgrNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.account_mgrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaccount_mgrNull()
            Me(Me.tablecontactaddress.account_mgrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isaddress4Null() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.address4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setaddress4Null()
            Me(Me.tablecontactaddress.address4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedtimestampNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.lastupdatedtimestampColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedtimestampNull()
            Me(Me.tablecontactaddress.lastupdatedtimestampColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.lastupdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedNull()
            Me(Me.tablecontactaddress.lastupdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslastupdatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.lastupdatedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlastupdatedbyNull()
            Me(Me.tablecontactaddress.lastupdatedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.createdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedNull()
            Me(Me.tablecontactaddress.createdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscreatedbyNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.createdbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcreatedbyNull()
            Me(Me.tablecontactaddress.createdbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoutcodeNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.outcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoutcodeNull()
            Me(Me.tablecontactaddress.outcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslongitudeNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.longitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlongitudeNull()
            Me(Me.tablecontactaddress.longitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslatitudeNull() As Boolean
            Return Me.IsNull(Me.tablecontactaddress.latitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlatitudeNull()
            Me(Me.tablecontactaddress.latitudeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class central_diaryRow
        Inherits Global.System.Data.DataRow
        
        Private tablecentral_diary As central_diaryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecentral_diary = CType(Me.Table,central_diaryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppType() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.AppTypeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppType' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.AppTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Leadno() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.LeadnoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Leadno' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.LeadnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_of_chairs() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.no_of_chairsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'no_of_chairs' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.no_of_chairsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EndDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.EndDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndDate' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.EndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AllDay() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.AllDayColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AllDay' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.AllDayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Subject() As String
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.SubjectColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Subject' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.SubjectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppLocation() As String
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.AppLocationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppLocation' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.AppLocationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.AppDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppDescription' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.AppDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.AppStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppStatus' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.AppStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Label() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.LabelColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Label' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.LabelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReminderInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.ReminderInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReminderInfo' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.ReminderInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecurrenceInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.RecurrenceInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecurrenceInfo' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.RecurrenceInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property central_diaryno() As Integer
            Get
                Return CType(Me(Me.tablecentral_diary.central_diarynoColumn),Integer)
            End Get
            Set
                Me(Me.tablecentral_diary.central_diarynoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property confirmed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.confirmedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'confirmed' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.confirmedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property longitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.longitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'longitude' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.longitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property latitude() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.latitudeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'latitude' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.latitudeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OutlookEntryID() As String
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.OutlookEntryIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OutlookEntryID' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.OutlookEntryIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BookedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.BookedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookedDate' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.BookedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecentral_diary.UserIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserId' in table 'central_diary' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecentral_diary.UserIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppTypeNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.AppTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppTypeNull()
            Me(Me.tablecentral_diary.AppTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLeadnoNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.LeadnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLeadnoNull()
            Me(Me.tablecentral_diary.LeadnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isno_of_chairsNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.no_of_chairsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setno_of_chairsNull()
            Me(Me.tablecentral_diary.no_of_chairsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEndDateNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.EndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEndDateNull()
            Me(Me.tablecentral_diary.EndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAllDayNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.AllDayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAllDayNull()
            Me(Me.tablecentral_diary.AllDayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubjectNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.SubjectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubjectNull()
            Me(Me.tablecentral_diary.SubjectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppLocationNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.AppLocationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppLocationNull()
            Me(Me.tablecentral_diary.AppLocationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppDescriptionNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.AppDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppDescriptionNull()
            Me(Me.tablecentral_diary.AppDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppStatusNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.AppStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppStatusNull()
            Me(Me.tablecentral_diary.AppStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLabelNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.LabelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLabelNull()
            Me(Me.tablecentral_diary.LabelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReminderInfoNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.ReminderInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReminderInfoNull()
            Me(Me.tablecentral_diary.ReminderInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRecurrenceInfoNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.RecurrenceInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRecurrenceInfoNull()
            Me(Me.tablecentral_diary.RecurrenceInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconfirmedNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.confirmedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconfirmedNull()
            Me(Me.tablecentral_diary.confirmedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslongitudeNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.longitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlongitudeNull()
            Me(Me.tablecentral_diary.longitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslatitudeNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.latitudeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlatitudeNull()
            Me(Me.tablecentral_diary.latitudeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOutlookEntryIDNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.OutlookEntryIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOutlookEntryIDNull()
            Me(Me.tablecentral_diary.OutlookEntryIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBookedDateNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.BookedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBookedDateNull()
            Me(Me.tablecentral_diary.BookedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserIdNull() As Boolean
            Return Me.IsNull(Me.tablecentral_diary.UserIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserIdNull()
            Me(Me.tablecentral_diary.UserIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class contactRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As contactRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As contactRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As contactRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class contact_xtraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As contact_xtraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As contact_xtraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As contact_xtraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class divisionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As divisionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As divisionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As divisionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class division_xtraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As division_xtraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As division_xtraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As division_xtraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class leadRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As leadRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As leadRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As leadRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class lead_xtraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As lead_xtraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As lead_xtraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As lead_xtraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class userRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As userRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As userRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As userRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class engineer_locationsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As engineer_locationsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As engineer_locationsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As engineer_locationsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class divisionaddressRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As divisionaddressRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As divisionaddressRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As divisionaddressRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class companyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As companyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As companyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As companyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class contactaddressRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As contactaddressRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As contactaddressRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As contactaddressRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class central_diaryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As central_diaryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As central_diaryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As central_diaryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class contactTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "contact"
            tableMapping.ColumnMappings.Add("contno", "contno")
            tableMapping.ColumnMappings.Add("divno", "divno")
            tableMapping.ColumnMappings.Add("surname", "surname")
            tableMapping.ColumnMappings.Add("forename", "forename")
            tableMapping.ColumnMappings.Add("prefdname", "prefdname")
            tableMapping.ColumnMappings.Add("title", "title")
            tableMapping.ColumnMappings.Add("salutation", "salutation")
            tableMapping.ColumnMappings.Add("addrno", "addrno")
            tableMapping.ColumnMappings.Add("email", "email")
            tableMapping.ColumnMappings.Add("notepad", "notepad")
            tableMapping.ColumnMappings.Add("jobtitle", "jobtitle")
            tableMapping.ColumnMappings.Add("rolecd", "rolecd")
            tableMapping.ColumnMappings.Add("primephone", "primephone")
            tableMapping.ColumnMappings.Add("primefax", "primefax")
            tableMapping.ColumnMappings.Add("mailflag", "mailflag")
            tableMapping.ColumnMappings.Add("createdate", "createdate")
            tableMapping.ColumnMappings.Add("swapmailfg", "swapmailfg")
            tableMapping.ColumnMappings.Add("memolines", "memolines")
            tableMapping.ColumnMappings.Add("lastmemodt", "lastmemodt")
            tableMapping.ColumnMappings.Add("source", "source")
            tableMapping.ColumnMappings.Add("faxflag", "faxflag")
            tableMapping.ColumnMappings.Add("surname_soundex", "surname_soundex")
            tableMapping.ColumnMappings.Add("forename_soundex", "forename_soundex")
            tableMapping.ColumnMappings.Add("notepad_temp", "notepad_temp")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("spokecd", "spokecd")
            tableMapping.ColumnMappings.Add("spokedate", "spokedate")
            tableMapping.ColumnMappings.Add("spoketime", "spoketime")
            tableMapping.ColumnMappings.Add("secretaryname", "secretaryname")
            tableMapping.ColumnMappings.Add("secretaryphone", "secretaryphone")
            tableMapping.ColumnMappings.Add("secretaryemail", "secretaryemail")
            tableMapping.ColumnMappings.Add("department", "department")
            tableMapping.ColumnMappings.Add("emailflag", "emailflag")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("StatusFlag", "StatusFlag")
            tableMapping.ColumnMappings.Add("bgid", "bgid")
            tableMapping.ColumnMappings.Add("sys_a_objects_key", "sys_a_objects_key")
            tableMapping.ColumnMappings.Add("emailbounced", "emailbounced")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""contact"" (""contno"", ""divno"", ""surname"", ""forename"", ""prefdname"& _ 
                """, ""title"", ""salutation"", ""addrno"", ""email"", ""notepad"", ""jobtitle"", ""rolecd"", ""p"& _ 
                "rimephone"", ""primefax"", ""mailflag"", ""createdate"", ""swapmailfg"", ""memolines"", ""la"& _ 
                "stmemodt"", ""source"", ""faxflag"", ""surname_soundex"", ""forename_soundex"", ""notepad_"& _ 
                "temp"", ""account_mgr"", ""spokecd"", ""spokedate"", ""spoketime"", ""secretaryname"", ""sec"& _ 
                "retaryphone"", ""secretaryemail"", ""department"", ""emailflag"", ""lastupdatedtimestamp"& _ 
                """, ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""StatusFlag"", ""bgid"","& _ 
                " ""sys_a_objects_key"", ""emailbounced"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "contno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("divno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "divno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("surname", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "surname", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("forename", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "forename", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("prefdname", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "prefdname", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("title", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "title", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("salutation", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "salutation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("addrno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "addrno", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("email", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "email", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("notepad", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "notepad", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("jobtitle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "jobtitle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("rolecd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "rolecd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("primephone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "primephone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("primefax", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "primefax", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("mailflag", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "mailflag", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "createdate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("swapmailfg", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "swapmailfg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("memolines", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "memolines", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastmemodt", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "lastmemodt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("source", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "source", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("faxflag", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "faxflag", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("surname_soundex", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "surname_soundex", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("forename_soundex", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "forename_soundex", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("notepad_temp", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "notepad_temp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spokecd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "spokecd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spokedate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "spokedate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spoketime", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "spoketime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("secretaryname", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "secretaryname", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("secretaryphone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "secretaryphone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("secretaryemail", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "secretaryemail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("department", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "department", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("emailflag", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "emailflag", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "created", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "createdby", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("StatusFlag", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "StatusFlag", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("bgid", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "bgid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sys_a_objects_key", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "sys_a_objects_key", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("emailbounced", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "emailbounced", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""contno"", ""divno"", ""surname"", ""forename"", ""prefdname"", ""title"", ""salutatio" & _
                "n"", ""addrno"", ""email"", ""notepad"", ""jobtitle"", ""rolecd"", ""primephone"", ""primefax""" & _
                ", ""mailflag"", ""createdate"", ""swapmailfg"", ""memolines"", ""lastmemodt"", ""source"", """ & _
                "faxflag"", ""surname_soundex"", ""forename_soundex"", ""notepad_temp"", ""account_mgr"", " & _
                """spokecd"", ""spokedate"", ""spoketime"", ""secretaryname"", ""secretaryphone"", ""secreta" & _
                "ryemail"", ""department"", ""emailflag"", ""lastupdatedtimestamp"", ""lastupdated"", ""las" & _
                "tupdatedby"", ""created"", ""createdby"", ""StatusFlag"", ""bgid"", ""sys_a_objects_key"", " & _
                """emailbounced"" FROM ""DBA"".""contact"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.contactDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.contactDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.contactDataTable = New DataSet1.contactDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.contactDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "contact")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal contno As Integer, _
                    ByVal divno As Integer, _
                    ByVal surname As String, _
                    ByVal forename As String, _
                    ByVal prefdname As String, _
                    ByVal title As String, _
                    ByVal salutation As String, _
                    ByVal addrno As Integer, _
                    ByVal email As String, _
                    ByVal notepad As String, _
                    ByVal jobtitle As String, _
                    ByVal rolecd As String, _
                    ByVal primephone As String, _
                    ByVal primefax As String, _
                    ByVal mailflag As Short, _
                    ByVal createdate As Date, _
                    ByVal swapmailfg As Short, _
                    ByVal memolines As Integer, _
                    ByVal lastmemodt As Date, _
                    ByVal source As String, _
                    ByVal faxflag As Short, _
                    ByVal surname_soundex As Integer, _
                    ByVal forename_soundex As Integer, _
                    ByVal notepad_temp As String, _
                    ByVal account_mgr As String, _
                    ByVal spokecd As String, _
                    ByVal spokedate As Date, _
                    ByVal spoketime As Date, _
                    ByVal secretaryname As String, _
                    ByVal secretaryphone As String, _
                    ByVal secretaryemail As String, _
                    ByVal department As String, _
                    ByVal emailflag As Short, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal createdby As String, _
                    ByVal StatusFlag As String, _
                    ByVal bgid As String, _
                    ByVal sys_a_objects_key As String, _
                    ByVal emailbounced As Short) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(contno, Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(divno, Integer)
            If (surname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("surname")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(surname, String)
            End If
            If (forename Is Nothing) Then
                Throw New Global.System.ArgumentNullException("forename")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(forename, String)
            End If
            If (prefdname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("prefdname")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(prefdname, String)
            End If
            If (title Is Nothing) Then
                Throw New Global.System.ArgumentNullException("title")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(title, String)
            End If
            If (salutation Is Nothing) Then
                Throw New Global.System.ArgumentNullException("salutation")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(salutation, String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(addrno, Integer)
            If (email Is Nothing) Then
                Throw New Global.System.ArgumentNullException("email")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(email, String)
            End If
            If (notepad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notepad")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(notepad, String)
            End If
            If (jobtitle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("jobtitle")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(jobtitle, String)
            End If
            If (rolecd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("rolecd")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(rolecd, String)
            End If
            If (primephone Is Nothing) Then
                Throw New Global.System.ArgumentNullException("primephone")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(primephone, String)
            End If
            If (primefax Is Nothing) Then
                Throw New Global.System.ArgumentNullException("primefax")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(primefax, String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(mailflag, Short)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(createdate, Date)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(swapmailfg, Short)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(memolines, Integer)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(lastmemodt, Date)
            If (source Is Nothing) Then
                Throw New Global.System.ArgumentNullException("source")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(source, String)
            End If
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(faxflag, Short)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(surname_soundex, Integer)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(forename_soundex, Integer)
            If (notepad_temp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notepad_temp")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(notepad_temp, String)
            End If
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(account_mgr, String)
            End If
            If (spokecd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("spokecd")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(spokecd, String)
            End If
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(spokedate, Date)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(spoketime, Date)
            If (secretaryname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("secretaryname")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(secretaryname, String)
            End If
            If (secretaryphone Is Nothing) Then
                Throw New Global.System.ArgumentNullException("secretaryphone")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(secretaryphone, String)
            End If
            If (secretaryemail Is Nothing) Then
                Throw New Global.System.ArgumentNullException("secretaryemail")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(secretaryemail, String)
            End If
            If (department Is Nothing) Then
                Throw New Global.System.ArgumentNullException("department")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(department, String)
            End If
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(emailflag, Short)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(createdby, String)
            End If
            If (StatusFlag Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StatusFlag")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(StatusFlag, String)
            End If
            If (bgid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("bgid")
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(bgid, String)
            End If
            If (sys_a_objects_key Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sys_a_objects_key")
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(sys_a_objects_key, String)
            End If
            Me.Adapter.InsertCommand.Parameters(41).Value = CType(emailbounced, Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class contact_xtraTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "contact_xtra"
            tableMapping.ColumnMappings.Add("contno", "contno")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("hold", "hold")
            tableMapping.ColumnMappings.Add("executed", "executed")
            tableMapping.ColumnMappings.Add("cancelled", "cancelled")
            tableMapping.ColumnMappings.Add("order_no", "order_no")
            tableMapping.ColumnMappings.Add("contract_chair_no", "contract_chair_no")
            tableMapping.ColumnMappings.Add("invoice_address", "invoice_address")
            tableMapping.ColumnMappings.Add("customer_code", "customer_code")
            tableMapping.ColumnMappings.Add("additional_notes", "additional_notes")
            tableMapping.ColumnMappings.Add("contract_contact_tel_no", "contract_contact_tel_no")
            tableMapping.ColumnMappings.Add("contract_contact_name", "contract_contact_name")
            tableMapping.ColumnMappings.Add("position", "position")
            tableMapping.ColumnMappings.Add("no_of_chairs", "no_of_chairs")
            tableMapping.ColumnMappings.Add("start_date", "start_date")
            tableMapping.ColumnMappings.Add("date_executed", "date_executed")
            tableMapping.ColumnMappings.Add("completion_date", "completion_date")
            tableMapping.ColumnMappings.Add("contract_worksheet_no", "contract_worksheet_no")
            tableMapping.ColumnMappings.Add("training_done", "training_done")
            tableMapping.ColumnMappings.Add("customer_order_no", "customer_order_no")
            tableMapping.ColumnMappings.Add("worksheet_contact_name", "worksheet_contact_name")
            tableMapping.ColumnMappings.Add("worksheet_contact_tel_no", "worksheet_contact_tel_no")
            tableMapping.ColumnMappings.Add("worksheet_worksheet_no", "worksheet_worksheet_no")
            tableMapping.ColumnMappings.Add("worksheet_enumber", "worksheet_enumber")
            tableMapping.ColumnMappings.Add("evac_chair_ref_no", "evac_chair_ref_no")
            tableMapping.ColumnMappings.Add("worksheet_chair_quantity", "worksheet_chair_quantity")
            tableMapping.ColumnMappings.Add("worksheet_date", "worksheet_date")
            tableMapping.ColumnMappings.Add("time_in", "time_in")
            tableMapping.ColumnMappings.Add("time_out", "time_out")
            tableMapping.ColumnMappings.Add("duration", "duration")
            tableMapping.ColumnMappings.Add("additional_chairs_invoice_no", "additional_chairs_invoice_no")
            tableMapping.ColumnMappings.Add("worksheet_no1", "worksheet_no1")
            tableMapping.ColumnMappings.Add("worksheet_no2", "worksheet_no2")
            tableMapping.ColumnMappings.Add("worksheet_no3", "worksheet_no3")
            tableMapping.ColumnMappings.Add("worksheet_no4", "worksheet_no4")
            tableMapping.ColumnMappings.Add("worksheet_no5", "worksheet_no5")
            tableMapping.ColumnMappings.Add("worksheet_no6", "worksheet_no6")
            tableMapping.ColumnMappings.Add("worksheet_no7", "worksheet_no7")
            tableMapping.ColumnMappings.Add("worksheet_no8", "worksheet_no8")
            tableMapping.ColumnMappings.Add("worksheet_no9", "worksheet_no9")
            tableMapping.ColumnMappings.Add("worksheet_no10", "worksheet_no10")
            tableMapping.ColumnMappings.Add("worksheet_no11", "worksheet_no11")
            tableMapping.ColumnMappings.Add("worksheet_no12", "worksheet_no12")
            tableMapping.ColumnMappings.Add("worksheet_no13", "worksheet_no13")
            tableMapping.ColumnMappings.Add("worksheet_no14", "worksheet_no14")
            tableMapping.ColumnMappings.Add("worksheet_no15", "worksheet_no15")
            tableMapping.ColumnMappings.Add("worksheet_no16", "worksheet_no16")
            tableMapping.ColumnMappings.Add("worksheet_enumber1", "worksheet_enumber1")
            tableMapping.ColumnMappings.Add("worksheet_enumber2", "worksheet_enumber2")
            tableMapping.ColumnMappings.Add("worksheet_enumber3", "worksheet_enumber3")
            tableMapping.ColumnMappings.Add("worksheet_enumber4", "worksheet_enumber4")
            tableMapping.ColumnMappings.Add("worksheet_enumber5", "worksheet_enumber5")
            tableMapping.ColumnMappings.Add("worksheet_enumber6", "worksheet_enumber6")
            tableMapping.ColumnMappings.Add("worksheet_enumber7", "worksheet_enumber7")
            tableMapping.ColumnMappings.Add("worksheet_enumber8", "worksheet_enumber8")
            tableMapping.ColumnMappings.Add("worksheet_enumber9", "worksheet_enumber9")
            tableMapping.ColumnMappings.Add("worksheet_enumber10", "worksheet_enumber10")
            tableMapping.ColumnMappings.Add("worksheet_enumber11", "worksheet_enumber11")
            tableMapping.ColumnMappings.Add("worksheet_enumber12", "worksheet_enumber12")
            tableMapping.ColumnMappings.Add("worksheet_enumber13", "worksheet_enumber13")
            tableMapping.ColumnMappings.Add("worksheet_enumber14", "worksheet_enumber14")
            tableMapping.ColumnMappings.Add("worksheet_enumber15", "worksheet_enumber15")
            tableMapping.ColumnMappings.Add("worksheet_enumber16", "worksheet_enumber16")
            tableMapping.ColumnMappings.Add("worksheet_fl_no1", "worksheet_fl_no1")
            tableMapping.ColumnMappings.Add("worksheet_fl_no2", "worksheet_fl_no2")
            tableMapping.ColumnMappings.Add("worksheet_fl_no3", "worksheet_fl_no3")
            tableMapping.ColumnMappings.Add("worksheet_fl_no4", "worksheet_fl_no4")
            tableMapping.ColumnMappings.Add("worksheet_fl_no5", "worksheet_fl_no5")
            tableMapping.ColumnMappings.Add("worksheet_fl_no6", "worksheet_fl_no6")
            tableMapping.ColumnMappings.Add("worksheet_fl_no7", "worksheet_fl_no7")
            tableMapping.ColumnMappings.Add("worksheet_fl_no8", "worksheet_fl_no8")
            tableMapping.ColumnMappings.Add("worksheet_fl_no9", "worksheet_fl_no9")
            tableMapping.ColumnMappings.Add("worksheet_fl_no10", "worksheet_fl_no10")
            tableMapping.ColumnMappings.Add("worksheet_fl_no11", "worksheet_fl_no11")
            tableMapping.ColumnMappings.Add("worksheet_fl_no12", "worksheet_fl_no12")
            tableMapping.ColumnMappings.Add("worksheet_fl_no13", "worksheet_fl_no13")
            tableMapping.ColumnMappings.Add("worksheet_fl_no14", "worksheet_fl_no14")
            tableMapping.ColumnMappings.Add("worksheet_fl_no15", "worksheet_fl_no15")
            tableMapping.ColumnMappings.Add("worksheet_fl_no16", "worksheet_fl_no16")
            tableMapping.ColumnMappings.Add("exact_location1", "exact_location1")
            tableMapping.ColumnMappings.Add("exact_location2", "exact_location2")
            tableMapping.ColumnMappings.Add("exact_location3", "exact_location3")
            tableMapping.ColumnMappings.Add("exact_location4", "exact_location4")
            tableMapping.ColumnMappings.Add("exact_location5", "exact_location5")
            tableMapping.ColumnMappings.Add("exact_location6", "exact_location6")
            tableMapping.ColumnMappings.Add("exact_location7", "exact_location7")
            tableMapping.ColumnMappings.Add("exact_location8", "exact_location8")
            tableMapping.ColumnMappings.Add("exact_location9", "exact_location9")
            tableMapping.ColumnMappings.Add("exact_location10", "exact_location10")
            tableMapping.ColumnMappings.Add("exact_location11", "exact_location11")
            tableMapping.ColumnMappings.Add("exact_location12", "exact_location12")
            tableMapping.ColumnMappings.Add("exact_location13", "exact_location13")
            tableMapping.ColumnMappings.Add("exact_location14", "exact_location14")
            tableMapping.ColumnMappings.Add("exact_location15", "exact_location15")
            tableMapping.ColumnMappings.Add("exact_location16", "exact_location16")
            tableMapping.ColumnMappings.Add("worksheet_comments1", "worksheet_comments1")
            tableMapping.ColumnMappings.Add("worksheet_comments2", "worksheet_comments2")
            tableMapping.ColumnMappings.Add("worksheet_comments3", "worksheet_comments3")
            tableMapping.ColumnMappings.Add("worksheet_comments4", "worksheet_comments4")
            tableMapping.ColumnMappings.Add("worksheet_comments5", "worksheet_comments5")
            tableMapping.ColumnMappings.Add("worksheet_comments6", "worksheet_comments6")
            tableMapping.ColumnMappings.Add("worksheet_comments7", "worksheet_comments7")
            tableMapping.ColumnMappings.Add("worksheet_comments8", "worksheet_comments8")
            tableMapping.ColumnMappings.Add("worksheet_comments9", "worksheet_comments9")
            tableMapping.ColumnMappings.Add("worksheet_comments10", "worksheet_comments10")
            tableMapping.ColumnMappings.Add("worksheet_comments11", "worksheet_comments11")
            tableMapping.ColumnMappings.Add("worksheet_comments12", "worksheet_comments12")
            tableMapping.ColumnMappings.Add("worksheet_comments13", "worksheet_comments13")
            tableMapping.ColumnMappings.Add("worksheet_comments14", "worksheet_comments14")
            tableMapping.ColumnMappings.Add("worksheet_comments15", "worksheet_comments15")
            tableMapping.ColumnMappings.Add("worksheet_comments16", "worksheet_comments16")
            tableMapping.ColumnMappings.Add("worksheet_ok1", "worksheet_ok1")
            tableMapping.ColumnMappings.Add("worksheet_ok2", "worksheet_ok2")
            tableMapping.ColumnMappings.Add("worksheet_ok3", "worksheet_ok3")
            tableMapping.ColumnMappings.Add("worksheet_ok4", "worksheet_ok4")
            tableMapping.ColumnMappings.Add("worksheet_ok5", "worksheet_ok5")
            tableMapping.ColumnMappings.Add("worksheet_ok6", "worksheet_ok6")
            tableMapping.ColumnMappings.Add("worksheet_ok7", "worksheet_ok7")
            tableMapping.ColumnMappings.Add("worksheet_ok8", "worksheet_ok8")
            tableMapping.ColumnMappings.Add("worksheet_ok9", "worksheet_ok9")
            tableMapping.ColumnMappings.Add("worksheet_ok10", "worksheet_ok10")
            tableMapping.ColumnMappings.Add("worksheet_ok11", "worksheet_ok11")
            tableMapping.ColumnMappings.Add("worksheet_ok12", "worksheet_ok12")
            tableMapping.ColumnMappings.Add("worksheet_ok13", "worksheet_ok13")
            tableMapping.ColumnMappings.Add("worksheet_ok14", "worksheet_ok14")
            tableMapping.ColumnMappings.Add("worksheet_ok15", "worksheet_ok15")
            tableMapping.ColumnMappings.Add("worksheet_ok16", "worksheet_ok16")
            tableMapping.ColumnMappings.Add("worksheet_tested1", "worksheet_tested1")
            tableMapping.ColumnMappings.Add("worksheet_tested2", "worksheet_tested2")
            tableMapping.ColumnMappings.Add("worksheet_tested3", "worksheet_tested3")
            tableMapping.ColumnMappings.Add("worksheet_tested4", "worksheet_tested4")
            tableMapping.ColumnMappings.Add("worksheet_tested5", "worksheet_tested5")
            tableMapping.ColumnMappings.Add("worksheet_tested6", "worksheet_tested6")
            tableMapping.ColumnMappings.Add("worksheet_tested7", "worksheet_tested7")
            tableMapping.ColumnMappings.Add("worksheet_tested8", "worksheet_tested8")
            tableMapping.ColumnMappings.Add("worksheet_tested9", "worksheet_tested9")
            tableMapping.ColumnMappings.Add("worksheet_tested10", "worksheet_tested10")
            tableMapping.ColumnMappings.Add("worksheet_tested11", "worksheet_tested11")
            tableMapping.ColumnMappings.Add("worksheet_tested12", "worksheet_tested12")
            tableMapping.ColumnMappings.Add("worksheet_tested13", "worksheet_tested13")
            tableMapping.ColumnMappings.Add("worksheet_tested14", "worksheet_tested14")
            tableMapping.ColumnMappings.Add("worksheet_tested15", "worksheet_tested15")
            tableMapping.ColumnMappings.Add("worksheet_tested16", "worksheet_tested16")
            tableMapping.ColumnMappings.Add("date_trained", "date_trained")
            tableMapping.ColumnMappings.Add("date_cancelled", "date_cancelled")
            tableMapping.ColumnMappings.Add("status", "status")
            tableMapping.ColumnMappings.Add("add_chair_inv_no", "add_chair_inv_no")
            tableMapping.ColumnMappings.Add("contract_date", "contract_date")
            tableMapping.ColumnMappings.Add("engineer", "engineer")
            tableMapping.ColumnMappings.Add("annual_cost", "annual_cost")
            tableMapping.ColumnMappings.Add("additional_notes2", "additional_notes2")
            tableMapping.ColumnMappings.Add("area", "area")
            tableMapping.ColumnMappings.Add("worksheet_no17", "worksheet_no17")
            tableMapping.ColumnMappings.Add("worksheet_no18", "worksheet_no18")
            tableMapping.ColumnMappings.Add("worksheet_no19", "worksheet_no19")
            tableMapping.ColumnMappings.Add("worksheet_no20", "worksheet_no20")
            tableMapping.ColumnMappings.Add("worksheet_enumber17", "worksheet_enumber17")
            tableMapping.ColumnMappings.Add("worksheet_enumber18", "worksheet_enumber18")
            tableMapping.ColumnMappings.Add("worksheet_enumber19", "worksheet_enumber19")
            tableMapping.ColumnMappings.Add("worksheet_enumber20", "worksheet_enumber20")
            tableMapping.ColumnMappings.Add("worksheet_fl_no17", "worksheet_fl_no17")
            tableMapping.ColumnMappings.Add("worksheet_fl_no18", "worksheet_fl_no18")
            tableMapping.ColumnMappings.Add("worksheet_fl_no19", "worksheet_fl_no19")
            tableMapping.ColumnMappings.Add("worksheet_fl_no20", "worksheet_fl_no20")
            tableMapping.ColumnMappings.Add("exact_location17", "exact_location17")
            tableMapping.ColumnMappings.Add("exact_location18", "exact_location18")
            tableMapping.ColumnMappings.Add("exact_location19", "exact_location19")
            tableMapping.ColumnMappings.Add("exact_location20", "exact_location20")
            tableMapping.ColumnMappings.Add("historydate", "historydate")
            tableMapping.ColumnMappings.Add("renewaldate", "renewaldate")
            tableMapping.ColumnMappings.Add("history", "history")
            tableMapping.ColumnMappings.Add("directdebit", "directdebit")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""contact_xtra"" (""contno"", ""account_mgr"", ""lastupdatedtimestamp""" & _
                ", ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""hold"", ""executed"", ""c" & _
                "ancelled"", ""order_no"", ""contract_chair_no"", ""invoice_address"", ""customer_code"", " & _
                """additional_notes"", ""contract_contact_tel_no"", ""contract_contact_name"", ""positio" & _
                "n"", ""no_of_chairs"", ""start_date"", ""date_executed"", ""completion_date"", ""contract_" & _
                "worksheet_no"", ""training_done"", ""customer_order_no"", ""worksheet_contact_name"", """ & _
                "worksheet_contact_tel_no"", ""worksheet_worksheet_no"", ""worksheet_enumber"", ""evac_" & _
                "chair_ref_no"", ""worksheet_chair_quantity"", ""worksheet_date"", ""time_in"", ""time_ou" & _
                "t"", ""duration"", ""additional_chairs_invoice_no"", ""worksheet_no1"", ""worksheet_no2""" & _
                ", ""worksheet_no3"", ""worksheet_no4"", ""worksheet_no5"", ""worksheet_no6"", ""worksheet" & _
                "_no7"", ""worksheet_no8"", ""worksheet_no9"", ""worksheet_no10"", ""worksheet_no11"", ""wo" & _
                "rksheet_no12"", ""worksheet_no13"", ""worksheet_no14"", ""worksheet_no15"", ""worksheet_" & _
                "no16"", ""worksheet_enumber1"", ""worksheet_enumber2"", ""worksheet_enumber3"", ""worksh" & _
                "eet_enumber4"", ""worksheet_enumber5"", ""worksheet_enumber6"", ""worksheet_enumber7""," & _
                " ""worksheet_enumber8"", ""worksheet_enumber9"", ""worksheet_enumber10"", ""worksheet_e" & _
                "number11"", ""worksheet_enumber12"", ""worksheet_enumber13"", ""worksheet_enumber14"", " & _
                """worksheet_enumber15"", ""worksheet_enumber16"", ""worksheet_fl_no1"", ""worksheet_fl_" & _
                "no2"", ""worksheet_fl_no3"", ""worksheet_fl_no4"", ""worksheet_fl_no5"", ""worksheet_fl_" & _
                "no6"", ""worksheet_fl_no7"", ""worksheet_fl_no8"", ""worksheet_fl_no9"", ""worksheet_fl_" & _
                "no10"", ""worksheet_fl_no11"", ""worksheet_fl_no12"", ""worksheet_fl_no13"", ""worksheet" & _
                "_fl_no14"", ""worksheet_fl_no15"", ""worksheet_fl_no16"", ""exact_location1"", ""exact_l" & _
                "ocation2"", ""exact_location3"", ""exact_location4"", ""exact_location5"", ""exact_locat" & _
                "ion6"", ""exact_location7"", ""exact_location8"", ""exact_location9"", ""exact_location1" & _
                "0"", ""exact_location11"", ""exact_location12"", ""exact_location13"", ""exact_location1" & _
                "4"", ""exact_location15"", ""exact_location16"", ""worksheet_comments1"", ""worksheet_co" & _
                "mments2"", ""worksheet_comments3"", ""worksheet_comments4"", ""worksheet_comments5"", """ & _
                "worksheet_comments6"", ""worksheet_comments7"", ""worksheet_comments8"", ""worksheet_c" & _
                "omments9"", ""worksheet_comments10"", ""worksheet_comments11"", ""worksheet_comments12" & _
                """, ""worksheet_comments13"", ""worksheet_comments14"", ""worksheet_comments15"", ""work" & _
                "sheet_comments16"", ""worksheet_ok1"", ""worksheet_ok2"", ""worksheet_ok3"", ""worksheet" & _
                "_ok4"", ""worksheet_ok5"", ""worksheet_ok6"", ""worksheet_ok7"", ""worksheet_ok8"", ""work" & _
                "sheet_ok9"", ""worksheet_ok10"", ""worksheet_ok11"", ""worksheet_ok12"", ""worksheet_ok1" & _
                "3"", ""worksheet_ok14"", ""worksheet_ok15"", ""worksheet_ok16"", ""worksheet_tested1"", """ & _
                "worksheet_tested2"", ""worksheet_tested3"", ""worksheet_tested4"", ""worksheet_tested5" & _
                """, ""worksheet_tested6"", ""worksheet_tested7"", ""worksheet_tested8"", ""worksheet_tes" & _
                "ted9"", ""worksheet_tested10"", ""worksheet_tested11"", ""worksheet_tested12"", ""worksh" & _
                "eet_tested13"", ""worksheet_tested14"", ""worksheet_tested15"", ""worksheet_tested16""," & _
                " ""date_trained"", ""date_cancelled"", ""status"", ""add_chair_inv_no"", ""contract_date""" & _
                ", ""engineer"", ""annual_cost"", ""additional_notes2"", ""area"", ""worksheet_no17"", ""wor" & _
                "ksheet_no18"", ""worksheet_no19"", ""worksheet_no20"", ""worksheet_enumber17"", ""worksh" & _
                "eet_enumber18"", ""worksheet_enumber19"", ""worksheet_enumber20"", ""worksheet_fl_no17" & _
                """, ""worksheet_fl_no18"", ""worksheet_fl_no19"", ""worksheet_fl_no20"", ""exact_locatio" & _
                "n17"", ""exact_location18"", ""exact_location19"", ""exact_location20"", ""historydate""," & _
                " ""renewaldate"", ""history"", ""directdebit"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?," & _
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?," & _
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("hold", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "hold", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("executed", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "executed", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cancelled", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "cancelled", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("order_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "order_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contract_chair_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contract_chair_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("invoice_address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "invoice_address", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("customer_code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "customer_code", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("additional_notes", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "additional_notes", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contract_contact_tel_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contract_contact_tel_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contract_contact_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contract_contact_name", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("position", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "position", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("no_of_chairs", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(5, Byte), CType(0, Byte), "no_of_chairs", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "start_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("date_executed", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "date_executed", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("completion_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "completion_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contract_worksheet_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contract_worksheet_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("training_done", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "training_done", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("customer_order_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "customer_order_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_contact_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_contact_name", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_contact_tel_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_contact_tel_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_worksheet_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_worksheet_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("evac_chair_ref_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "evac_chair_ref_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_chair_quantity", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_chair_quantity", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_in", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "time_in", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_out", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "time_out", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("duration", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(5, Byte), CType(2, Byte), "duration", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("additional_chairs_invoice_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "additional_chairs_invoice_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no5", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no6", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no7", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no8", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no9", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no10", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no11", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no12", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no13", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no14", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no15", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no16", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber5", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber6", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber7", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber8", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber9", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber10", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber11", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber12", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber13", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber14", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber15", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber16", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no5", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no6", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no7", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no8", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no9", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no10", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no11", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no12", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no13", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no14", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no15", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no16", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location5", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location6", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location7", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location8", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location9", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location10", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location11", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location12", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location13", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location14", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location15", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location16", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments5", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments6", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments7", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments8", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments9", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments10", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments11", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments12", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments13", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments14", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments15", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_comments16", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_comments16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok5", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok6", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok7", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok8", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok9", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok10", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok11", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok12", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok13", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok14", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok15", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_ok16", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_ok16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested5", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested5", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested6", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested6", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested7", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested7", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested8", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested8", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested9", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested9", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested10", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested10", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested11", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested11", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested12", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested12", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested13", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested13", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested14", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested14", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested15", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested15", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_tested16", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_tested16", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("date_trained", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "date_trained", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("date_cancelled", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "date_cancelled", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("status", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "status", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("add_chair_inv_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "add_chair_inv_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contract_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contract_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineer", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "engineer", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("annual_cost", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(6, Byte), CType(2, Byte), "annual_cost", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("additional_notes2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "additional_notes2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("area", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "area", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no17", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no17", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no18", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no18", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no19", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no19", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_no20", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_no20", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber17", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber17", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber18", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber18", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber19", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber19", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_enumber20", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_enumber20", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no17", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no17", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no18", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no18", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no19", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no19", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("worksheet_fl_no20", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "worksheet_fl_no20", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location17", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location17", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location18", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location18", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location19", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location19", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exact_location20", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exact_location20", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("historydate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "historydate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("renewaldate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "renewaldate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("history", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "history", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("directdebit", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "directdebit", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""contno"", ""account_mgr"", ""lastupdatedtimestamp"", ""lastupdated"", ""lastupdat" & _
                "edby"", ""created"", ""createdby"", ""hold"", ""executed"", ""cancelled"", ""order_no"", ""con" & _
                "tract_chair_no"", ""invoice_address"", ""customer_code"", ""additional_notes"", ""contra" & _
                "ct_contact_tel_no"", ""contract_contact_name"", ""position"", ""no_of_chairs"", ""start_" & _
                "date"", ""date_executed"", ""completion_date"", ""contract_worksheet_no"", ""training_do" & _
                "ne"", ""customer_order_no"", ""worksheet_contact_name"", ""worksheet_contact_tel_no"", " & _
                """worksheet_worksheet_no"", ""worksheet_enumber"", ""evac_chair_ref_no"", ""worksheet_c" & _
                "hair_quantity"", ""worksheet_date"", ""time_in"", ""time_out"", ""duration"", ""additional" & _
                "_chairs_invoice_no"", ""worksheet_no1"", ""worksheet_no2"", ""worksheet_no3"", ""workshe" & _
                "et_no4"", ""worksheet_no5"", ""worksheet_no6"", ""worksheet_no7"", ""worksheet_no8"", ""wo" & _
                "rksheet_no9"", ""worksheet_no10"", ""worksheet_no11"", ""worksheet_no12"", ""worksheet_n" & _
                "o13"", ""worksheet_no14"", ""worksheet_no15"", ""worksheet_no16"", ""worksheet_enumber1""" & _
                ", ""worksheet_enumber2"", ""worksheet_enumber3"", ""worksheet_enumber4"", ""worksheet_e" & _
                "number5"", ""worksheet_enumber6"", ""worksheet_enumber7"", ""worksheet_enumber8"", ""wor" & _
                "ksheet_enumber9"", ""worksheet_enumber10"", ""worksheet_enumber11"", ""worksheet_enumb" & _
                "er12"", ""worksheet_enumber13"", ""worksheet_enumber14"", ""worksheet_enumber15"", ""wor" & _
                "ksheet_enumber16"", ""worksheet_fl_no1"", ""worksheet_fl_no2"", ""worksheet_fl_no3"", """ & _
                "worksheet_fl_no4"", ""worksheet_fl_no5"", ""worksheet_fl_no6"", ""worksheet_fl_no7"", """ & _
                "worksheet_fl_no8"", ""worksheet_fl_no9"", ""worksheet_fl_no10"", ""worksheet_fl_no11""," & _
                " ""worksheet_fl_no12"", ""worksheet_fl_no13"", ""worksheet_fl_no14"", ""worksheet_fl_no" & _
                "15"", ""worksheet_fl_no16"", ""exact_location1"", ""exact_location2"", ""exact_location3" & _
                """, ""exact_location4"", ""exact_location5"", ""exact_location6"", ""exact_location7"", """ & _
                "exact_location8"", ""exact_location9"", ""exact_location10"", ""exact_location11"", ""ex" & _
                "act_location12"", ""exact_location13"", ""exact_location14"", ""exact_location15"", ""ex" & _
                "act_location16"", ""worksheet_comments1"", ""worksheet_comments2"", ""worksheet_commen" & _
                "ts3"", ""worksheet_comments4"", ""worksheet_comments5"", ""worksheet_comments6"", ""work" & _
                "sheet_comments7"", ""worksheet_comments8"", ""worksheet_comments9"", ""worksheet_comme" & _
                "nts10"", ""worksheet_comments11"", ""worksheet_comments12"", ""worksheet_comments13"", " & _
                """worksheet_comments14"", ""worksheet_comments15"", ""worksheet_comments16"", ""workshe" & _
                "et_ok1"", ""worksheet_ok2"", ""worksheet_ok3"", ""worksheet_ok4"", ""worksheet_ok5"", ""wo" & _
                "rksheet_ok6"", ""worksheet_ok7"", ""worksheet_ok8"", ""worksheet_ok9"", ""worksheet_ok10" & _
                """, ""worksheet_ok11"", ""worksheet_ok12"", ""worksheet_ok13"", ""worksheet_ok14"", ""work" & _
                "sheet_ok15"", ""worksheet_ok16"", ""worksheet_tested1"", ""worksheet_tested2"", ""worksh" & _
                "eet_tested3"", ""worksheet_tested4"", ""worksheet_tested5"", ""worksheet_tested6"", ""wo" & _
                "rksheet_tested7"", ""worksheet_tested8"", ""worksheet_tested9"", ""worksheet_tested10""" & _
                ", ""worksheet_tested11"", ""worksheet_tested12"", ""worksheet_tested13"", ""worksheet_t" & _
                "ested14"", ""worksheet_tested15"", ""worksheet_tested16"", ""date_trained"", ""date_canc" & _
                "elled"", ""status"", ""add_chair_inv_no"", ""contract_date"", ""engineer"", ""annual_cost""" & _
                ", ""additional_notes2"", ""area"", ""worksheet_no17"", ""worksheet_no18"", ""worksheet_no" & _
                "19"", ""worksheet_no20"", ""worksheet_enumber17"", ""worksheet_enumber18"", ""worksheet_" & _
                "enumber19"", ""worksheet_enumber20"", ""worksheet_fl_no17"", ""worksheet_fl_no18"", ""wo" & _
                "rksheet_fl_no19"", ""worksheet_fl_no20"", ""exact_location17"", ""exact_location18"", """ & _
                "exact_location19"", ""exact_location20"", ""historydate"", ""renewaldate"", ""history"", " & _
                """directdebit"" FROM ""DBA"".""contact_xtra"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.contact_xtraDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.contact_xtraDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.contact_xtraDataTable = New DataSet1.contact_xtraDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.contact_xtraDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "contact_xtra")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal contno As Integer, _
                    ByVal account_mgr As String, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal createdby As String, _
                    ByVal hold As String, _
                    ByVal executed As String, _
                    ByVal cancelled As String, _
                    ByVal order_no As String, _
                    ByVal contract_chair_no As String, _
                    ByVal invoice_address As String, _
                    ByVal customer_code As String, _
                    ByVal additional_notes As String, _
                    ByVal contract_contact_tel_no As String, _
                    ByVal contract_contact_name As String, _
                    ByVal position As String, _
                    ByVal no_of_chairs As Decimal, _
                    ByVal start_date As Date, _
                    ByVal date_executed As Date, _
                    ByVal completion_date As Date, _
                    ByVal contract_worksheet_no As String, _
                    ByVal training_done As String, _
                    ByVal customer_order_no As String, _
                    ByVal worksheet_contact_name As String, _
                    ByVal worksheet_contact_tel_no As String, _
                    ByVal worksheet_worksheet_no As String, _
                    ByVal worksheet_enumber As String, _
                    ByVal evac_chair_ref_no As String, _
                    ByVal worksheet_chair_quantity As String, _
                    ByVal worksheet_date As Date, _
                    ByVal time_in As Date, _
                    ByVal time_out As Date, _
                    ByVal duration As Decimal, _
                    ByVal additional_chairs_invoice_no As String, _
                    ByVal worksheet_no1 As String, _
                    ByVal worksheet_no2 As String, _
                    ByVal worksheet_no3 As String, _
                    ByVal worksheet_no4 As String, _
                    ByVal worksheet_no5 As String, _
                    ByVal worksheet_no6 As String, _
                    ByVal worksheet_no7 As String, _
                    ByVal worksheet_no8 As String, _
                    ByVal worksheet_no9 As String, _
                    ByVal worksheet_no10 As String, _
                    ByVal worksheet_no11 As String, _
                    ByVal worksheet_no12 As String, _
                    ByVal worksheet_no13 As String, _
                    ByVal worksheet_no14 As String, _
                    ByVal worksheet_no15 As String, _
                    ByVal worksheet_no16 As String, _
                    ByVal worksheet_enumber1 As String, _
                    ByVal worksheet_enumber2 As String, _
                    ByVal worksheet_enumber3 As String, _
                    ByVal worksheet_enumber4 As String, _
                    ByVal worksheet_enumber5 As String, _
                    ByVal worksheet_enumber6 As String, _
                    ByVal worksheet_enumber7 As String, _
                    ByVal worksheet_enumber8 As String, _
                    ByVal worksheet_enumber9 As String, _
                    ByVal worksheet_enumber10 As String, _
                    ByVal worksheet_enumber11 As String, _
                    ByVal worksheet_enumber12 As String, _
                    ByVal worksheet_enumber13 As String, _
                    ByVal worksheet_enumber14 As String, _
                    ByVal worksheet_enumber15 As String, _
                    ByVal worksheet_enumber16 As String, _
                    ByVal worksheet_fl_no1 As String, _
                    ByVal worksheet_fl_no2 As String, _
                    ByVal worksheet_fl_no3 As String, _
                    ByVal worksheet_fl_no4 As String, _
                    ByVal worksheet_fl_no5 As String, _
                    ByVal worksheet_fl_no6 As String, _
                    ByVal worksheet_fl_no7 As String, _
                    ByVal worksheet_fl_no8 As String, _
                    ByVal worksheet_fl_no9 As String, _
                    ByVal worksheet_fl_no10 As String, _
                    ByVal worksheet_fl_no11 As String, _
                    ByVal worksheet_fl_no12 As String, _
                    ByVal worksheet_fl_no13 As String, _
                    ByVal worksheet_fl_no14 As String, _
                    ByVal worksheet_fl_no15 As String, _
                    ByVal worksheet_fl_no16 As String, _
                    ByVal exact_location1 As String, _
                    ByVal exact_location2 As String, _
                    ByVal exact_location3 As String, _
                    ByVal exact_location4 As String, _
                    ByVal exact_location5 As String, _
                    ByVal exact_location6 As String, _
                    ByVal exact_location7 As String, _
                    ByVal exact_location8 As String, _
                    ByVal exact_location9 As String, _
                    ByVal exact_location10 As String, _
                    ByVal exact_location11 As String, _
                    ByVal exact_location12 As String, _
                    ByVal exact_location13 As String, _
                    ByVal exact_location14 As String, _
                    ByVal exact_location15 As String, _
                    ByVal exact_location16 As String, _
                    ByVal worksheet_comments1 As String, _
                    ByVal worksheet_comments2 As String, _
                    ByVal worksheet_comments3 As String, _
                    ByVal worksheet_comments4 As String, _
                    ByVal worksheet_comments5 As String, _
                    ByVal worksheet_comments6 As String, _
                    ByVal worksheet_comments7 As String, _
                    ByVal worksheet_comments8 As String, _
                    ByVal worksheet_comments9 As String, _
                    ByVal worksheet_comments10 As String, _
                    ByVal worksheet_comments11 As String, _
                    ByVal worksheet_comments12 As String, _
                    ByVal worksheet_comments13 As String, _
                    ByVal worksheet_comments14 As String, _
                    ByVal worksheet_comments15 As String, _
                    ByVal worksheet_comments16 As String, _
                    ByVal worksheet_ok1 As String, _
                    ByVal worksheet_ok2 As String, _
                    ByVal worksheet_ok3 As String, _
                    ByVal worksheet_ok4 As String, _
                    ByVal worksheet_ok5 As String, _
                    ByVal worksheet_ok6 As String, _
                    ByVal worksheet_ok7 As String, _
                    ByVal worksheet_ok8 As String, _
                    ByVal worksheet_ok9 As String, _
                    ByVal worksheet_ok10 As String, _
                    ByVal worksheet_ok11 As String, _
                    ByVal worksheet_ok12 As String, _
                    ByVal worksheet_ok13 As String, _
                    ByVal worksheet_ok14 As String, _
                    ByVal worksheet_ok15 As String, _
                    ByVal worksheet_ok16 As String, _
                    ByVal worksheet_tested1 As String, _
                    ByVal worksheet_tested2 As String, _
                    ByVal worksheet_tested3 As String, _
                    ByVal worksheet_tested4 As String, _
                    ByVal worksheet_tested5 As String, _
                    ByVal worksheet_tested6 As String, _
                    ByVal worksheet_tested7 As String, _
                    ByVal worksheet_tested8 As String, _
                    ByVal worksheet_tested9 As String, _
                    ByVal worksheet_tested10 As String, _
                    ByVal worksheet_tested11 As String, _
                    ByVal worksheet_tested12 As String, _
                    ByVal worksheet_tested13 As String, _
                    ByVal worksheet_tested14 As String, _
                    ByVal worksheet_tested15 As String, _
                    ByVal worksheet_tested16 As String, _
                    ByVal date_trained As Date, _
                    ByVal date_cancelled As Date, _
                    ByVal status As String, _
                    ByVal add_chair_inv_no As String, _
                    ByVal contract_date As Date, _
                    ByVal engineer As String, _
                    ByVal annual_cost As Decimal, _
                    ByVal additional_notes2 As String, _
                    ByVal area As String, _
                    ByVal worksheet_no17 As String, _
                    ByVal worksheet_no18 As String, _
                    ByVal worksheet_no19 As String, _
                    ByVal worksheet_no20 As String, _
                    ByVal worksheet_enumber17 As String, _
                    ByVal worksheet_enumber18 As String, _
                    ByVal worksheet_enumber19 As String, _
                    ByVal worksheet_enumber20 As String, _
                    ByVal worksheet_fl_no17 As String, _
                    ByVal worksheet_fl_no18 As String, _
                    ByVal worksheet_fl_no19 As String, _
                    ByVal worksheet_fl_no20 As String, _
                    ByVal exact_location17 As String, _
                    ByVal exact_location18 As String, _
                    ByVal exact_location19 As String, _
                    ByVal exact_location20 As String, _
                    ByVal historydate As Date, _
                    ByVal renewaldate As Date, _
                    ByVal history As Short, _
                    ByVal directdebit As Short) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(contno, Integer)
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(account_mgr, String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(createdby, String)
            End If
            If (hold Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hold")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(hold, String)
            End If
            If (executed Is Nothing) Then
                Throw New Global.System.ArgumentNullException("executed")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(executed, String)
            End If
            If (cancelled Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cancelled")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(cancelled, String)
            End If
            If (order_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("order_no")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(order_no, String)
            End If
            If (contract_chair_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contract_chair_no")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(contract_chair_no, String)
            End If
            If (invoice_address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("invoice_address")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(invoice_address, String)
            End If
            If (customer_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("customer_code")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(customer_code, String)
            End If
            If (additional_notes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("additional_notes")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(additional_notes, String)
            End If
            If (contract_contact_tel_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contract_contact_tel_no")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(contract_contact_tel_no, String)
            End If
            If (contract_contact_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contract_contact_name")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(contract_contact_name, String)
            End If
            If (position Is Nothing) Then
                Throw New Global.System.ArgumentNullException("position")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(position, String)
            End If
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(no_of_chairs, Decimal)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(start_date, Date)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(date_executed, Date)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(completion_date, Date)
            If (contract_worksheet_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contract_worksheet_no")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(contract_worksheet_no, String)
            End If
            If (training_done Is Nothing) Then
                Throw New Global.System.ArgumentNullException("training_done")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(training_done, String)
            End If
            If (customer_order_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("customer_order_no")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(customer_order_no, String)
            End If
            If (worksheet_contact_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_contact_name")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(worksheet_contact_name, String)
            End If
            If (worksheet_contact_tel_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_contact_tel_no")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(worksheet_contact_tel_no, String)
            End If
            If (worksheet_worksheet_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_worksheet_no")
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(worksheet_worksheet_no, String)
            End If
            If (worksheet_enumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(worksheet_enumber, String)
            End If
            If (evac_chair_ref_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("evac_chair_ref_no")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(evac_chair_ref_no, String)
            End If
            If (worksheet_chair_quantity Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_chair_quantity")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(worksheet_chair_quantity, String)
            End If
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(worksheet_date, Date)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(time_in, Date)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(time_out, Date)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(duration, Decimal)
            If (additional_chairs_invoice_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("additional_chairs_invoice_no")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(additional_chairs_invoice_no, String)
            End If
            If (worksheet_no1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no1")
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(worksheet_no1, String)
            End If
            If (worksheet_no2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no2")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(worksheet_no2, String)
            End If
            If (worksheet_no3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no3")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(worksheet_no3, String)
            End If
            If (worksheet_no4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no4")
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(worksheet_no4, String)
            End If
            If (worksheet_no5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no5")
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(worksheet_no5, String)
            End If
            If (worksheet_no6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no6")
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(worksheet_no6, String)
            End If
            If (worksheet_no7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no7")
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(worksheet_no7, String)
            End If
            If (worksheet_no8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no8")
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(worksheet_no8, String)
            End If
            If (worksheet_no9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no9")
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(worksheet_no9, String)
            End If
            If (worksheet_no10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no10")
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(worksheet_no10, String)
            End If
            If (worksheet_no11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no11")
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(worksheet_no11, String)
            End If
            If (worksheet_no12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no12")
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(worksheet_no12, String)
            End If
            If (worksheet_no13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no13")
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(worksheet_no13, String)
            End If
            If (worksheet_no14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no14")
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(worksheet_no14, String)
            End If
            If (worksheet_no15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no15")
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(worksheet_no15, String)
            End If
            If (worksheet_no16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no16")
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(worksheet_no16, String)
            End If
            If (worksheet_enumber1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber1")
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(worksheet_enumber1, String)
            End If
            If (worksheet_enumber2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber2")
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(worksheet_enumber2, String)
            End If
            If (worksheet_enumber3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber3")
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(worksheet_enumber3, String)
            End If
            If (worksheet_enumber4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber4")
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(worksheet_enumber4, String)
            End If
            If (worksheet_enumber5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber5")
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(worksheet_enumber5, String)
            End If
            If (worksheet_enumber6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber6")
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(worksheet_enumber6, String)
            End If
            If (worksheet_enumber7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber7")
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(worksheet_enumber7, String)
            End If
            If (worksheet_enumber8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber8")
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(worksheet_enumber8, String)
            End If
            If (worksheet_enumber9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber9")
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(worksheet_enumber9, String)
            End If
            If (worksheet_enumber10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber10")
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(worksheet_enumber10, String)
            End If
            If (worksheet_enumber11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber11")
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(worksheet_enumber11, String)
            End If
            If (worksheet_enumber12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber12")
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(worksheet_enumber12, String)
            End If
            If (worksheet_enumber13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber13")
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(worksheet_enumber13, String)
            End If
            If (worksheet_enumber14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber14")
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(worksheet_enumber14, String)
            End If
            If (worksheet_enumber15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber15")
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(worksheet_enumber15, String)
            End If
            If (worksheet_enumber16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber16")
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(worksheet_enumber16, String)
            End If
            If (worksheet_fl_no1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no1")
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(worksheet_fl_no1, String)
            End If
            If (worksheet_fl_no2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no2")
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(worksheet_fl_no2, String)
            End If
            If (worksheet_fl_no3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no3")
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(worksheet_fl_no3, String)
            End If
            If (worksheet_fl_no4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no4")
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(worksheet_fl_no4, String)
            End If
            If (worksheet_fl_no5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no5")
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(worksheet_fl_no5, String)
            End If
            If (worksheet_fl_no6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no6")
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(worksheet_fl_no6, String)
            End If
            If (worksheet_fl_no7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no7")
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(worksheet_fl_no7, String)
            End If
            If (worksheet_fl_no8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no8")
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(worksheet_fl_no8, String)
            End If
            If (worksheet_fl_no9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no9")
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(worksheet_fl_no9, String)
            End If
            If (worksheet_fl_no10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no10")
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(worksheet_fl_no10, String)
            End If
            If (worksheet_fl_no11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no11")
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(worksheet_fl_no11, String)
            End If
            If (worksheet_fl_no12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no12")
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(worksheet_fl_no12, String)
            End If
            If (worksheet_fl_no13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no13")
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(worksheet_fl_no13, String)
            End If
            If (worksheet_fl_no14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no14")
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(worksheet_fl_no14, String)
            End If
            If (worksheet_fl_no15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no15")
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(worksheet_fl_no15, String)
            End If
            If (worksheet_fl_no16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no16")
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(worksheet_fl_no16, String)
            End If
            If (exact_location1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location1")
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(exact_location1, String)
            End If
            If (exact_location2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location2")
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(exact_location2, String)
            End If
            If (exact_location3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location3")
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(exact_location3, String)
            End If
            If (exact_location4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location4")
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(exact_location4, String)
            End If
            If (exact_location5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location5")
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(exact_location5, String)
            End If
            If (exact_location6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location6")
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(exact_location6, String)
            End If
            If (exact_location7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location7")
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(exact_location7, String)
            End If
            If (exact_location8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location8")
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(exact_location8, String)
            End If
            If (exact_location9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location9")
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(exact_location9, String)
            End If
            If (exact_location10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location10")
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(exact_location10, String)
            End If
            If (exact_location11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location11")
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(exact_location11, String)
            End If
            If (exact_location12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location12")
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(exact_location12, String)
            End If
            If (exact_location13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location13")
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(exact_location13, String)
            End If
            If (exact_location14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location14")
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(exact_location14, String)
            End If
            If (exact_location15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location15")
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(exact_location15, String)
            End If
            If (exact_location16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location16")
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(exact_location16, String)
            End If
            If (worksheet_comments1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments1")
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(worksheet_comments1, String)
            End If
            If (worksheet_comments2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments2")
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(worksheet_comments2, String)
            End If
            If (worksheet_comments3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments3")
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(worksheet_comments3, String)
            End If
            If (worksheet_comments4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments4")
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(worksheet_comments4, String)
            End If
            If (worksheet_comments5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments5")
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(worksheet_comments5, String)
            End If
            If (worksheet_comments6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments6")
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(worksheet_comments6, String)
            End If
            If (worksheet_comments7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments7")
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(worksheet_comments7, String)
            End If
            If (worksheet_comments8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments8")
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(worksheet_comments8, String)
            End If
            If (worksheet_comments9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments9")
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(worksheet_comments9, String)
            End If
            If (worksheet_comments10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments10")
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(worksheet_comments10, String)
            End If
            If (worksheet_comments11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments11")
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(worksheet_comments11, String)
            End If
            If (worksheet_comments12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments12")
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(worksheet_comments12, String)
            End If
            If (worksheet_comments13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments13")
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(worksheet_comments13, String)
            End If
            If (worksheet_comments14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments14")
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(worksheet_comments14, String)
            End If
            If (worksheet_comments15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments15")
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(worksheet_comments15, String)
            End If
            If (worksheet_comments16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_comments16")
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(worksheet_comments16, String)
            End If
            If (worksheet_ok1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok1")
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(worksheet_ok1, String)
            End If
            If (worksheet_ok2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok2")
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(worksheet_ok2, String)
            End If
            If (worksheet_ok3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok3")
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(worksheet_ok3, String)
            End If
            If (worksheet_ok4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok4")
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(worksheet_ok4, String)
            End If
            If (worksheet_ok5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok5")
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(worksheet_ok5, String)
            End If
            If (worksheet_ok6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok6")
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(worksheet_ok6, String)
            End If
            If (worksheet_ok7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok7")
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(worksheet_ok7, String)
            End If
            If (worksheet_ok8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok8")
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(worksheet_ok8, String)
            End If
            If (worksheet_ok9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok9")
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(worksheet_ok9, String)
            End If
            If (worksheet_ok10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok10")
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(worksheet_ok10, String)
            End If
            If (worksheet_ok11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok11")
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(worksheet_ok11, String)
            End If
            If (worksheet_ok12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok12")
            Else
                Me.Adapter.InsertCommand.Parameters(127).Value = CType(worksheet_ok12, String)
            End If
            If (worksheet_ok13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok13")
            Else
                Me.Adapter.InsertCommand.Parameters(128).Value = CType(worksheet_ok13, String)
            End If
            If (worksheet_ok14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok14")
            Else
                Me.Adapter.InsertCommand.Parameters(129).Value = CType(worksheet_ok14, String)
            End If
            If (worksheet_ok15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok15")
            Else
                Me.Adapter.InsertCommand.Parameters(130).Value = CType(worksheet_ok15, String)
            End If
            If (worksheet_ok16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_ok16")
            Else
                Me.Adapter.InsertCommand.Parameters(131).Value = CType(worksheet_ok16, String)
            End If
            If (worksheet_tested1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested1")
            Else
                Me.Adapter.InsertCommand.Parameters(132).Value = CType(worksheet_tested1, String)
            End If
            If (worksheet_tested2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested2")
            Else
                Me.Adapter.InsertCommand.Parameters(133).Value = CType(worksheet_tested2, String)
            End If
            If (worksheet_tested3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested3")
            Else
                Me.Adapter.InsertCommand.Parameters(134).Value = CType(worksheet_tested3, String)
            End If
            If (worksheet_tested4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested4")
            Else
                Me.Adapter.InsertCommand.Parameters(135).Value = CType(worksheet_tested4, String)
            End If
            If (worksheet_tested5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested5")
            Else
                Me.Adapter.InsertCommand.Parameters(136).Value = CType(worksheet_tested5, String)
            End If
            If (worksheet_tested6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested6")
            Else
                Me.Adapter.InsertCommand.Parameters(137).Value = CType(worksheet_tested6, String)
            End If
            If (worksheet_tested7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested7")
            Else
                Me.Adapter.InsertCommand.Parameters(138).Value = CType(worksheet_tested7, String)
            End If
            If (worksheet_tested8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested8")
            Else
                Me.Adapter.InsertCommand.Parameters(139).Value = CType(worksheet_tested8, String)
            End If
            If (worksheet_tested9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested9")
            Else
                Me.Adapter.InsertCommand.Parameters(140).Value = CType(worksheet_tested9, String)
            End If
            If (worksheet_tested10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested10")
            Else
                Me.Adapter.InsertCommand.Parameters(141).Value = CType(worksheet_tested10, String)
            End If
            If (worksheet_tested11 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested11")
            Else
                Me.Adapter.InsertCommand.Parameters(142).Value = CType(worksheet_tested11, String)
            End If
            If (worksheet_tested12 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested12")
            Else
                Me.Adapter.InsertCommand.Parameters(143).Value = CType(worksheet_tested12, String)
            End If
            If (worksheet_tested13 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested13")
            Else
                Me.Adapter.InsertCommand.Parameters(144).Value = CType(worksheet_tested13, String)
            End If
            If (worksheet_tested14 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested14")
            Else
                Me.Adapter.InsertCommand.Parameters(145).Value = CType(worksheet_tested14, String)
            End If
            If (worksheet_tested15 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested15")
            Else
                Me.Adapter.InsertCommand.Parameters(146).Value = CType(worksheet_tested15, String)
            End If
            If (worksheet_tested16 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_tested16")
            Else
                Me.Adapter.InsertCommand.Parameters(147).Value = CType(worksheet_tested16, String)
            End If
            Me.Adapter.InsertCommand.Parameters(148).Value = CType(date_trained, Date)
            Me.Adapter.InsertCommand.Parameters(149).Value = CType(date_cancelled, Date)
            If (status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("status")
            Else
                Me.Adapter.InsertCommand.Parameters(150).Value = CType(status, String)
            End If
            If (add_chair_inv_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("add_chair_inv_no")
            Else
                Me.Adapter.InsertCommand.Parameters(151).Value = CType(add_chair_inv_no, String)
            End If
            Me.Adapter.InsertCommand.Parameters(152).Value = CType(contract_date, Date)
            If (engineer Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engineer")
            Else
                Me.Adapter.InsertCommand.Parameters(153).Value = CType(engineer, String)
            End If
            Me.Adapter.InsertCommand.Parameters(154).Value = CType(annual_cost, Decimal)
            If (additional_notes2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("additional_notes2")
            Else
                Me.Adapter.InsertCommand.Parameters(155).Value = CType(additional_notes2, String)
            End If
            If (area Is Nothing) Then
                Throw New Global.System.ArgumentNullException("area")
            Else
                Me.Adapter.InsertCommand.Parameters(156).Value = CType(area, String)
            End If
            If (worksheet_no17 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no17")
            Else
                Me.Adapter.InsertCommand.Parameters(157).Value = CType(worksheet_no17, String)
            End If
            If (worksheet_no18 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no18")
            Else
                Me.Adapter.InsertCommand.Parameters(158).Value = CType(worksheet_no18, String)
            End If
            If (worksheet_no19 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no19")
            Else
                Me.Adapter.InsertCommand.Parameters(159).Value = CType(worksheet_no19, String)
            End If
            If (worksheet_no20 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_no20")
            Else
                Me.Adapter.InsertCommand.Parameters(160).Value = CType(worksheet_no20, String)
            End If
            If (worksheet_enumber17 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber17")
            Else
                Me.Adapter.InsertCommand.Parameters(161).Value = CType(worksheet_enumber17, String)
            End If
            If (worksheet_enumber18 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber18")
            Else
                Me.Adapter.InsertCommand.Parameters(162).Value = CType(worksheet_enumber18, String)
            End If
            If (worksheet_enumber19 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber19")
            Else
                Me.Adapter.InsertCommand.Parameters(163).Value = CType(worksheet_enumber19, String)
            End If
            If (worksheet_enumber20 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_enumber20")
            Else
                Me.Adapter.InsertCommand.Parameters(164).Value = CType(worksheet_enumber20, String)
            End If
            If (worksheet_fl_no17 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no17")
            Else
                Me.Adapter.InsertCommand.Parameters(165).Value = CType(worksheet_fl_no17, String)
            End If
            If (worksheet_fl_no18 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no18")
            Else
                Me.Adapter.InsertCommand.Parameters(166).Value = CType(worksheet_fl_no18, String)
            End If
            If (worksheet_fl_no19 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no19")
            Else
                Me.Adapter.InsertCommand.Parameters(167).Value = CType(worksheet_fl_no19, String)
            End If
            If (worksheet_fl_no20 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("worksheet_fl_no20")
            Else
                Me.Adapter.InsertCommand.Parameters(168).Value = CType(worksheet_fl_no20, String)
            End If
            If (exact_location17 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location17")
            Else
                Me.Adapter.InsertCommand.Parameters(169).Value = CType(exact_location17, String)
            End If
            If (exact_location18 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location18")
            Else
                Me.Adapter.InsertCommand.Parameters(170).Value = CType(exact_location18, String)
            End If
            If (exact_location19 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location19")
            Else
                Me.Adapter.InsertCommand.Parameters(171).Value = CType(exact_location19, String)
            End If
            If (exact_location20 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exact_location20")
            Else
                Me.Adapter.InsertCommand.Parameters(172).Value = CType(exact_location20, String)
            End If
            Me.Adapter.InsertCommand.Parameters(173).Value = CType(historydate, Date)
            Me.Adapter.InsertCommand.Parameters(174).Value = CType(renewaldate, Date)
            Me.Adapter.InsertCommand.Parameters(175).Value = CType(history, Short)
            Me.Adapter.InsertCommand.Parameters(176).Value = CType(directdebit, Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class divisionTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "division"
            tableMapping.ColumnMappings.Add("divno", "divno")
            tableMapping.ColumnMappings.Add("compno", "compno")
            tableMapping.ColumnMappings.Add("divname", "divname")
            tableMapping.ColumnMappings.Add("addrno", "addrno")
            tableMapping.ColumnMappings.Add("oprano", "oprano")
            tableMapping.ColumnMappings.Add("phone", "phone")
            tableMapping.ColumnMappings.Add("fax", "fax")
            tableMapping.ColumnMappings.Add("employees", "employees")
            tableMapping.ColumnMappings.Add("turnovercd", "turnovercd")
            tableMapping.ColumnMappings.Add("sic", "sic")
            tableMapping.ColumnMappings.Add("divtypedsc", "divtypedsc")
            tableMapping.ColumnMappings.Add("divname_soundex", "divname_soundex")
            tableMapping.ColumnMappings.Add("fcurrcode", "fcurrcode")
            tableMapping.ColumnMappings.Add("opcompany", "opcompany")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("website", "website")
            tableMapping.ColumnMappings.Add("fiscalyear", "fiscalyear")
            tableMapping.ColumnMappings.Add("limited", "limited")
            tableMapping.ColumnMappings.Add("lastverified", "lastverified")
            tableMapping.ColumnMappings.Add("notepad", "notepad")
            tableMapping.ColumnMappings.Add("notepad_temp", "notepad_temp")
            tableMapping.ColumnMappings.Add("Priority", "Priority")
            tableMapping.ColumnMappings.Add("division_mgr", "division_mgr")
            tableMapping.ColumnMappings.Add("pledgerno", "pledgerno")
            tableMapping.ColumnMappings.Add("atref", "atref")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("StatusFlag", "StatusFlag")
            tableMapping.ColumnMappings.Add("bgid", "bgid")
            tableMapping.ColumnMappings.Add("mystorehideothercategories", "mystorehideothercategories")
            tableMapping.ColumnMappings.Add("usesharedbaskets", "usesharedbaskets")
            tableMapping.ColumnMappings.Add("temptaxcode", "temptaxcode")
            tableMapping.ColumnMappings.Add("tempcountrycode", "tempcountrycode")
            tableMapping.ColumnMappings.Add("tempvatregcode", "tempvatregcode")
            tableMapping.ColumnMappings.Add("sys_a_objects_key", "sys_a_objects_key")
            tableMapping.ColumnMappings.Add("wowpermalink", "wowpermalink")
            tableMapping.ColumnMappings.Add("source", "source")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""division"" (""divno"", ""compno"", ""divname"", ""addrno"", ""oprano"", """ & _
                "phone"", ""fax"", ""employees"", ""turnovercd"", ""sic"", ""divtypedsc"", ""divname_soundex""" & _
                ", ""fcurrcode"", ""opcompany"", ""account_mgr"", ""website"", ""fiscalyear"", ""limited"", """ & _
                "lastverified"", ""notepad"", ""notepad_temp"", ""Priority"", ""division_mgr"", ""pledgerno" & _
                """, ""atref"", ""lastupdatedtimestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", """ & _
                "createdby"", ""StatusFlag"", ""bgid"", ""mystorehideothercategories"", ""usesharedbasket" & _
                "s"", ""temptaxcode"", ""tempcountrycode"", ""tempvatregcode"", ""sys_a_objects_key"", ""wo" & _
                "wpermalink"", ""source"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("divno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "divno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("compno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "compno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("divname", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "divname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("addrno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "addrno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("oprano", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "oprano", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("phone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "phone", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fax", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "fax", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("employees", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "employees", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("turnovercd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "turnovercd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sic", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sic", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("divtypedsc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "divtypedsc", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("divname_soundex", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "divname_soundex", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fcurrcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "fcurrcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("opcompany", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "opcompany", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("website", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "website", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fiscalyear", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "fiscalyear", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("limited", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "limited", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastverified", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastverified", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("notepad", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "notepad", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("notepad_temp", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "notepad_temp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Priority", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "Priority", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("division_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "division_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("pledgerno", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "pledgerno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("atref", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "atref", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("StatusFlag", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "StatusFlag", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("bgid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "bgid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("mystorehideothercategories", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "mystorehideothercategories", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("usesharedbaskets", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "usesharedbaskets", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("temptaxcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "temptaxcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("tempcountrycode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tempcountrycode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("tempvatregcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "tempvatregcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sys_a_objects_key", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sys_a_objects_key", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wowpermalink", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "wowpermalink", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("source", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "source", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""divno"", ""compno"", ""divname"", ""addrno"", ""oprano"", ""phone"", ""fax"", ""employe" & _
                "es"", ""turnovercd"", ""sic"", ""divtypedsc"", ""divname_soundex"", ""fcurrcode"", ""opcompa" & _
                "ny"", ""account_mgr"", ""website"", ""fiscalyear"", ""limited"", ""lastverified"", ""notepad" & _
                """, ""notepad_temp"", ""Priority"", ""division_mgr"", ""pledgerno"", ""atref"", ""lastupdate" & _
                "dtimestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""StatusFlag" & _
                """, ""bgid"", ""mystorehideothercategories"", ""usesharedbaskets"", ""temptaxcode"", ""tem" & _
                "pcountrycode"", ""tempvatregcode"", ""sys_a_objects_key"", ""wowpermalink"", ""source"" F" & _
                "ROM ""DBA"".""division"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.divisionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.divisionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.divisionDataTable = New DataSet1.divisionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.divisionDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "division")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal divno As Integer, _
                    ByVal compno As Integer, _
                    ByVal divname As String, _
                    ByVal addrno As Integer, _
                    ByVal oprano As String, _
                    ByVal phone As String, _
                    ByVal fax As String, _
                    ByVal employees As Integer, _
                    ByVal turnovercd As String, _
                    ByVal sic As String, _
                    ByVal divtypedsc As String, _
                    ByVal divname_soundex As Integer, _
                    ByVal fcurrcode As String, _
                    ByVal opcompany As String, _
                    ByVal account_mgr As String, _
                    ByVal website As String, _
                    ByVal fiscalyear As Date, _
                    ByVal limited As String, _
                    ByVal lastverified As Date, _
                    ByVal notepad As String, _
                    ByVal notepad_temp As String, _
                    ByVal Priority As Integer, _
                    ByVal division_mgr As String, _
                    ByVal pledgerno As String, _
                    ByVal atref As String, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal createdby As String, _
                    ByVal StatusFlag As String, _
                    ByVal bgid As Integer, _
                    ByVal mystorehideothercategories As Double, _
                    ByVal usesharedbaskets As Short, _
                    ByVal temptaxcode As String, _
                    ByVal tempcountrycode As String, _
                    ByVal tempvatregcode As String, _
                    ByVal sys_a_objects_key As String, _
                    ByVal wowpermalink As String, _
                    ByVal source As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(divno, Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(compno, Integer)
            If (divname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("divname")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(divname, String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(addrno, Integer)
            If (oprano Is Nothing) Then
                Throw New Global.System.ArgumentNullException("oprano")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(oprano, String)
            End If
            If (phone Is Nothing) Then
                Throw New Global.System.ArgumentNullException("phone")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(phone, String)
            End If
            If (fax Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fax")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(fax, String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(employees, Integer)
            If (turnovercd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("turnovercd")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(turnovercd, String)
            End If
            If (sic Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sic")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(sic, String)
            End If
            If (divtypedsc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("divtypedsc")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(divtypedsc, String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(divname_soundex, Integer)
            If (fcurrcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fcurrcode")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(fcurrcode, String)
            End If
            If (opcompany Is Nothing) Then
                Throw New Global.System.ArgumentNullException("opcompany")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(opcompany, String)
            End If
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(account_mgr, String)
            End If
            If (website Is Nothing) Then
                Throw New Global.System.ArgumentNullException("website")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(website, String)
            End If
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(fiscalyear, Date)
            If (limited Is Nothing) Then
                Throw New Global.System.ArgumentNullException("limited")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(limited, String)
            End If
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(lastverified, Date)
            If (notepad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notepad")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(notepad, String)
            End If
            If (notepad_temp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notepad_temp")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(notepad_temp, String)
            End If
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(Priority, Integer)
            If (division_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("division_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(division_mgr, String)
            End If
            If (pledgerno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pledgerno")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(pledgerno, String)
            End If
            If (atref Is Nothing) Then
                Throw New Global.System.ArgumentNullException("atref")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(atref, String)
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(createdby, String)
            End If
            If (StatusFlag Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StatusFlag")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(StatusFlag, String)
            End If
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(bgid, Integer)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(mystorehideothercategories, Double)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(usesharedbaskets, Short)
            If (temptaxcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("temptaxcode")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(temptaxcode, String)
            End If
            If (tempcountrycode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tempcountrycode")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(tempcountrycode, String)
            End If
            If (tempvatregcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tempvatregcode")
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(tempvatregcode, String)
            End If
            If (sys_a_objects_key Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sys_a_objects_key")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(sys_a_objects_key, String)
            End If
            If (wowpermalink Is Nothing) Then
                Throw New Global.System.ArgumentNullException("wowpermalink")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(wowpermalink, String)
            End If
            If (source Is Nothing) Then
                Throw New Global.System.ArgumentNullException("source")
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(source, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class division_xtraTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "division_xtra"
            tableMapping.ColumnMappings.Add("DivNo", "DivNo")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("dd_ddi_exportdate", "dd_ddi_exportdate")
            tableMapping.ColumnMappings.Add("dd_ddi_receiveddate", "dd_ddi_receiveddate")
            tableMapping.ColumnMappings.Add("dd_ddi_activateddate", "dd_ddi_activateddate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""division_xtra"" (""DivNo"", ""account_mgr"", ""lastupdatedtimestamp""" & _
                ", ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""dd_ddi_exportdate"", """ & _
                "dd_ddi_receiveddate"", ""dd_ddi_activateddate"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?," & _
                " ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DivNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "DivNo", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_ddi_exportdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_ddi_exportdate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_ddi_receiveddate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_ddi_receiveddate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_ddi_activateddate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_ddi_activateddate", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""DivNo"", ""account_mgr"", ""lastupdatedtimestamp"", ""lastupdated"", ""lastupdate" & _
                "dby"", ""created"", ""createdby"", ""dd_ddi_exportdate"", ""dd_ddi_receiveddate"", ""dd_dd" & _
                "i_activateddate"" FROM ""DBA"".""division_xtra"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.division_xtraDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.division_xtraDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.division_xtraDataTable = New DataSet1.division_xtraDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.division_xtraDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "division_xtra")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal DivNo As Integer, ByVal account_mgr As String, ByVal lastupdatedtimestamp As Date, ByVal lastupdated As Date, ByVal lastupdatedby As String, ByVal created As Date, ByVal createdby As String, ByVal dd_ddi_exportdate As Date, ByVal dd_ddi_receiveddate As Date, ByVal dd_ddi_activateddate As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(DivNo, Integer)
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(account_mgr, String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(createdby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(dd_ddi_exportdate, Date)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(dd_ddi_receiveddate, Date)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(dd_ddi_activateddate, Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class leadTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "lead"
            tableMapping.ColumnMappings.Add("leadno", "leadno")
            tableMapping.ColumnMappings.Add("contno", "contno")
            tableMapping.ColumnMappings.Add("leadsrccd", "leadsrccd")
            tableMapping.ColumnMappings.Add("leaddate", "leaddate")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("leadsttscd", "leadsttscd")
            tableMapping.ColumnMappings.Add("lsttsdtlcd", "lsttsdtlcd")
            tableMapping.ColumnMappings.Add("stchngdate", "stchngdate")
            tableMapping.ColumnMappings.Add("quoteno", "quoteno")
            tableMapping.ColumnMappings.Add("cg_code", "cg_code")
            tableMapping.ColumnMappings.Add("leadsizecd", "leadsizecd")
            tableMapping.ColumnMappings.Add("guttometer", "guttometer")
            tableMapping.ColumnMappings.Add("postponed", "postponed")
            tableMapping.ColumnMappings.Add("probcount", "probcount")
            tableMapping.ColumnMappings.Add("spokedate", "spokedate")
            tableMapping.ColumnMappings.Add("spokecd", "spokecd")
            tableMapping.ColumnMappings.Add("notepad", "notepad")
            tableMapping.ColumnMappings.Add("spoketime", "spoketime")
            tableMapping.ColumnMappings.Add("sttschgtm", "sttschgtm")
            tableMapping.ColumnMappings.Add("notepad_temp", "notepad_temp")
            tableMapping.ColumnMappings.Add("estclose", "estclose")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("lead_desc", "lead_desc")
            tableMapping.ColumnMappings.Add("respuser", "respuser")
            tableMapping.ColumnMappings.Add("marginsize", "marginsize")
            tableMapping.ColumnMappings.Add("account_director", "account_director")
            tableMapping.ColumnMappings.Add("cashvalue", "cashvalue")
            tableMapping.ColumnMappings.Add("analysis1", "analysis1")
            tableMapping.ColumnMappings.Add("situationsummary", "situationsummary")
            tableMapping.ColumnMappings.Add("leadsourceother", "leadsourceother")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("StatusFlag", "StatusFlag")
            tableMapping.ColumnMappings.Add("leadsourceactivity", "leadsourceactivity")
            tableMapping.ColumnMappings.Add("sys_a_objects_key", "sys_a_objects_key")
            tableMapping.ColumnMappings.Add("leadtypecd", "leadtypecd")
            tableMapping.ColumnMappings.Add("salesperson", "salesperson")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""lead"" (""leadno"", ""contno"", ""leadsrccd"", ""leaddate"", ""createdby" & _
                """, ""leadsttscd"", ""lsttsdtlcd"", ""stchngdate"", ""quoteno"", ""cg_code"", ""leadsizecd""," & _
                " ""guttometer"", ""postponed"", ""probcount"", ""spokedate"", ""spokecd"", ""notepad"", ""spo" & _
                "ketime"", ""sttschgtm"", ""notepad_temp"", ""estclose"", ""account_mgr"", ""lead_desc"", ""r" & _
                "espuser"", ""marginsize"", ""account_director"", ""cashvalue"", ""analysis1"", ""situation" & _
                "summary"", ""leadsourceother"", ""lastupdatedtimestamp"", ""lastupdated"", ""lastupdated" & _
                "by"", ""created"", ""StatusFlag"", ""leadsourceactivity"", ""sys_a_objects_key"", ""leadty" & _
                "pecd"", ""salesperson"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?," & _
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadsrccd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadsrccd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leaddate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leaddate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadsttscd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadsttscd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lsttsdtlcd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lsttsdtlcd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("stchngdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "stchngdate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("quoteno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "quoteno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cg_code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "cg_code", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadsizecd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadsizecd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("guttometer", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "guttometer", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("postponed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "postponed", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("probcount", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "probcount", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spokedate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spokedate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spokecd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spokecd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("notepad", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "notepad", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("spoketime", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "spoketime", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sttschgtm", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sttschgtm", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("notepad_temp", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "notepad_temp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("estclose", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "estclose", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lead_desc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lead_desc", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("respuser", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "respuser", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("marginsize", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "marginsize", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_director", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_director", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cashvalue", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "cashvalue", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("analysis1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "analysis1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("situationsummary", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "situationsummary", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadsourceother", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadsourceother", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("StatusFlag", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "StatusFlag", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadsourceactivity", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadsourceactivity", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sys_a_objects_key", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sys_a_objects_key", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadtypecd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadtypecd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("salesperson", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "salesperson", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""leadno"", ""contno"", ""leadsrccd"", ""leaddate"", ""createdby"", ""leadsttscd"", ""l" & _
                "sttsdtlcd"", ""stchngdate"", ""quoteno"", ""cg_code"", ""leadsizecd"", ""guttometer"", ""pos" & _
                "tponed"", ""probcount"", ""spokedate"", ""spokecd"", ""notepad"", ""spoketime"", ""sttschgtm" & _
                """, ""notepad_temp"", ""estclose"", ""account_mgr"", ""lead_desc"", ""respuser"", ""marginsi" & _
                "ze"", ""account_director"", ""cashvalue"", ""analysis1"", ""situationsummary"", ""leadsour" & _
                "ceother"", ""lastupdatedtimestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", ""St" & _
                "atusFlag"", ""leadsourceactivity"", ""sys_a_objects_key"", ""leadtypecd"", ""salesperson" & _
                """ FROM ""DBA"".""lead"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.leadDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.leadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.leadDataTable = New DataSet1.leadDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.leadDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "lead")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal leadno As Integer, _
                    ByVal contno As Integer, _
                    ByVal leadsrccd As String, _
                    ByVal leaddate As Date, _
                    ByVal createdby As String, _
                    ByVal leadsttscd As String, _
                    ByVal lsttsdtlcd As String, _
                    ByVal stchngdate As Date, _
                    ByVal quoteno As Integer, _
                    ByVal cg_code As String, _
                    ByVal leadsizecd As String, _
                    ByVal guttometer As Integer, _
                    ByVal postponed As Integer, _
                    ByVal probcount As Integer, _
                    ByVal spokedate As Date, _
                    ByVal spokecd As String, _
                    ByVal notepad As String, _
                    ByVal spoketime As Date, _
                    ByVal sttschgtm As Date, _
                    ByVal notepad_temp As String, _
                    ByVal estclose As Date, _
                    ByVal account_mgr As String, _
                    ByVal lead_desc As String, _
                    ByVal respuser As String, _
                    ByVal marginsize As String, _
                    ByVal account_director As String, _
                    ByVal cashvalue As String, _
                    ByVal analysis1 As String, _
                    ByVal situationsummary As String, _
                    ByVal leadsourceother As String, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal StatusFlag As String, _
                    ByVal leadsourceactivity As Integer, _
                    ByVal sys_a_objects_key As String, _
                    ByVal leadtypecd As String, _
                    ByVal salesperson As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(leadno, Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(contno, Integer)
            If (leadsrccd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("leadsrccd")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(leadsrccd, String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(leaddate, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(createdby, String)
            End If
            If (leadsttscd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("leadsttscd")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(leadsttscd, String)
            End If
            If (lsttsdtlcd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lsttsdtlcd")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(lsttsdtlcd, String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(stchngdate, Date)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(quoteno, Integer)
            If (cg_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cg_code")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(cg_code, String)
            End If
            If (leadsizecd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("leadsizecd")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(leadsizecd, String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(guttometer, Integer)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(postponed, Integer)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(probcount, Integer)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(spokedate, Date)
            If (spokecd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("spokecd")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(spokecd, String)
            End If
            If (notepad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notepad")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(notepad, String)
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(spoketime, Date)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(sttschgtm, Date)
            If (notepad_temp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notepad_temp")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(notepad_temp, String)
            End If
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(estclose, Date)
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(account_mgr, String)
            End If
            If (lead_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lead_desc")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(lead_desc, String)
            End If
            If (respuser Is Nothing) Then
                Throw New Global.System.ArgumentNullException("respuser")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(respuser, String)
            End If
            If (marginsize Is Nothing) Then
                Throw New Global.System.ArgumentNullException("marginsize")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(marginsize, String)
            End If
            If (account_director Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_director")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(account_director, String)
            End If
            If (cashvalue Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cashvalue")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(cashvalue, String)
            End If
            If (analysis1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("analysis1")
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(analysis1, String)
            End If
            If (situationsummary Is Nothing) Then
                Throw New Global.System.ArgumentNullException("situationsummary")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(situationsummary, String)
            End If
            If (leadsourceother Is Nothing) Then
                Throw New Global.System.ArgumentNullException("leadsourceother")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(leadsourceother, String)
            End If
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(created, Date)
            If (StatusFlag Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StatusFlag")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(StatusFlag, String)
            End If
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(leadsourceactivity, Integer)
            If (sys_a_objects_key Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sys_a_objects_key")
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(sys_a_objects_key, String)
            End If
            If (leadtypecd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("leadtypecd")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(leadtypecd, String)
            End If
            If (salesperson Is Nothing) Then
                Throw New Global.System.ArgumentNullException("salesperson")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(salesperson, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class lead_xtraTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "lead_xtra"
            tableMapping.ColumnMappings.Add("leadno", "leadno")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("refno", "refno")
            tableMapping.ColumnMappings.Add("exhibitionname", "exhibitionname")
            tableMapping.ColumnMappings.Add("magazinename", "magazinename")
            tableMapping.ColumnMappings.Add("datereceived", "datereceived")
            tableMapping.ColumnMappings.Add("dateinfosent", "dateinfosent")
            tableMapping.ColumnMappings.Add("visitdate", "visitdate")
            tableMapping.ColumnMappings.Add("calltimein", "calltimein")
            tableMapping.ColumnMappings.Add("calltimeout", "calltimeout")
            tableMapping.ColumnMappings.Add("nooffloors", "nooffloors")
            tableMapping.ColumnMappings.Add("noofstaircasesescape", "noofstaircasesescape")
            tableMapping.ColumnMappings.Add("obsolete_noofnotifieddisabled", "obsolete_noofnotifieddisabled")
            tableMapping.ColumnMappings.Add("obsolete_accessofpublic", "obsolete_accessofpublic")
            tableMapping.ColumnMappings.Add("obsolete_towhatfloors", "obsolete_towhatfloors")
            tableMapping.ColumnMappings.Add("obsolete_locationofrestaurant", "obsolete_locationofrestaurant")
            tableMapping.ColumnMappings.Add("obsolete_locationofdisabledtoilets", "obsolete_locationofdisabledtoilets")
            tableMapping.ColumnMappings.Add("suggestednoofchairs", "suggestednoofchairs")
            tableMapping.ColumnMappings.Add("obsolete_materials", "obsolete_materials")
            tableMapping.ColumnMappings.Add("obsolete_lessdiscount", "obsolete_lessdiscount")
            tableMapping.ColumnMappings.Add("obsolete_subtotal", "obsolete_subtotal")
            tableMapping.ColumnMappings.Add("obsolete_postageandpackaging", "obsolete_postageandpackaging")
            tableMapping.ColumnMappings.Add("obsolete_labour", "obsolete_labour")
            tableMapping.ColumnMappings.Add("obsolete_expenses", "obsolete_expenses")
            tableMapping.ColumnMappings.Add("obsolete_costtotal", "obsolete_costtotal")
            tableMapping.ColumnMappings.Add("obsolete_vat", "obsolete_vat")
            tableMapping.ColumnMappings.Add("obsolete_grandtotal", "obsolete_grandtotal")
            tableMapping.ColumnMappings.Add("comments", "comments")
            tableMapping.ColumnMappings.Add("repinitials", "repinitials")
            tableMapping.ColumnMappings.Add("mailinglistdate", "mailinglistdate")
            tableMapping.ColumnMappings.Add("demorequested", "demorequested")
            tableMapping.ColumnMappings.Add("projectno", "projectno")
            tableMapping.ColumnMappings.Add("demoarrangedby", "demoarrangedby")
            tableMapping.ColumnMappings.Add("order_no", "order_no")
            tableMapping.ColumnMappings.Add("contract_chair_no", "contract_chair_no")
            tableMapping.ColumnMappings.Add("additional_notes", "additional_notes")
            tableMapping.ColumnMappings.Add("add_chair_inv_no", "add_chair_inv_no")
            tableMapping.ColumnMappings.Add("date_executed", "date_executed")
            tableMapping.ColumnMappings.Add("date_cancelled", "date_cancelled")
            tableMapping.ColumnMappings.Add("history_date", "history_date")
            tableMapping.ColumnMappings.Add("renewal_date", "renewal_date")
            tableMapping.ColumnMappings.Add("date_trained", "date_trained")
            tableMapping.ColumnMappings.Add("training_done", "training_done")
            tableMapping.ColumnMappings.Add("time_in", "time_in")
            tableMapping.ColumnMappings.Add("time_out", "time_out")
            tableMapping.ColumnMappings.Add("duration", "duration")
            tableMapping.ColumnMappings.Add("evac_chair_ref_no", "evac_chair_ref_no")
            tableMapping.ColumnMappings.Add("additional_notes2", "additional_notes2")
            tableMapping.ColumnMappings.Add("start_date", "start_date")
            tableMapping.ColumnMappings.Add("completion_date", "completion_date")
            tableMapping.ColumnMappings.Add("contract_worksheet_no", "contract_worksheet_no")
            tableMapping.ColumnMappings.Add("no_of_chairs", "no_of_chairs")
            tableMapping.ColumnMappings.Add("annual_cost", "annual_cost")
            tableMapping.ColumnMappings.Add("customer_order_no", "customer_order_no")
            tableMapping.ColumnMappings.Add("quotepadref", "quotepadref")
            tableMapping.ColumnMappings.Add("doc_no", "doc_no")
            tableMapping.ColumnMappings.Add("master_leadno", "master_leadno")
            tableMapping.ColumnMappings.Add("project_stair1_location", "project_stair1_location")
            tableMapping.ColumnMappings.Add("project_stair1_finish", "project_stair1_finish")
            tableMapping.ColumnMappings.Add("project_stair1_angle", "project_stair1_angle")
            tableMapping.ColumnMappings.Add("project_stair1_comments", "project_stair1_comments")
            tableMapping.ColumnMappings.Add("project_stair2_location", "project_stair2_location")
            tableMapping.ColumnMappings.Add("project_stair2_finish", "project_stair2_finish")
            tableMapping.ColumnMappings.Add("project_stair2_angle", "project_stair2_angle")
            tableMapping.ColumnMappings.Add("project_stair2_comments", "project_stair2_comments")
            tableMapping.ColumnMappings.Add("project_stair3_location", "project_stair3_location")
            tableMapping.ColumnMappings.Add("project_stair3_finish", "project_stair3_finish")
            tableMapping.ColumnMappings.Add("project_stair3_angle", "project_stair3_angle")
            tableMapping.ColumnMappings.Add("project_stair3_comments", "project_stair3_comments")
            tableMapping.ColumnMappings.Add("project_stair4_location", "project_stair4_location")
            tableMapping.ColumnMappings.Add("project_stair4_finish", "project_stair4_finish")
            tableMapping.ColumnMappings.Add("project_stair4_angle", "project_stair4_angle")
            tableMapping.ColumnMappings.Add("project_stair4_comments", "project_stair4_comments")
            tableMapping.ColumnMappings.Add("project_stair5_location", "project_stair5_location")
            tableMapping.ColumnMappings.Add("project_stair5_finish", "project_stair5_finish")
            tableMapping.ColumnMappings.Add("project_stair5_angle", "project_stair5_angle")
            tableMapping.ColumnMappings.Add("project_stair5_comments", "project_stair5_comments")
            tableMapping.ColumnMappings.Add("project_stair6_location", "project_stair6_location")
            tableMapping.ColumnMappings.Add("project_stair6_finish", "project_stair6_finish")
            tableMapping.ColumnMappings.Add("project_stair6_angle", "project_stair6_angle")
            tableMapping.ColumnMappings.Add("project_stair6_comments", "project_stair6_comments")
            tableMapping.ColumnMappings.Add("project_stair7_location", "project_stair7_location")
            tableMapping.ColumnMappings.Add("project_stair7_finish", "project_stair7_finish")
            tableMapping.ColumnMappings.Add("project_stair7_angle", "project_stair7_angle")
            tableMapping.ColumnMappings.Add("project_stair7_comments", "project_stair7_comments")
            tableMapping.ColumnMappings.Add("project_stair8_location", "project_stair8_location")
            tableMapping.ColumnMappings.Add("project_stair8_finish", "project_stair8_finish")
            tableMapping.ColumnMappings.Add("project_stair8_angle", "project_stair8_angle")
            tableMapping.ColumnMappings.Add("project_stair8_comments", "project_stair8_comments")
            tableMapping.ColumnMappings.Add("project_stair9_location", "project_stair9_location")
            tableMapping.ColumnMappings.Add("project_stair9_finish", "project_stair9_finish")
            tableMapping.ColumnMappings.Add("project_stair9_angle", "project_stair9_angle")
            tableMapping.ColumnMappings.Add("project_stair9_comments", "project_stair9_comments")
            tableMapping.ColumnMappings.Add("project_stair10_location", "project_stair10_location")
            tableMapping.ColumnMappings.Add("project_stair10_finish", "project_stair10_finish")
            tableMapping.ColumnMappings.Add("project_stair10_angle", "project_stair10_angle")
            tableMapping.ColumnMappings.Add("project_stair10_comments", "project_stair10_comments")
            tableMapping.ColumnMappings.Add("project_stair11_location", "project_stair11_location")
            tableMapping.ColumnMappings.Add("project_stair11_finish", "project_stair11_finish")
            tableMapping.ColumnMappings.Add("project_stair11_angle", "project_stair11_angle")
            tableMapping.ColumnMappings.Add("project_stair11_comments", "project_stair11_comments")
            tableMapping.ColumnMappings.Add("project_stair12_location", "project_stair12_location")
            tableMapping.ColumnMappings.Add("project_stair12_finish", "project_stair12_finish")
            tableMapping.ColumnMappings.Add("project_stair12_angle", "project_stair12_angle")
            tableMapping.ColumnMappings.Add("project_stair12_comments", "project_stair12_comments")
            tableMapping.ColumnMappings.Add("project_external_checks", "project_external_checks")
            tableMapping.ColumnMappings.Add("project_demo_declined", "project_demo_declined")
            tableMapping.ColumnMappings.Add("project_all_staircases_evaluated", "project_all_staircases_evaluated")
            tableMapping.ColumnMappings.Add("paraid_estimated_date", "paraid_estimated_date")
            tableMapping.ColumnMappings.Add("paraid_drawings_approved_date", "paraid_drawings_approved_date")
            tableMapping.ColumnMappings.Add("paraid_planned_date", "paraid_planned_date")
            tableMapping.ColumnMappings.Add("paraid_despatched_date", "paraid_despatched_date")
            tableMapping.ColumnMappings.Add("dd_type", "dd_type")
            tableMapping.ColumnMappings.Add("dd_amount", "dd_amount")
            tableMapping.ColumnMappings.Add("dd_exportdate", "dd_exportdate")
            tableMapping.ColumnMappings.Add("dd_invoice_address", "dd_invoice_address")
            tableMapping.ColumnMappings.Add("dd_paydate", "dd_paydate")
            tableMapping.ColumnMappings.Add("dd_lastrejecteddate", "dd_lastrejecteddate")
            tableMapping.ColumnMappings.Add("dd_notes", "dd_notes")
            tableMapping.ColumnMappings.Add("suggested_service_date", "suggested_service_date")
            tableMapping.ColumnMappings.Add("apppointment_date", "apppointment_date")
            tableMapping.ColumnMappings.Add("apppointment_confirmed", "apppointment_confirmed")
            tableMapping.ColumnMappings.Add("onhold_letter", "onhold_letter")
            tableMapping.ColumnMappings.Add("onhold_date", "onhold_date")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""lead_xtra"" (""leadno"", ""account_mgr"", ""lastupdatedtimestamp"", """ & _
                "lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""refno"", ""exhibitionname""" & _
                ", ""magazinename"", ""datereceived"", ""dateinfosent"", ""visitdate"", ""calltimein"", ""ca" & _
                "lltimeout"", ""nooffloors"", ""noofstaircasesescape"", ""obsolete_noofnotifieddisabled" & _
                """, ""obsolete_accessofpublic"", ""obsolete_towhatfloors"", ""obsolete_locationofresta" & _
                "urant"", ""obsolete_locationofdisabledtoilets"", ""suggestednoofchairs"", ""obsolete_m" & _
                "aterials"", ""obsolete_lessdiscount"", ""obsolete_subtotal"", ""obsolete_postageandpac" & _
                "kaging"", ""obsolete_labour"", ""obsolete_expenses"", ""obsolete_costtotal"", ""obsolete" & _
                "_vat"", ""obsolete_grandtotal"", ""comments"", ""repinitials"", ""mailinglistdate"", ""dem" & _
                "orequested"", ""projectno"", ""demoarrangedby"", ""order_no"", ""contract_chair_no"", ""ad" & _
                "ditional_notes"", ""add_chair_inv_no"", ""date_executed"", ""date_cancelled"", ""history" & _
                "_date"", ""renewal_date"", ""date_trained"", ""training_done"", ""time_in"", ""time_out"", " & _
                """duration"", ""evac_chair_ref_no"", ""additional_notes2"", ""start_date"", ""completion_" & _
                "date"", ""contract_worksheet_no"", ""no_of_chairs"", ""annual_cost"", ""customer_order_n" & _
                "o"", ""quotepadref"", ""doc_no"", ""master_leadno"", ""project_stair1_location"", ""projec" & _
                "t_stair1_finish"", ""project_stair1_angle"", ""project_stair1_comments"", ""project_st" & _
                "air2_location"", ""project_stair2_finish"", ""project_stair2_angle"", ""project_stair2" & _
                "_comments"", ""project_stair3_location"", ""project_stair3_finish"", ""project_stair3_" & _
                "angle"", ""project_stair3_comments"", ""project_stair4_location"", ""project_stair4_fi" & _
                "nish"", ""project_stair4_angle"", ""project_stair4_comments"", ""project_stair5_locati" & _
                "on"", ""project_stair5_finish"", ""project_stair5_angle"", ""project_stair5_comments""," & _
                " ""project_stair6_location"", ""project_stair6_finish"", ""project_stair6_angle"", ""pr" & _
                "oject_stair6_comments"", ""project_stair7_location"", ""project_stair7_finish"", ""pro" & _
                "ject_stair7_angle"", ""project_stair7_comments"", ""project_stair8_location"", ""proje" & _
                "ct_stair8_finish"", ""project_stair8_angle"", ""project_stair8_comments"", ""project_s" & _
                "tair9_location"", ""project_stair9_finish"", ""project_stair9_angle"", ""project_stair" & _
                "9_comments"", ""project_stair10_location"", ""project_stair10_finish"", ""project_stai" & _
                "r10_angle"", ""project_stair10_comments"", ""project_stair11_location"", ""project_sta" & _
                "ir11_finish"", ""project_stair11_angle"", ""project_stair11_comments"", ""project_stai" & _
                "r12_location"", ""project_stair12_finish"", ""project_stair12_angle"", ""project_stair" & _
                "12_comments"", ""project_external_checks"", ""project_demo_declined"", ""project_all_s" & _
                "taircases_evaluated"", ""paraid_estimated_date"", ""paraid_drawings_approved_date"", " & _
                """paraid_planned_date"", ""paraid_despatched_date"", ""dd_type"", ""dd_amount"", ""dd_exp" & _
                "ortdate"", ""dd_invoice_address"", ""dd_paydate"", ""dd_lastrejecteddate"", ""dd_notes""," & _
                " ""suggested_service_date"", ""apppointment_date"", ""apppointment_confirmed"", ""onhol" & _
                "d_letter"", ""onhold_date"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?," & _
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("leadno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "leadno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("refno", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "refno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("exhibitionname", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "exhibitionname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("magazinename", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "magazinename", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("datereceived", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "datereceived", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dateinfosent", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dateinfosent", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("visitdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "visitdate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("calltimein", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "calltimein", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("calltimeout", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "calltimeout", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("nooffloors", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "nooffloors", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("noofstaircasesescape", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "noofstaircasesescape", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_noofnotifieddisabled", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "obsolete_noofnotifieddisabled", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_accessofpublic", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "obsolete_accessofpublic", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_towhatfloors", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "obsolete_towhatfloors", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_locationofrestaurant", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "obsolete_locationofrestaurant", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_locationofdisabledtoilets", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "obsolete_locationofdisabledtoilets", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("suggestednoofchairs", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "suggestednoofchairs", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_materials", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_materials", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_lessdiscount", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_lessdiscount", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_subtotal", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_subtotal", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_postageandpackaging", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_postageandpackaging", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_labour", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_labour", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_expenses", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_expenses", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_costtotal", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_costtotal", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_vat", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_vat", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete_grandtotal", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(19, Byte), CType(4, Byte), "obsolete_grandtotal", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("repinitials", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "repinitials", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("mailinglistdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "mailinglistdate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("demorequested", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "demorequested", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("projectno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "projectno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("demoarrangedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "demoarrangedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("order_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "order_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contract_chair_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contract_chair_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("additional_notes", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "additional_notes", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("add_chair_inv_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "add_chair_inv_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("date_executed", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "date_executed", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("date_cancelled", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "date_cancelled", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("history_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "history_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("renewal_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "renewal_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("date_trained", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "date_trained", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("training_done", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "training_done", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_in", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "time_in", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("time_out", Global.System.Data.Odbc.OdbcType.Time, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "time_out", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("duration", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(5, Byte), CType(2, Byte), "duration", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("evac_chair_ref_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "evac_chair_ref_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("additional_notes2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "additional_notes2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("start_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "start_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("completion_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "completion_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contract_worksheet_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contract_worksheet_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("no_of_chairs", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(5, Byte), CType(0, Byte), "no_of_chairs", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("annual_cost", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(6, Byte), CType(2, Byte), "annual_cost", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("customer_order_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "customer_order_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("quotepadref", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "quotepadref", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("doc_no", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "doc_no", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("master_leadno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "master_leadno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair1_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair1_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair1_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair1_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair1_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair1_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair1_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair1_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair2_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair2_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair2_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair2_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair2_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair2_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair2_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair2_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair3_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair3_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair3_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair3_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair3_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair3_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair3_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair3_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair4_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair4_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair4_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair4_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair4_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair4_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair4_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair4_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair5_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair5_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair5_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair5_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair5_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair5_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair5_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair5_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair6_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair6_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair6_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair6_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair6_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair6_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair6_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair6_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair7_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair7_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair7_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair7_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair7_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair7_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair7_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair7_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair8_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair8_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair8_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair8_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair8_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair8_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair8_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair8_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair9_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair9_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair9_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair9_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair9_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair9_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair9_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair9_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair10_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair10_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair10_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair10_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair10_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair10_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair10_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair10_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair11_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair11_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair11_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair11_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair11_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair11_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair11_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair11_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair12_location", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair12_location", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair12_finish", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair12_finish", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair12_angle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair12_angle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_stair12_comments", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_stair12_comments", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_external_checks", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_external_checks", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_demo_declined", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_demo_declined", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("project_all_staircases_evaluated", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "project_all_staircases_evaluated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("paraid_estimated_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "paraid_estimated_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("paraid_drawings_approved_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "paraid_drawings_approved_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("paraid_planned_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "paraid_planned_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("paraid_despatched_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "paraid_despatched_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_type", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_type", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_amount", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(8, Byte), CType(2, Byte), "dd_amount", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_exportdate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_exportdate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_invoice_address", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_invoice_address", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_paydate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_paydate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_lastrejecteddate", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_lastrejecteddate", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dd_notes", Global.System.Data.Odbc.OdbcType.Text, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dd_notes", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("suggested_service_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "suggested_service_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("apppointment_date", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "apppointment_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("apppointment_confirmed", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "apppointment_confirmed", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("onhold_letter", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "onhold_letter", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("onhold_date", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "onhold_date", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""leadno"", ""account_mgr"", ""lastupdatedtimestamp"", ""lastupdated"", ""lastupdat" & _
                "edby"", ""created"", ""createdby"", ""refno"", ""exhibitionname"", ""magazinename"", ""dater" & _
                "eceived"", ""dateinfosent"", ""visitdate"", ""calltimein"", ""calltimeout"", ""nooffloors""" & _
                ", ""noofstaircasesescape"", ""obsolete_noofnotifieddisabled"", ""obsolete_accessofpub" & _
                "lic"", ""obsolete_towhatfloors"", ""obsolete_locationofrestaurant"", ""obsolete_locati" & _
                "onofdisabledtoilets"", ""suggestednoofchairs"", ""obsolete_materials"", ""obsolete_les" & _
                "sdiscount"", ""obsolete_subtotal"", ""obsolete_postageandpackaging"", ""obsolete_labou" & _
                "r"", ""obsolete_expenses"", ""obsolete_costtotal"", ""obsolete_vat"", ""obsolete_grandto" & _
                "tal"", ""comments"", ""repinitials"", ""mailinglistdate"", ""demorequested"", ""projectno""" & _
                ", ""demoarrangedby"", ""order_no"", ""contract_chair_no"", ""additional_notes"", ""add_ch" & _
                "air_inv_no"", ""date_executed"", ""date_cancelled"", ""history_date"", ""renewal_date"", " & _
                """date_trained"", ""training_done"", ""time_in"", ""time_out"", ""duration"", ""evac_chair_" & _
                "ref_no"", ""additional_notes2"", ""start_date"", ""completion_date"", ""contract_workshe" & _
                "et_no"", ""no_of_chairs"", ""annual_cost"", ""customer_order_no"", ""quotepadref"", ""doc_" & _
                "no"", ""master_leadno"", ""project_stair1_location"", ""project_stair1_finish"", ""proje" & _
                "ct_stair1_angle"", ""project_stair1_comments"", ""project_stair2_location"", ""project" & _
                "_stair2_finish"", ""project_stair2_angle"", ""project_stair2_comments"", ""project_sta" & _
                "ir3_location"", ""project_stair3_finish"", ""project_stair3_angle"", ""project_stair3_" & _
                "comments"", ""project_stair4_location"", ""project_stair4_finish"", ""project_stair4_a" & _
                "ngle"", ""project_stair4_comments"", ""project_stair5_location"", ""project_stair5_fin" & _
                "ish"", ""project_stair5_angle"", ""project_stair5_comments"", ""project_stair6_locatio" & _
                "n"", ""project_stair6_finish"", ""project_stair6_angle"", ""project_stair6_comments"", " & _
                """project_stair7_location"", ""project_stair7_finish"", ""project_stair7_angle"", ""pro" & _
                "ject_stair7_comments"", ""project_stair8_location"", ""project_stair8_finish"", ""proj" & _
                "ect_stair8_angle"", ""project_stair8_comments"", ""project_stair9_location"", ""projec" & _
                "t_stair9_finish"", ""project_stair9_angle"", ""project_stair9_comments"", ""project_st" & _
                "air10_location"", ""project_stair10_finish"", ""project_stair10_angle"", ""project_sta" & _
                "ir10_comments"", ""project_stair11_location"", ""project_stair11_finish"", ""project_s" & _
                "tair11_angle"", ""project_stair11_comments"", ""project_stair12_location"", ""project_" & _
                "stair12_finish"", ""project_stair12_angle"", ""project_stair12_comments"", ""project_e" & _
                "xternal_checks"", ""project_demo_declined"", ""project_all_staircases_evaluated"", ""p" & _
                "araid_estimated_date"", ""paraid_drawings_approved_date"", ""paraid_planned_date"", """ & _
                "paraid_despatched_date"", ""dd_type"", ""dd_amount"", ""dd_exportdate"", ""dd_invoice_ad" & _
                "dress"", ""dd_paydate"", ""dd_lastrejecteddate"", ""dd_notes"", ""suggested_service_date" & _
                """, ""apppointment_date"", ""apppointment_confirmed"", ""onhold_letter"", ""onhold_date""" & _
                " FROM ""DBA"".""lead_xtra"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.lead_xtraDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.lead_xtraDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.lead_xtraDataTable = New DataSet1.lead_xtraDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.lead_xtraDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "lead_xtra")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal leadno As Integer, _
                    ByVal account_mgr As String, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal createdby As String, _
                    ByVal refno As String, _
                    ByVal exhibitionname As String, _
                    ByVal magazinename As String, _
                    ByVal datereceived As Date, _
                    ByVal dateinfosent As Date, _
                    ByVal visitdate As Date, _
                    ByVal calltimein As Date, _
                    ByVal calltimeout As Date, _
                    ByVal nooffloors As Integer, _
                    ByVal noofstaircasesescape As Integer, _
                    ByVal obsolete_noofnotifieddisabled As Integer, _
                    ByVal obsolete_accessofpublic As Short, _
                    ByVal obsolete_towhatfloors As String, _
                    ByVal obsolete_locationofrestaurant As String, _
                    ByVal obsolete_locationofdisabledtoilets As String, _
                    ByVal suggestednoofchairs As Integer, _
                    ByVal obsolete_materials As Decimal, _
                    ByVal obsolete_lessdiscount As Decimal, _
                    ByVal obsolete_subtotal As Decimal, _
                    ByVal obsolete_postageandpackaging As Decimal, _
                    ByVal obsolete_labour As Decimal, _
                    ByVal obsolete_expenses As Decimal, _
                    ByVal obsolete_costtotal As Decimal, _
                    ByVal obsolete_vat As Decimal, _
                    ByVal obsolete_grandtotal As Decimal, _
                    ByVal comments As String, _
                    ByVal repinitials As String, _
                    ByVal mailinglistdate As Date, _
                    ByVal demorequested As Short, _
                    ByVal projectno As Integer, _
                    ByVal demoarrangedby As String, _
                    ByVal order_no As String, _
                    ByVal contract_chair_no As String, _
                    ByVal additional_notes As String, _
                    ByVal add_chair_inv_no As String, _
                    ByVal date_executed As Date, _
                    ByVal date_cancelled As Date, _
                    ByVal history_date As Date, _
                    ByVal renewal_date As Date, _
                    ByVal date_trained As Date, _
                    ByVal training_done As String, _
                    ByVal time_in As Date, _
                    ByVal time_out As Date, _
                    ByVal duration As Decimal, _
                    ByVal evac_chair_ref_no As String, _
                    ByVal additional_notes2 As String, _
                    ByVal start_date As Date, _
                    ByVal completion_date As Date, _
                    ByVal contract_worksheet_no As String, _
                    ByVal no_of_chairs As Decimal, _
                    ByVal annual_cost As Decimal, _
                    ByVal customer_order_no As String, _
                    ByVal quotepadref As String, _
                    ByVal doc_no As String, _
                    ByVal master_leadno As Integer, _
                    ByVal project_stair1_location As String, _
                    ByVal project_stair1_finish As String, _
                    ByVal project_stair1_angle As String, _
                    ByVal project_stair1_comments As String, _
                    ByVal project_stair2_location As String, _
                    ByVal project_stair2_finish As String, _
                    ByVal project_stair2_angle As String, _
                    ByVal project_stair2_comments As String, _
                    ByVal project_stair3_location As String, _
                    ByVal project_stair3_finish As String, _
                    ByVal project_stair3_angle As String, _
                    ByVal project_stair3_comments As String, _
                    ByVal project_stair4_location As String, _
                    ByVal project_stair4_finish As String, _
                    ByVal project_stair4_angle As String, _
                    ByVal project_stair4_comments As String, _
                    ByVal project_stair5_location As String, _
                    ByVal project_stair5_finish As String, _
                    ByVal project_stair5_angle As String, _
                    ByVal project_stair5_comments As String, _
                    ByVal project_stair6_location As String, _
                    ByVal project_stair6_finish As String, _
                    ByVal project_stair6_angle As String, _
                    ByVal project_stair6_comments As String, _
                    ByVal project_stair7_location As String, _
                    ByVal project_stair7_finish As String, _
                    ByVal project_stair7_angle As String, _
                    ByVal project_stair7_comments As String, _
                    ByVal project_stair8_location As String, _
                    ByVal project_stair8_finish As String, _
                    ByVal project_stair8_angle As String, _
                    ByVal project_stair8_comments As String, _
                    ByVal project_stair9_location As String, _
                    ByVal project_stair9_finish As String, _
                    ByVal project_stair9_angle As String, _
                    ByVal project_stair9_comments As String, _
                    ByVal project_stair10_location As String, _
                    ByVal project_stair10_finish As String, _
                    ByVal project_stair10_angle As String, _
                    ByVal project_stair10_comments As String, _
                    ByVal project_stair11_location As String, _
                    ByVal project_stair11_finish As String, _
                    ByVal project_stair11_angle As String, _
                    ByVal project_stair11_comments As String, _
                    ByVal project_stair12_location As String, _
                    ByVal project_stair12_finish As String, _
                    ByVal project_stair12_angle As String, _
                    ByVal project_stair12_comments As String, _
                    ByVal project_external_checks As String, _
                    ByVal project_demo_declined As Integer, _
                    ByVal project_all_staircases_evaluated As Integer, _
                    ByVal paraid_estimated_date As Date, _
                    ByVal paraid_drawings_approved_date As Date, _
                    ByVal paraid_planned_date As Date, _
                    ByVal paraid_despatched_date As Date, _
                    ByVal dd_type As Short, _
                    ByVal dd_amount As Decimal, _
                    ByVal dd_exportdate As Date, _
                    ByVal dd_invoice_address As Short, _
                    ByVal dd_paydate As Date, _
                    ByVal dd_lastrejecteddate As Date, _
                    ByVal dd_notes As String, _
                    ByVal suggested_service_date As Date, _
                    ByVal apppointment_date As Date, _
                    ByVal apppointment_confirmed As Boolean, _
                    ByVal onhold_letter As Integer, _
                    ByVal onhold_date As Date) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(leadno, Integer)
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(account_mgr, String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(createdby, String)
            End If
            If (refno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("refno")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(refno, String)
            End If
            If (exhibitionname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exhibitionname")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(exhibitionname, String)
            End If
            If (magazinename Is Nothing) Then
                Throw New Global.System.ArgumentNullException("magazinename")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(magazinename, String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(datereceived, Date)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(dateinfosent, Date)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(visitdate, Date)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(calltimein, Date)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(calltimeout, Date)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(nooffloors, Integer)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(noofstaircasesescape, Integer)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(obsolete_noofnotifieddisabled, Integer)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(obsolete_accessofpublic, Short)
            If (obsolete_towhatfloors Is Nothing) Then
                Throw New Global.System.ArgumentNullException("obsolete_towhatfloors")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(obsolete_towhatfloors, String)
            End If
            If (obsolete_locationofrestaurant Is Nothing) Then
                Throw New Global.System.ArgumentNullException("obsolete_locationofrestaurant")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(obsolete_locationofrestaurant, String)
            End If
            If (obsolete_locationofdisabledtoilets Is Nothing) Then
                Throw New Global.System.ArgumentNullException("obsolete_locationofdisabledtoilets")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(obsolete_locationofdisabledtoilets, String)
            End If
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(suggestednoofchairs, Integer)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(obsolete_materials, Decimal)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(obsolete_lessdiscount, Decimal)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(obsolete_subtotal, Decimal)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(obsolete_postageandpackaging, Decimal)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(obsolete_labour, Decimal)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(obsolete_expenses, Decimal)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(obsolete_costtotal, Decimal)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(obsolete_vat, Decimal)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(obsolete_grandtotal, Decimal)
            If (comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("comments")
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(comments, String)
            End If
            If (repinitials Is Nothing) Then
                Throw New Global.System.ArgumentNullException("repinitials")
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(repinitials, String)
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(mailinglistdate, Date)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(demorequested, Short)
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(projectno, Integer)
            If (demoarrangedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("demoarrangedby")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(demoarrangedby, String)
            End If
            If (order_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("order_no")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(order_no, String)
            End If
            If (contract_chair_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contract_chair_no")
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(contract_chair_no, String)
            End If
            If (additional_notes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("additional_notes")
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(additional_notes, String)
            End If
            If (add_chair_inv_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("add_chair_inv_no")
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(add_chair_inv_no, String)
            End If
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(date_executed, Date)
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(date_cancelled, Date)
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(history_date, Date)
            Me.Adapter.InsertCommand.Parameters(45).Value = CType(renewal_date, Date)
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(date_trained, Date)
            If (training_done Is Nothing) Then
                Throw New Global.System.ArgumentNullException("training_done")
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(training_done, String)
            End If
            Me.Adapter.InsertCommand.Parameters(48).Value = CType(time_in, Date)
            Me.Adapter.InsertCommand.Parameters(49).Value = CType(time_out, Date)
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(duration, Decimal)
            If (evac_chair_ref_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("evac_chair_ref_no")
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(evac_chair_ref_no, String)
            End If
            If (additional_notes2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("additional_notes2")
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(additional_notes2, String)
            End If
            Me.Adapter.InsertCommand.Parameters(53).Value = CType(start_date, Date)
            Me.Adapter.InsertCommand.Parameters(54).Value = CType(completion_date, Date)
            If (contract_worksheet_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contract_worksheet_no")
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(contract_worksheet_no, String)
            End If
            Me.Adapter.InsertCommand.Parameters(56).Value = CType(no_of_chairs, Decimal)
            Me.Adapter.InsertCommand.Parameters(57).Value = CType(annual_cost, Decimal)
            If (customer_order_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("customer_order_no")
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(customer_order_no, String)
            End If
            If (quotepadref Is Nothing) Then
                Throw New Global.System.ArgumentNullException("quotepadref")
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(quotepadref, String)
            End If
            If (doc_no Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc_no")
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(doc_no, String)
            End If
            Me.Adapter.InsertCommand.Parameters(61).Value = CType(master_leadno, Integer)
            If (project_stair1_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair1_location")
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(project_stair1_location, String)
            End If
            If (project_stair1_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair1_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(project_stair1_finish, String)
            End If
            If (project_stair1_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair1_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(project_stair1_angle, String)
            End If
            If (project_stair1_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair1_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(project_stair1_comments, String)
            End If
            If (project_stair2_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair2_location")
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(project_stair2_location, String)
            End If
            If (project_stair2_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair2_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(project_stair2_finish, String)
            End If
            If (project_stair2_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair2_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(project_stair2_angle, String)
            End If
            If (project_stair2_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair2_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(project_stair2_comments, String)
            End If
            If (project_stair3_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair3_location")
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(project_stair3_location, String)
            End If
            If (project_stair3_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair3_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(project_stair3_finish, String)
            End If
            If (project_stair3_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair3_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(project_stair3_angle, String)
            End If
            If (project_stair3_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair3_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(project_stair3_comments, String)
            End If
            If (project_stair4_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair4_location")
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(project_stair4_location, String)
            End If
            If (project_stair4_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair4_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(project_stair4_finish, String)
            End If
            If (project_stair4_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair4_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(project_stair4_angle, String)
            End If
            If (project_stair4_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair4_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(project_stair4_comments, String)
            End If
            If (project_stair5_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair5_location")
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(project_stair5_location, String)
            End If
            If (project_stair5_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair5_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(project_stair5_finish, String)
            End If
            If (project_stair5_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair5_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(project_stair5_angle, String)
            End If
            If (project_stair5_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair5_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(project_stair5_comments, String)
            End If
            If (project_stair6_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair6_location")
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(project_stair6_location, String)
            End If
            If (project_stair6_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair6_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(project_stair6_finish, String)
            End If
            If (project_stair6_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair6_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(project_stair6_angle, String)
            End If
            If (project_stair6_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair6_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(project_stair6_comments, String)
            End If
            If (project_stair7_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair7_location")
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(project_stair7_location, String)
            End If
            If (project_stair7_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair7_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(project_stair7_finish, String)
            End If
            If (project_stair7_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair7_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(project_stair7_angle, String)
            End If
            If (project_stair7_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair7_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(project_stair7_comments, String)
            End If
            If (project_stair8_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair8_location")
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(project_stair8_location, String)
            End If
            If (project_stair8_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair8_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(project_stair8_finish, String)
            End If
            If (project_stair8_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair8_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(project_stair8_angle, String)
            End If
            If (project_stair8_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair8_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(project_stair8_comments, String)
            End If
            If (project_stair9_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair9_location")
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(project_stair9_location, String)
            End If
            If (project_stair9_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair9_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(project_stair9_finish, String)
            End If
            If (project_stair9_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair9_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(project_stair9_angle, String)
            End If
            If (project_stair9_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair9_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(project_stair9_comments, String)
            End If
            If (project_stair10_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair10_location")
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(project_stair10_location, String)
            End If
            If (project_stair10_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair10_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(project_stair10_finish, String)
            End If
            If (project_stair10_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair10_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(project_stair10_angle, String)
            End If
            If (project_stair10_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair10_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(project_stair10_comments, String)
            End If
            If (project_stair11_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair11_location")
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(project_stair11_location, String)
            End If
            If (project_stair11_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair11_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(project_stair11_finish, String)
            End If
            If (project_stair11_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair11_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(project_stair11_angle, String)
            End If
            If (project_stair11_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair11_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(project_stair11_comments, String)
            End If
            If (project_stair12_location Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair12_location")
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(project_stair12_location, String)
            End If
            If (project_stair12_finish Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair12_finish")
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(project_stair12_finish, String)
            End If
            If (project_stair12_angle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair12_angle")
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(project_stair12_angle, String)
            End If
            If (project_stair12_comments Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_stair12_comments")
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(project_stair12_comments, String)
            End If
            If (project_external_checks Is Nothing) Then
                Throw New Global.System.ArgumentNullException("project_external_checks")
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(project_external_checks, String)
            End If
            Me.Adapter.InsertCommand.Parameters(111).Value = CType(project_demo_declined, Integer)
            Me.Adapter.InsertCommand.Parameters(112).Value = CType(project_all_staircases_evaluated, Integer)
            Me.Adapter.InsertCommand.Parameters(113).Value = CType(paraid_estimated_date, Date)
            Me.Adapter.InsertCommand.Parameters(114).Value = CType(paraid_drawings_approved_date, Date)
            Me.Adapter.InsertCommand.Parameters(115).Value = CType(paraid_planned_date, Date)
            Me.Adapter.InsertCommand.Parameters(116).Value = CType(paraid_despatched_date, Date)
            Me.Adapter.InsertCommand.Parameters(117).Value = CType(dd_type, Short)
            Me.Adapter.InsertCommand.Parameters(118).Value = CType(dd_amount, Decimal)
            Me.Adapter.InsertCommand.Parameters(119).Value = CType(dd_exportdate, Date)
            Me.Adapter.InsertCommand.Parameters(120).Value = CType(dd_invoice_address, Short)
            Me.Adapter.InsertCommand.Parameters(121).Value = CType(dd_paydate, Date)
            Me.Adapter.InsertCommand.Parameters(122).Value = CType(dd_lastrejecteddate, Date)
            If (dd_notes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dd_notes")
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(dd_notes, String)
            End If
            Me.Adapter.InsertCommand.Parameters(124).Value = CType(suggested_service_date, Date)
            Me.Adapter.InsertCommand.Parameters(125).Value = CType(apppointment_date, Date)
            Me.Adapter.InsertCommand.Parameters(126).Value = CType(apppointment_confirmed, Boolean)
            Me.Adapter.InsertCommand.Parameters(127).Value = CType(onhold_letter, Integer)
            Me.Adapter.InsertCommand.Parameters(128).Value = CType(onhold_date, Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class userTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "user"
            tableMapping.ColumnMappings.Add("usercode", "usercode")
            tableMapping.ColumnMappings.Add("username", "username")
            tableMapping.ColumnMappings.Add("emailaddr", "emailaddr")
            tableMapping.ColumnMappings.Add("sequence", "sequence")
            tableMapping.ColumnMappings.Add("obsolete", "obsolete")
            tableMapping.ColumnMappings.Add("dictionary", "dictionary")
            tableMapping.ColumnMappings.Add("acctmgr", "acctmgr")
            tableMapping.ColumnMappings.Add("printlists", "printlists")
            tableMapping.ColumnMappings.Add("printdetails", "printdetails")
            tableMapping.ColumnMappings.Add("group", "group")
            tableMapping.ColumnMappings.Add("epros_password", "epros_password")
            tableMapping.ColumnMappings.Add("epros_By_AcctMgr", "epros_By_AcctMgr")
            tableMapping.ColumnMappings.Add("directphone", "directphone")
            tableMapping.ColumnMappings.Add("directfax", "directfax")
            tableMapping.ColumnMappings.Add("jobtitle", "jobtitle")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("firstlogin", "firstlogin")
            tableMapping.ColumnMappings.Add("lastlogin", "lastlogin")
            tableMapping.ColumnMappings.Add("mme_userid", "mme_userid")
            tableMapping.ColumnMappings.Add("mme_password", "mme_password")
            tableMapping.ColumnMappings.Add("contno", "contno")
            tableMapping.ColumnMappings.Add("epros_login", "epros_login")
            tableMapping.ColumnMappings.Add("loginmethod", "loginmethod")
            tableMapping.ColumnMappings.Add("preventexternalaccess", "preventexternalaccess")
            tableMapping.ColumnMappings.Add("wow_userid", "wow_userid")
            tableMapping.ColumnMappings.Add("wow_password", "wow_password")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""user"" (""usercode"", ""username"", ""emailaddr"", ""sequence"", ""obsol" & _
                "ete"", ""dictionary"", ""acctmgr"", ""printlists"", ""printdetails"", ""group"", ""epros_pas" & _
                "sword"", ""epros_By_AcctMgr"", ""directphone"", ""directfax"", ""jobtitle"", ""lastupdated" & _
                "timestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""firstlogin""" & _
                ", ""lastlogin"", ""mme_userid"", ""mme_password"", ""contno"", ""epros_login"", ""loginmeth" & _
                "od"", ""preventexternalaccess"", ""wow_userid"", ""wow_password"") VALUES (?, ?, ?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("usercode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "usercode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("username", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "username", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("emailaddr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "emailaddr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sequence", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sequence", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("obsolete", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "obsolete", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("dictionary", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "dictionary", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("acctmgr", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "acctmgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("printlists", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "printlists", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("printdetails", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "printdetails", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("group", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "group", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("epros_password", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "epros_password", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("epros_By_AcctMgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "epros_By_AcctMgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("directphone", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "directphone", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("directfax", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "directfax", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("jobtitle", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "jobtitle", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("firstlogin", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "firstlogin", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastlogin", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastlogin", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("mme_userid", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "mme_userid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("mme_password", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "mme_password", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("contno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "contno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("epros_login", Global.System.Data.Odbc.OdbcType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "epros_login", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("loginmethod", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "loginmethod", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("preventexternalaccess", Global.System.Data.Odbc.OdbcType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "preventexternalaccess", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wow_userid", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "wow_userid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("wow_password", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "wow_password", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""usercode"", ""username"", ""emailaddr"", ""sequence"", ""obsolete"", ""dictionary""," & _
                " ""acctmgr"", ""printlists"", ""printdetails"", ""group"", ""epros_password"", ""epros_By_A" & _
                "cctMgr"", ""directphone"", ""directfax"", ""jobtitle"", ""lastupdatedtimestamp"", ""lastup" & _
                "dated"", ""lastupdatedby"", ""created"", ""createdby"", ""firstlogin"", ""lastlogin"", ""mme" & _
                "_userid"", ""mme_password"", ""contno"", ""epros_login"", ""loginmethod"", ""preventextern" & _
                "alaccess"", ""wow_userid"", ""wow_password"" FROM ""DBA"".""user"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.userDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.userDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.userDataTable = New DataSet1.userDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.userDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "user")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal usercode As String, _
                    ByVal username As String, _
                    ByVal emailaddr As String, _
                    ByVal sequence As Integer, _
                    ByVal obsolete As Short, _
                    ByVal dictionary As String, _
                    ByVal acctmgr As Short, _
                    ByVal printlists As Short, _
                    ByVal printdetails As Short, _
                    ByVal group As String, _
                    ByVal epros_password As String, _
                    ByVal epros_By_AcctMgr As String, _
                    ByVal directphone As String, _
                    ByVal directfax As String, _
                    ByVal jobtitle As String, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal createdby As String, _
                    ByVal firstlogin As Date, _
                    ByVal lastlogin As Date, _
                    ByVal mme_userid As String, _
                    ByVal mme_password As String, _
                    ByVal contno As Integer, _
                    ByVal epros_login As Byte, _
                    ByVal loginmethod As String, _
                    ByVal preventexternalaccess As Short, _
                    ByVal wow_userid As String, _
                    ByVal wow_password As String) As Integer
            If (usercode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("usercode")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(usercode, String)
            End If
            If (username Is Nothing) Then
                Throw New Global.System.ArgumentNullException("username")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(username, String)
            End If
            If (emailaddr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("emailaddr")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(emailaddr, String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(sequence, Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(obsolete, Short)
            If (dictionary Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dictionary")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(dictionary, String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(acctmgr, Short)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(printlists, Short)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(printdetails, Short)
            If (group Is Nothing) Then
                Throw New Global.System.ArgumentNullException("group")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(group, String)
            End If
            If (epros_password Is Nothing) Then
                Throw New Global.System.ArgumentNullException("epros_password")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(epros_password, String)
            End If
            If (epros_By_AcctMgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("epros_By_AcctMgr")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(epros_By_AcctMgr, String)
            End If
            If (directphone Is Nothing) Then
                Throw New Global.System.ArgumentNullException("directphone")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(directphone, String)
            End If
            If (directfax Is Nothing) Then
                Throw New Global.System.ArgumentNullException("directfax")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(directfax, String)
            End If
            If (jobtitle Is Nothing) Then
                Throw New Global.System.ArgumentNullException("jobtitle")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(jobtitle, String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(createdby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(firstlogin, Date)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(lastlogin, Date)
            If (mme_userid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("mme_userid")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(mme_userid, String)
            End If
            If (mme_password Is Nothing) Then
                Throw New Global.System.ArgumentNullException("mme_password")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(mme_password, String)
            End If
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(contno, Integer)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(epros_login, Byte)
            If (loginmethod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("loginmethod")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(loginmethod, String)
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(preventexternalaccess, Short)
            If (wow_userid Is Nothing) Then
                Throw New Global.System.ArgumentNullException("wow_userid")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(wow_userid, String)
            End If
            If (wow_password Is Nothing) Then
                Throw New Global.System.ArgumentNullException("wow_password")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(wow_password, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class engineer_locationsTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "engineer_locations"
            tableMapping.ColumnMappings.Add("engineerno", "engineerno")
            tableMapping.ColumnMappings.Add("engineer", "engineer")
            tableMapping.ColumnMappings.Add("engineer_postcode", "engineer_postcode")
            tableMapping.ColumnMappings.Add("engineer_longitude", "engineer_longitude")
            tableMapping.ColumnMappings.Add("engineer_latitude", "engineer_latitude")
            tableMapping.ColumnMappings.Add("engineer_name", "engineer_name")
            tableMapping.ColumnMappings.Add("engineer_colour", "engineer_colour")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""engineer_locations"" (""engineer"", ""engineer_postcode"", ""enginee" & _
                "r_longitude"", ""engineer_latitude"", ""engineer_name"", ""engineer_colour"") VALUES (?" & _
                ", ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineer", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "engineer", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineer_postcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "engineer_postcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineer_longitude", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(9, Byte), CType(6, Byte), "engineer_longitude", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineer_latitude", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(9, Byte), CType(6, Byte), "engineer_latitude", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineer_name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "engineer_name", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineer_colour", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "engineer_colour", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""engineerno"", ""engineer"", ""engineer_postcode"", ""engineer_longitude"", ""engi" & _
                "neer_latitude"", ""engineer_name"", ""engineer_colour"" FROM ""DBA"".""engineer_location" & _
                "s"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ""engineerno"", ""engineer"", ""engineer_postcode"", ""engineer_longitude"", ""engi" & _
                "neer_latitude"", ""engineer_name"", ""engineer_colour"" FROM ""DBA"".""engineer_location" & _
                "s"" where engineerno = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("engineerno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "engineerno", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.engineer_locationsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.engineer_locationsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.engineer_locationsDataTable = New DataSet1.engineer_locationsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy(ByVal dataTable As DataSet1.engineer_locationsDataTable, ByVal engineerno As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(engineerno, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBy(ByVal engineerno As Integer) As DataSet1.engineer_locationsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(engineerno, Integer)
            Dim dataTable As DataSet1.engineer_locationsDataTable = New DataSet1.engineer_locationsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.engineer_locationsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "engineer_locations")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal engineer As String, ByVal engineer_postcode As String, ByVal engineer_longitude As Decimal, ByVal engineer_latitude As Decimal, ByVal engineer_name As String, ByVal engineer_colour As Integer) As Integer
            If (engineer Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engineer")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(engineer, String)
            End If
            If (engineer_postcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engineer_postcode")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(engineer_postcode, String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(engineer_longitude, Decimal)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(engineer_latitude, Decimal)
            If (engineer_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("engineer_name")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(engineer_name, String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(engineer_colour, Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class divisionaddressTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "divisionaddress"
            tableMapping.ColumnMappings.Add("addrno", "addrno")
            tableMapping.ColumnMappings.Add("address1", "address1")
            tableMapping.ColumnMappings.Add("address2", "address2")
            tableMapping.ColumnMappings.Add("address3", "address3")
            tableMapping.ColumnMappings.Add("country", "country")
            tableMapping.ColumnMappings.Add("postcode", "postcode")
            tableMapping.ColumnMappings.Add("regionno", "regionno")
            tableMapping.ColumnMappings.Add("postcdtype", "postcdtype")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("address4", "address4")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("outcode", "outcode")
            tableMapping.ColumnMappings.Add("longitude", "longitude")
            tableMapping.ColumnMappings.Add("latitude", "latitude")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""address"" (""addrno"", ""address1"", ""address2"", ""address3"", ""count" & _
                "ry"", ""postcode"", ""regionno"", ""postcdtype"", ""account_mgr"", ""address4"", ""lastupdat" & _
                "edtimestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""outcode""," & _
                " ""longitude"", ""latitude"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("addrno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "addrno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("country", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "country", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("postcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "postcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("regionno", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "regionno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("postcdtype", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "postcdtype", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("outcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "outcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("longitude", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(9, Byte), CType(6, Byte), "longitude", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("latitude", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(9, Byte), CType(6, Byte), "latitude", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""addrno"", ""address1"", ""address2"", ""address3"", ""country"", ""postcode"", ""regi" & _
                "onno"", ""postcdtype"", ""account_mgr"", ""address4"", ""lastupdatedtimestamp"", ""lastupd" & _
                "ated"", ""lastupdatedby"", ""created"", ""createdby"", ""outcode"", ""longitude"", ""latitud" & _
                "e"" FROM ""DBA"".""address"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.divisionaddressDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.divisionaddressDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.divisionaddressDataTable = New DataSet1.divisionaddressDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.divisionaddressDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "divisionaddress")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal addrno As Integer, _
                    ByVal address1 As String, _
                    ByVal address2 As String, _
                    ByVal address3 As String, _
                    ByVal country As String, _
                    ByVal postcode As String, _
                    ByVal regionno As String, _
                    ByVal postcdtype As String, _
                    ByVal account_mgr As String, _
                    ByVal address4 As String, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal createdby As String, _
                    ByVal outcode As String, _
                    ByVal longitude As Decimal, _
                    ByVal latitude As Decimal) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(addrno, Integer)
            If (address1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address1")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(address1, String)
            End If
            If (address2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address2")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(address2, String)
            End If
            If (address3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address3")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(address3, String)
            End If
            If (country Is Nothing) Then
                Throw New Global.System.ArgumentNullException("country")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(country, String)
            End If
            If (postcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("postcode")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(postcode, String)
            End If
            If (regionno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("regionno")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(regionno, String)
            End If
            If (postcdtype Is Nothing) Then
                Throw New Global.System.ArgumentNullException("postcdtype")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(postcdtype, String)
            End If
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(account_mgr, String)
            End If
            If (address4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address4")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(address4, String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(createdby, String)
            End If
            If (outcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("outcode")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(outcode, String)
            End If
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(longitude, Decimal)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(latitude, Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class companyTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "company"
            tableMapping.ColumnMappings.Add("compno", "compno")
            tableMapping.ColumnMappings.Add("compname", "compname")
            tableMapping.ColumnMappings.Add("comptypecd", "comptypecd")
            tableMapping.ColumnMappings.Add("owner", "owner")
            tableMapping.ColumnMappings.Add("compname_soundex", "compname_soundex")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("StatusFlag", "StatusFlag")
            tableMapping.ColumnMappings.Add("bgid", "bgid")
            tableMapping.ColumnMappings.Add("sys_a_objects_key", "sys_a_objects_key")
            tableMapping.ColumnMappings.Add("source", "source")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""company"" (""compno"", ""compname"", ""comptypecd"", ""owner"", ""compna" & _
                "me_soundex"", ""lastupdatedtimestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", " & _
                """createdby"", ""StatusFlag"", ""bgid"", ""sys_a_objects_key"", ""source"") VALUES (?, ?, " & _
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("compno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "compno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("compname", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "compname", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("comptypecd", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "comptypecd", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("owner", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "owner", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("compname_soundex", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "compname_soundex", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("StatusFlag", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "StatusFlag", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("bgid", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "bgid", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("sys_a_objects_key", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "sys_a_objects_key", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("source", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "source", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""compno"", ""compname"", ""comptypecd"", ""owner"", ""compname_soundex"", ""lastupda" & _
                "tedtimestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""StatusFl" & _
                "ag"", ""bgid"", ""sys_a_objects_key"", ""source"" FROM ""DBA"".""company"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.companyDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.companyDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.companyDataTable = New DataSet1.companyDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.companyDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "company")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert(ByVal compno As Integer, ByVal compname As String, ByVal comptypecd As String, ByVal owner As String, ByVal compname_soundex As Integer, ByVal lastupdatedtimestamp As Date, ByVal lastupdated As Date, ByVal lastupdatedby As String, ByVal created As Date, ByVal createdby As String, ByVal StatusFlag As String, ByVal bgid As Integer, ByVal sys_a_objects_key As String, ByVal source As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(compno, Integer)
            If (compname Is Nothing) Then
                Throw New Global.System.ArgumentNullException("compname")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(compname, String)
            End If
            If (comptypecd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("comptypecd")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(comptypecd, String)
            End If
            If (owner Is Nothing) Then
                Throw New Global.System.ArgumentNullException("owner")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(owner, String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(compname_soundex, Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(createdby, String)
            End If
            If (StatusFlag Is Nothing) Then
                Throw New Global.System.ArgumentNullException("StatusFlag")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(StatusFlag, String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(bgid, Integer)
            If (sys_a_objects_key Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sys_a_objects_key")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(sys_a_objects_key, String)
            End If
            If (source Is Nothing) Then
                Throw New Global.System.ArgumentNullException("source")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(source, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class contactaddressTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "contactaddress"
            tableMapping.ColumnMappings.Add("addrno", "addrno")
            tableMapping.ColumnMappings.Add("address1", "address1")
            tableMapping.ColumnMappings.Add("address2", "address2")
            tableMapping.ColumnMappings.Add("address3", "address3")
            tableMapping.ColumnMappings.Add("country", "country")
            tableMapping.ColumnMappings.Add("postcode", "postcode")
            tableMapping.ColumnMappings.Add("regionno", "regionno")
            tableMapping.ColumnMappings.Add("postcdtype", "postcdtype")
            tableMapping.ColumnMappings.Add("account_mgr", "account_mgr")
            tableMapping.ColumnMappings.Add("address4", "address4")
            tableMapping.ColumnMappings.Add("lastupdatedtimestamp", "lastupdatedtimestamp")
            tableMapping.ColumnMappings.Add("lastupdated", "lastupdated")
            tableMapping.ColumnMappings.Add("lastupdatedby", "lastupdatedby")
            tableMapping.ColumnMappings.Add("created", "created")
            tableMapping.ColumnMappings.Add("createdby", "createdby")
            tableMapping.ColumnMappings.Add("outcode", "outcode")
            tableMapping.ColumnMappings.Add("longitude", "longitude")
            tableMapping.ColumnMappings.Add("latitude", "latitude")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""DBA"".""address"" (""addrno"", ""address1"", ""address2"", ""address3"", ""count" & _
                "ry"", ""postcode"", ""regionno"", ""postcdtype"", ""account_mgr"", ""address4"", ""lastupdat" & _
                "edtimestamp"", ""lastupdated"", ""lastupdatedby"", ""created"", ""createdby"", ""outcode""," & _
                " ""longitude"", ""latitude"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" & _
                ", ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("addrno", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "addrno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address1", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address1", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address2", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address2", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address3", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address3", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("country", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "country", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("postcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "postcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("regionno", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "regionno", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("postcdtype", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "postcdtype", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("account_mgr", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "account_mgr", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("address4", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "address4", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedtimestamp", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedtimestamp", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdated", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("lastupdatedby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "lastupdatedby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("created", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "created", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("createdby", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "createdby", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("outcode", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "outcode", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("longitude", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(9, Byte), CType(6, Byte), "longitude", Global.System.Data.DataRowVersion.Current, False, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("latitude", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(9, Byte), CType(6, Byte), "latitude", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""addrno"", ""address1"", ""address2"", ""address3"", ""country"", ""postcode"", ""regi" & _
                "onno"", ""postcdtype"", ""account_mgr"", ""address4"", ""lastupdatedtimestamp"", ""lastupd" & _
                "ated"", ""lastupdatedby"", ""created"", ""createdby"", ""outcode"", ""longitude"", ""latitud" & _
                "e"" FROM ""DBA"".""address"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.contactaddressDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.contactaddressDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.contactaddressDataTable = New DataSet1.contactaddressDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataTable As DataSet1.contactaddressDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "contactaddress")
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, True)> _
        Public Overridable Overloads Function Insert( _
                    ByVal addrno As Integer, _
                    ByVal address1 As String, _
                    ByVal address2 As String, _
                    ByVal address3 As String, _
                    ByVal country As String, _
                    ByVal postcode As String, _
                    ByVal regionno As String, _
                    ByVal postcdtype As String, _
                    ByVal account_mgr As String, _
                    ByVal address4 As String, _
                    ByVal lastupdatedtimestamp As Date, _
                    ByVal lastupdated As Date, _
                    ByVal lastupdatedby As String, _
                    ByVal created As Date, _
                    ByVal createdby As String, _
                    ByVal outcode As String, _
                    ByVal longitude As Decimal, _
                    ByVal latitude As Decimal) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(addrno, Integer)
            If (address1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address1")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(address1, String)
            End If
            If (address2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address2")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(address2, String)
            End If
            If (address3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address3")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(address3, String)
            End If
            If (country Is Nothing) Then
                Throw New Global.System.ArgumentNullException("country")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(country, String)
            End If
            If (postcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("postcode")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(postcode, String)
            End If
            If (regionno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("regionno")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(regionno, String)
            End If
            If (postcdtype Is Nothing) Then
                Throw New Global.System.ArgumentNullException("postcdtype")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(postcdtype, String)
            End If
            If (account_mgr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("account_mgr")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(account_mgr, String)
            End If
            If (address4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address4")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(address4, String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(lastupdatedtimestamp, Date)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(lastupdated, Date)
            If (lastupdatedby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("lastupdatedby")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(lastupdatedby, String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(created, Date)
            If (createdby Is Nothing) Then
                Throw New Global.System.ArgumentNullException("createdby")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(createdby, String)
            End If
            If (outcode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("outcode")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(outcode, String)
            End If
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(longitude, Decimal)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(latitude, Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open()
            End If
            Try
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close()
                End If
            End Try
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class central_diaryTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter

        Private _connection As Global.System.Data.Odbc.OdbcConnection

        Private _transaction As Global.System.Data.Odbc.OdbcTransaction

        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.Odbc.OdbcConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.Odbc.OdbcTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "central_diary"
            tableMapping.ColumnMappings.Add("AppType", "AppType")
            tableMapping.ColumnMappings.Add("Leadno", "Leadno")
            tableMapping.ColumnMappings.Add("no_of_chairs", "no_of_chairs")
            tableMapping.ColumnMappings.Add("EndDate", "EndDate")
            tableMapping.ColumnMappings.Add("AllDay", "AllDay")
            tableMapping.ColumnMappings.Add("Subject", "Subject")
            tableMapping.ColumnMappings.Add("AppLocation", "AppLocation")
            tableMapping.ColumnMappings.Add("AppDescription", "AppDescription")
            tableMapping.ColumnMappings.Add("AppStatus", "AppStatus")
            tableMapping.ColumnMappings.Add("Label", "Label")
            tableMapping.ColumnMappings.Add("ReminderInfo", "ReminderInfo")
            tableMapping.ColumnMappings.Add("RecurrenceInfo", "RecurrenceInfo")
            tableMapping.ColumnMappings.Add("central_diaryno", "central_diaryno")
            tableMapping.ColumnMappings.Add("confirmed", "confirmed")
            tableMapping.ColumnMappings.Add("longitude", "longitude")
            tableMapping.ColumnMappings.Add("latitude", "latitude")
            tableMapping.ColumnMappings.Add("OutlookEntryID", "OutlookEntryID")
            tableMapping.ColumnMappings.Add("BookedDate", "BookedDate")
            tableMapping.ColumnMappings.Add("UserId", "UserId")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.EvacRemote.Settings.Default.ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     AppType, Leadno, no_of_chairs, BookedDate, EndDate, AllDay, Subject, A" & _
                "ppLocation, AppDescription, AppStatus, Label, ReminderInfo, RecurrenceInfo, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                    central_diaryno, confirmed, longitude, latitude, UserId, Out" & _
                "lookEntryID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM         DBA.central_diary" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     AppType, Leadno, no_of_chairs, BookedDate, EndDate, AllDay, Subject, A" & _
                "ppLocation, AppDescription, AppStatus, Label, ReminderInfo, RecurrenceInfo, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                    central_diaryno, confirmed, longitude, latitude, UserId, Out" & _
                "lookEntryID" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM         DBA.central_diary" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE     (UserId = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserId", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0, Byte), CType(0, Byte), "UserId", Global.System.Data.DataRowVersion.Current, False, Nothing))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DataSet1.central_diaryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DataSet1.central_diaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.central_diaryDataTable = New DataSet1.central_diaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy(ByVal dataTable As DataSet1.central_diaryDataTable, ByVal UserId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (UserId.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(UserId.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBy(ByVal UserId As Global.System.Nullable(Of Integer)) As DataSet1.central_diaryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (UserId.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(UserId.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DataSet1.central_diaryDataTable = New DataSet1.central_diaryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _contactTableAdapter As contactTableAdapter
        
        Private _contact_xtraTableAdapter As contact_xtraTableAdapter
        
        Private _divisionTableAdapter As divisionTableAdapter
        
        Private _division_xtraTableAdapter As division_xtraTableAdapter
        
        Private _leadTableAdapter As leadTableAdapter
        
        Private _lead_xtraTableAdapter As lead_xtraTableAdapter
        
        Private _userTableAdapter As userTableAdapter
        
        Private _engineer_locationsTableAdapter As engineer_locationsTableAdapter
        
        Private _divisionaddressTableAdapter As divisionaddressTableAdapter
        
        Private _companyTableAdapter As companyTableAdapter
        
        Private _contactaddressTableAdapter As contactaddressTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property contactTableAdapter() As contactTableAdapter
            Get
                Return Me._contactTableAdapter
            End Get
            Set
                Me._contactTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property contact_xtraTableAdapter() As contact_xtraTableAdapter
            Get
                Return Me._contact_xtraTableAdapter
            End Get
            Set
                Me._contact_xtraTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property divisionTableAdapter() As divisionTableAdapter
            Get
                Return Me._divisionTableAdapter
            End Get
            Set
                Me._divisionTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property division_xtraTableAdapter() As division_xtraTableAdapter
            Get
                Return Me._division_xtraTableAdapter
            End Get
            Set
                Me._division_xtraTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property leadTableAdapter() As leadTableAdapter
            Get
                Return Me._leadTableAdapter
            End Get
            Set
                Me._leadTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property lead_xtraTableAdapter() As lead_xtraTableAdapter
            Get
                Return Me._lead_xtraTableAdapter
            End Get
            Set
                Me._lead_xtraTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property userTableAdapter() As userTableAdapter
            Get
                Return Me._userTableAdapter
            End Get
            Set
                Me._userTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property engineer_locationsTableAdapter() As engineer_locationsTableAdapter
            Get
                Return Me._engineer_locationsTableAdapter
            End Get
            Set
                Me._engineer_locationsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property divisionaddressTableAdapter() As divisionaddressTableAdapter
            Get
                Return Me._divisionaddressTableAdapter
            End Get
            Set
                Me._divisionaddressTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property companyTableAdapter() As companyTableAdapter
            Get
                Return Me._companyTableAdapter
            End Get
            Set
                Me._companyTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property contactaddressTableAdapter() As contactaddressTableAdapter
            Get
                Return Me._contactaddressTableAdapter
            End Get
            Set
                Me._contactaddressTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._contactTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._contactTableAdapter.Connection) Is Nothing)) Then
                    Return Me._contactTableAdapter.Connection
                End If
                If ((Not (Me._contact_xtraTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._contact_xtraTableAdapter.Connection) Is Nothing)) Then
                    Return Me._contact_xtraTableAdapter.Connection
                End If
                If ((Not (Me._divisionTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._divisionTableAdapter.Connection) Is Nothing)) Then
                    Return Me._divisionTableAdapter.Connection
                End If
                If ((Not (Me._division_xtraTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._division_xtraTableAdapter.Connection) Is Nothing)) Then
                    Return Me._division_xtraTableAdapter.Connection
                End If
                If ((Not (Me._leadTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._leadTableAdapter.Connection) Is Nothing)) Then
                    Return Me._leadTableAdapter.Connection
                End If
                If ((Not (Me._lead_xtraTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._lead_xtraTableAdapter.Connection) Is Nothing)) Then
                    Return Me._lead_xtraTableAdapter.Connection
                End If
                If ((Not (Me._userTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._userTableAdapter.Connection) Is Nothing)) Then
                    Return Me._userTableAdapter.Connection
                End If
                If ((Not (Me._engineer_locationsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._engineer_locationsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._engineer_locationsTableAdapter.Connection
                End If
                If ((Not (Me._divisionaddressTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._divisionaddressTableAdapter.Connection) Is Nothing)) Then
                    Return Me._divisionaddressTableAdapter.Connection
                End If
                If ((Not (Me._companyTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._companyTableAdapter.Connection) Is Nothing)) Then
                    Return Me._companyTableAdapter.Connection
                End If
                If ((Not (Me._contactaddressTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._contactaddressTableAdapter.Connection) Is Nothing)) Then
                    Return Me._contactaddressTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._contactTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._contact_xtraTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._divisionTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._division_xtraTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._leadTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._lead_xtraTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._userTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._engineer_locationsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._divisionaddressTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._companyTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._contactaddressTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._contactTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.contact.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._contactTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._contact_xtraTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.contact_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._contact_xtraTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._divisionTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.division.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._divisionTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._division_xtraTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.division_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._division_xtraTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._leadTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.lead.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._leadTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._lead_xtraTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.lead_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._lead_xtraTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._userTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.user.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._userTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._engineer_locationsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.engineer_locations.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._engineer_locationsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._divisionaddressTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.divisionaddress.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._divisionaddressTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._companyTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.company.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._companyTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._contactaddressTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.contactaddress.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._contactaddressTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._contactTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.contact.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._contactTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._contact_xtraTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.contact_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._contact_xtraTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._divisionTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.division.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._divisionTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._division_xtraTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.division_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._division_xtraTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._leadTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.lead.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._leadTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._lead_xtraTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.lead_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._lead_xtraTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._userTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.user.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._userTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._engineer_locationsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.engineer_locations.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._engineer_locationsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._divisionaddressTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.divisionaddress.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._divisionaddressTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._companyTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.company.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._companyTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._contactaddressTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.contactaddress.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._contactaddressTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._contactaddressTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.contactaddress.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._contactaddressTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._companyTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.company.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._companyTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._divisionaddressTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.divisionaddress.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._divisionaddressTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._engineer_locationsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.engineer_locations.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._engineer_locationsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._userTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.user.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._userTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._lead_xtraTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.lead_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._lead_xtraTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._leadTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.lead.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._leadTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._division_xtraTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.division_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._division_xtraTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._divisionTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.division.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._divisionTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._contact_xtraTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.contact_xtra.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._contact_xtraTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._contactTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.contact.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._contactTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._contactTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._contactTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._contact_xtraTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._contact_xtraTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._divisionTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._divisionTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._division_xtraTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._division_xtraTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._leadTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._leadTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._lead_xtraTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._lead_xtraTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._userTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._userTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._engineer_locationsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._engineer_locationsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._divisionaddressTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._divisionaddressTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._companyTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._companyTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._contactaddressTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._contactaddressTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._contactTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._contactTableAdapter, Me._contactTableAdapter.Connection)
                    Me._contactTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._contactTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._contactTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._contactTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._contactTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._contact_xtraTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._contact_xtraTableAdapter, Me._contact_xtraTableAdapter.Connection)
                    Me._contact_xtraTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._contact_xtraTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._contact_xtraTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._contact_xtraTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._contact_xtraTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._divisionTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._divisionTableAdapter, Me._divisionTableAdapter.Connection)
                    Me._divisionTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._divisionTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._divisionTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._divisionTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._divisionTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._division_xtraTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._division_xtraTableAdapter, Me._division_xtraTableAdapter.Connection)
                    Me._division_xtraTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._division_xtraTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._division_xtraTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._division_xtraTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._division_xtraTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._leadTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._leadTableAdapter, Me._leadTableAdapter.Connection)
                    Me._leadTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._leadTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._leadTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._leadTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._leadTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._lead_xtraTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._lead_xtraTableAdapter, Me._lead_xtraTableAdapter.Connection)
                    Me._lead_xtraTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._lead_xtraTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._lead_xtraTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._lead_xtraTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._lead_xtraTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._userTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._userTableAdapter, Me._userTableAdapter.Connection)
                    Me._userTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._userTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._userTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._userTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._userTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._engineer_locationsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._engineer_locationsTableAdapter, Me._engineer_locationsTableAdapter.Connection)
                    Me._engineer_locationsTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._engineer_locationsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._engineer_locationsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._engineer_locationsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._engineer_locationsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._divisionaddressTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._divisionaddressTableAdapter, Me._divisionaddressTableAdapter.Connection)
                    Me._divisionaddressTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._divisionaddressTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._divisionaddressTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._divisionaddressTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._divisionaddressTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._companyTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._companyTableAdapter, Me._companyTableAdapter.Connection)
                    Me._companyTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._companyTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._companyTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._companyTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._companyTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._contactaddressTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._contactaddressTableAdapter, Me._contactaddressTableAdapter.Connection)
                    Me._contactaddressTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._contactaddressTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._contactaddressTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._contactaddressTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._contactaddressTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._contactTableAdapter) Is Nothing) Then
                    Me._contactTableAdapter.Connection = CType(revertConnections(Me._contactTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._contactTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._contact_xtraTableAdapter) Is Nothing) Then
                    Me._contact_xtraTableAdapter.Connection = CType(revertConnections(Me._contact_xtraTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._contact_xtraTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._divisionTableAdapter) Is Nothing) Then
                    Me._divisionTableAdapter.Connection = CType(revertConnections(Me._divisionTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._divisionTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._division_xtraTableAdapter) Is Nothing) Then
                    Me._division_xtraTableAdapter.Connection = CType(revertConnections(Me._division_xtraTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._division_xtraTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._leadTableAdapter) Is Nothing) Then
                    Me._leadTableAdapter.Connection = CType(revertConnections(Me._leadTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._leadTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._lead_xtraTableAdapter) Is Nothing) Then
                    Me._lead_xtraTableAdapter.Connection = CType(revertConnections(Me._lead_xtraTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._lead_xtraTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._userTableAdapter) Is Nothing) Then
                    Me._userTableAdapter.Connection = CType(revertConnections(Me._userTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._userTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._engineer_locationsTableAdapter) Is Nothing) Then
                    Me._engineer_locationsTableAdapter.Connection = CType(revertConnections(Me._engineer_locationsTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._engineer_locationsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._divisionaddressTableAdapter) Is Nothing) Then
                    Me._divisionaddressTableAdapter.Connection = CType(revertConnections(Me._divisionaddressTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._divisionaddressTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._companyTableAdapter) Is Nothing) Then
                    Me._companyTableAdapter.Connection = CType(revertConnections(Me._companyTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._companyTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._contactaddressTableAdapter) Is Nothing) Then
                    Me._contactaddressTableAdapter.Connection = CType(revertConnections(Me._contactaddressTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._contactaddressTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
