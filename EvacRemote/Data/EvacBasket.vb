'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
Imports System
Imports DevExpress.Xpo
Imports DevExpress.Data.Filtering
Imports System.Collections.Generic
Imports System.ComponentModel


Public Class Basket
    Private _parent As frmMain = Nothing
    Private _Basket As BasketHeader
    Private _session As UnitOfWork
    Public Sub New(ByVal session As Session, ByVal parent As frmMain, ByVal iContact As Integer)
        ParentFormMain = parent
        _session = session
        _Basket = _session.FindObject(Of BasketHeader)(CriteriaOperator.Parse("_division = ?", iDivison))
        If _Basket Is Nothing Then
            _Basket = New BasketHeader(_session)
        Else
            ParentFormMain.BasketEnabled(True)
        End If
    End Sub

    Public Property ParentFormMain() As frmMain
        Get
            Return _parent
        End Get
        Set(ByVal value As frmMain)
            If (Not Object.Equals(_parent, Nothing)) Then
                Return
            End If
            _parent = value
        End Set
    End Property
    Public ReadOnly Property Items() As XPCollection(Of BasketItem)
        Get
            Return _Basket.Items
        End Get
    End Property

    Public Sub AddItem(ByVal iProduct As Integer, ByVal iQty As Integer)
        Dim bNew As Boolean = True
        For Each oLine As BasketItem In _Basket.Items
            If oLine.Product = iProduct Then
                oLine.Qty += iQty
                bNew = False
                Exit For
            End If
        Next
        If bNew = True Then
            Dim oProduct = _session.FindObject(Of Product)(CriteriaOperator.Parse("productId = ?", iProduct))
            Dim oLine As New BasketItem(_session)
            oLine.Product = iProduct
            oLine.Reference = oProduct.name
            oLine.Description = oProduct.description
            oLine.Qty = iQty
            _Basket.Items.Add(oLine)
        End If
        ParentFormMain.BasketEnabled(True)
    End Sub
End Class

Public Class BasketHeader
    Inherits XPCustomObject
    Public Sub New(ByVal session As Session)
        MyBase.New(session)
    End Sub
    <Persistent("Oid"), Key(True), Browsable(False), MemberDesignTimeVisibility(False)> _
    Private _Oid As Guid = Guid.Empty
    <PersistentAlias("_Oid"), Browsable(False)> _
    Public ReadOnly Property Oid() As Guid
        Get
            Return _Oid
        End Get
    End Property
    Protected Overrides Sub OnSaving()
        MyBase.OnSaving()
        If Not (TypeOf Session Is NestedUnitOfWork) AndAlso Session.IsNewObject(Me) Then
            _Oid = XpoDefault.NewGuid()
        End If
    End Sub
    Private _division As Integer
    Public Property Division() As Integer
        Get
            Return _division
        End Get
        Set(ByVal value As Integer)
            _division = value
        End Set
    End Property
    Private _date As Date?
    Public Property OrderDate() As Date?
        Get
            Return _date
        End Get
        Set(ByVal value As Date?)
            _date = value
        End Set
    End Property
    <Association("BasketItem")> _
    Public ReadOnly Property Items() As XPCollection(Of BasketItem)
        Get
            Return GetCollection(Of BasketItem)("Items")
        End Get
    End Property
End Class
Public Class BasketItem
    Inherits XPCustomObject
    Private reference_Renamed As String
    Private description_Renamed As String
    Private qty_Renamed As Integer

    Public Sub New(ByVal session As Session)
        MyBase.New(session)
    End Sub
    <Persistent("Oid"), Key(True), Browsable(False), MemberDesignTimeVisibility(False)> _
    Private _Oid As Guid = Guid.Empty
    <PersistentAlias("_Oid"), Browsable(False)> _
    Public ReadOnly Property Oid() As Guid
        Get
            Return _Oid
        End Get
    End Property
    Protected Overrides Sub OnSaving()
        MyBase.OnSaving()
        If Not (TypeOf Session Is NestedUnitOfWork) AndAlso Session.IsNewObject(Me) Then
            _Oid = XpoDefault.NewGuid()
        End If
    End Sub
    Private fBasket As BasketHeader
    <Association("BasketItem")> _
    Public Property Basket() As BasketHeader
        Get
            Return fBasket
        End Get
        Set(ByVal value As BasketHeader)
            SetPropertyValue(Of BasketHeader)("Basket", fBasket, value)
        End Set
    End Property
    Private _Product As Integer
    Public Property Product() As Integer
        Get
            Return _Product
        End Get
        Set(value As Integer)
            _Product = value
        End Set
    End Property
    Public Property Reference() As String
        Get
            Return reference_Renamed
        End Get
        Set(value As String)
            reference_Renamed = value
        End Set
    End Property
    Public Property Description() As String
        Get
            Return description_Renamed
        End Get
        Set(value As String)
            description_Renamed = value
        End Set
    End Property
    Public Property Qty() As Integer
        Get
            Return qty_Renamed
        End Get
        Set(value As Integer)
            qty_Renamed = value
        End Set
    End Property
End Class

